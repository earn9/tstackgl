{"version":3,"sources":["../../../node_modules/@thi.ng/hdom/api.js","../../../node_modules/@thi.ng/api/api.js","../../../node_modules/@thi.ng/equiv/index.js","../../../node_modules/@thi.ng/diff/array.js","../../../node_modules/@thi.ng/diff/object.js","../../../node_modules/@thi.ng/hdom/diff.js","../../../node_modules/@thi.ng/checks/is-array.js","../../../node_modules/@thi.ng/checks/is-not-string-iterable.js","../../../node_modules/@thi.ng/hiccup/api.js","../../../node_modules/@thi.ng/checks/is-function.js","../../../node_modules/@thi.ng/hiccup/css.js","../../../node_modules/@thi.ng/hdom/dom.js","../../../node_modules/@thi.ng/checks/is-plain-object.js","../../../node_modules/@thi.ng/errors/illegal-arguments.js","../../../node_modules/@thi.ng/hdom/normalize.js","../../../node_modules/@thi.ng/hdom/default.js","../../../node_modules/@thi.ng/checks/implements-function.js","../../../node_modules/@thi.ng/hiccup/deref.js","../../../node_modules/@thi.ng/checks/is-string.js","../../../node_modules/@thi.ng/hdom/utils.js","../../../node_modules/@thi.ng/hdom/render-once.js","../../../node_modules/@thi.ng/hdom/start.js","../../../node_modules/@thi.ng/hdom/index.js","../../../node_modules/@thi.ng/hdom-components/canvas.js","../../../node_modules/@thi.ng/checks/exists-not-null.js","../../../node_modules/@thi.ng/checks/exists.js","../../../node_modules/@thi.ng/checks/has-crypto.js","../../../node_modules/@thi.ng/checks/has-max-length.js","../../../node_modules/@thi.ng/checks/has-min-length.js","../../../node_modules/@thi.ng/checks/has-performance.js","../../../node_modules/@thi.ng/checks/has-wasm.js","../../../node_modules/@thi.ng/checks/has-webgl.js","../../../node_modules/@thi.ng/checks/has-websocket.js","../../../node_modules/@thi.ng/checks/is-arraylike.js","../../../node_modules/@thi.ng/checks/is-blob.js","../../../node_modules/@thi.ng/checks/is-boolean.js","../../../node_modules/@thi.ng/checks/is-chrome.js","../../../node_modules/@thi.ng/checks/is-date.js","../../../node_modules/@thi.ng/checks/is-even.js","../../../node_modules/@thi.ng/checks/is-false.js","../../../node_modules/@thi.ng/checks/is-file.js","../../../node_modules/@thi.ng/checks/is-firefox.js","../../../node_modules/@thi.ng/checks/is-ie.js","../../../node_modules/@thi.ng/checks/is-in-range.js","../../../node_modules/@thi.ng/checks/is-int32.js","../../../node_modules/@thi.ng/checks/is-iterable.js","../../../node_modules/@thi.ng/checks/is-map.js","../../../node_modules/@thi.ng/checks/is-mobile.js","../../../node_modules/@thi.ng/checks/is-nan.js","../../../node_modules/@thi.ng/checks/is-negative.js","../../../node_modules/@thi.ng/checks/is-node.js","../../../node_modules/@thi.ng/checks/is-null.js","../../../node_modules/@thi.ng/checks/is-number.js","../../../node_modules/@thi.ng/checks/is-object.js","../../../node_modules/@thi.ng/checks/is-odd.js","../../../node_modules/@thi.ng/checks/is-positive.js","../../../node_modules/@thi.ng/checks/is-promise.js","../../../node_modules/@thi.ng/checks/is-promiselike.js","../../../node_modules/@thi.ng/checks/is-regexp.js","../../../node_modules/@thi.ng/checks/is-safari.js","../../../node_modules/@thi.ng/checks/is-set.js","../../../node_modules/@thi.ng/checks/is-symbol.js","../../../node_modules/@thi.ng/checks/is-transferable.js","../../../node_modules/@thi.ng/checks/is-true.js","../../../node_modules/@thi.ng/checks/is-typedarray.js","../../../node_modules/@thi.ng/checks/is-uint32.js","../../../node_modules/@thi.ng/checks/is-undefined.js","../../../node_modules/@thi.ng/checks/is-uuid.js","../../../node_modules/@thi.ng/checks/is-uuid4.js","../../../node_modules/@thi.ng/checks/is-zero.js","../../../node_modules/@thi.ng/checks/index.js","../src/frameCatch.ts","../../../node_modules/sliced/index.js","../../../node_modules/@tstackgl/geometry/src/mesh-combine-normals.ts","../../../node_modules/gl-mat4/create.js","../../../node_modules/gl-mat4/clone.js","../../../node_modules/gl-mat4/copy.js","../../../node_modules/gl-mat4/identity.js","../../../node_modules/gl-mat4/transpose.js","../../../node_modules/gl-mat4/invert.js","../../../node_modules/gl-mat4/adjoint.js","../../../node_modules/gl-mat4/determinant.js","../../../node_modules/gl-mat4/multiply.js","../../../node_modules/gl-mat4/translate.js","../../../node_modules/gl-mat4/scale.js","../../../node_modules/gl-mat4/rotate.js","../../../node_modules/gl-mat4/rotateX.js","../../../node_modules/gl-mat4/rotateY.js","../../../node_modules/gl-mat4/rotateZ.js","../../../node_modules/gl-mat4/fromRotation.js","../../../node_modules/gl-mat4/fromRotationTranslation.js","../../../node_modules/gl-mat4/fromScaling.js","../../../node_modules/gl-mat4/fromTranslation.js","../../../node_modules/gl-mat4/fromXRotation.js","../../../node_modules/gl-mat4/fromYRotation.js","../../../node_modules/gl-mat4/fromZRotation.js","../../../node_modules/gl-mat4/fromQuat.js","../../../node_modules/gl-mat4/frustum.js","../../../node_modules/gl-mat4/perspective.js","../../../node_modules/gl-mat4/perspectiveFromFieldOfView.js","../../../node_modules/gl-mat4/ortho.js","../../../node_modules/gl-mat4/lookAt.js","../../../node_modules/gl-mat4/str.js","../../../node_modules/gl-mat4/index.js","../../../node_modules/gl-vec3/epsilon.js","../../../node_modules/gl-vec3/create.js","../../../node_modules/gl-vec3/clone.js","../../../node_modules/gl-vec3/fromValues.js","../../../node_modules/gl-vec3/normalize.js","../../../node_modules/gl-vec3/dot.js","../../../node_modules/gl-vec3/angle.js","../../../node_modules/gl-vec3/copy.js","../../../node_modules/gl-vec3/set.js","../../../node_modules/gl-vec3/equals.js","../../../node_modules/gl-vec3/exactEquals.js","../../../node_modules/gl-vec3/add.js","../../../node_modules/gl-vec3/subtract.js","../../../node_modules/gl-vec3/sub.js","../../../node_modules/gl-vec3/multiply.js","../../../node_modules/gl-vec3/mul.js","../../../node_modules/gl-vec3/divide.js","../../../node_modules/gl-vec3/div.js","../../../node_modules/gl-vec3/min.js","../../../node_modules/gl-vec3/max.js","../../../node_modules/gl-vec3/floor.js","../../../node_modules/gl-vec3/ceil.js","../../../node_modules/gl-vec3/round.js","../../../node_modules/gl-vec3/scale.js","../../../node_modules/gl-vec3/scaleAndAdd.js","../../../node_modules/gl-vec3/distance.js","../../../node_modules/gl-vec3/dist.js","../../../node_modules/gl-vec3/squaredDistance.js","../../../node_modules/gl-vec3/sqrDist.js","../../../node_modules/gl-vec3/length.js","../../../node_modules/gl-vec3/len.js","../../../node_modules/gl-vec3/squaredLength.js","../../../node_modules/gl-vec3/sqrLen.js","../../../node_modules/gl-vec3/negate.js","../../../node_modules/gl-vec3/inverse.js","../../../node_modules/gl-vec3/cross.js","../../../node_modules/gl-vec3/lerp.js","../../../node_modules/gl-vec3/random.js","../../../node_modules/gl-vec3/transformMat4.js","../../../node_modules/gl-vec3/transformMat3.js","../../../node_modules/gl-vec3/transformQuat.js","../../../node_modules/gl-vec3/rotateX.js","../../../node_modules/gl-vec3/rotateY.js","../../../node_modules/gl-vec3/rotateZ.js","../../../node_modules/gl-vec3/forEach.js","../../../node_modules/gl-vec3/index.js","../../src/calc/get-centroid.ts","../../../node_modules/earcut/src/earcut.js","../../../node_modules/@thi.ng/transducers/func/ensure-iterable.js","../../../node_modules/@thi.ng/transducers/func/ensure-array.js","../../../node_modules/@thi.ng/transducers/iter/wrap.js","../../../node_modules/@thi.ng/transducers/reduced.js","../../../node_modules/@thi.ng/errors/illegal-arity.js","../../../node_modules/@thi.ng/transducers/reduce.js","../../../node_modules/@thi.ng/transducers/rfn/push.js","../../../node_modules/@thi.ng/transducers/iterator.js","../../../node_modules/@thi.ng/transducers/xform/partition.js","../src/edge.ts","../../../node_modules/gl-vec2/epsilon.js","../../../node_modules/gl-vec2/create.js","../../../node_modules/gl-vec2/clone.js","../../../node_modules/gl-vec2/fromValues.js","../../../node_modules/gl-vec2/copy.js","../../../node_modules/gl-vec2/set.js","../../../node_modules/gl-vec2/equals.js","../../../node_modules/gl-vec2/exactEquals.js","../../../node_modules/gl-vec2/add.js","../../../node_modules/gl-vec2/subtract.js","../../../node_modules/gl-vec2/sub.js","../../../node_modules/gl-vec2/multiply.js","../../../node_modules/gl-vec2/mul.js","../../../node_modules/gl-vec2/divide.js","../../../node_modules/gl-vec2/div.js","../../../node_modules/gl-vec2/inverse.js","../../../node_modules/gl-vec2/min.js","../../../node_modules/gl-vec2/max.js","../../../node_modules/gl-vec2/rotate.js","../../../node_modules/gl-vec2/floor.js","../../../node_modules/gl-vec2/ceil.js","../../../node_modules/gl-vec2/round.js","../../../node_modules/gl-vec2/scale.js","../../../node_modules/gl-vec2/scaleAndAdd.js","../../../node_modules/gl-vec2/distance.js","../../../node_modules/gl-vec2/dist.js","../../../node_modules/gl-vec2/squaredDistance.js","../../../node_modules/gl-vec2/sqrDist.js","../../../node_modules/gl-vec2/length.js","../../../node_modules/gl-vec2/len.js","../../../node_modules/gl-vec2/squaredLength.js","../../../node_modules/gl-vec2/sqrLen.js","../../../node_modules/gl-vec2/negate.js","../../../node_modules/gl-vec2/normalize.js","../../../node_modules/gl-vec2/dot.js","../../../node_modules/gl-vec2/cross.js","../../../node_modules/gl-vec2/lerp.js","../../../node_modules/gl-vec2/random.js","../../../node_modules/gl-vec2/transformMat2.js","../../../node_modules/gl-vec2/transformMat2d.js","../../../node_modules/gl-vec2/transformMat3.js","../../../node_modules/gl-vec2/transformMat4.js","../../../node_modules/gl-vec2/forEach.js","../../../node_modules/gl-vec2/limit.js","../../../node_modules/gl-vec2/index.js","../../src/calc/pivot.ts","../../../node_modules/@thi.ng/transducers/func/compr.js","../../../node_modules/@thi.ng/transducers/xform/map.js","../../../node_modules/@thi.ng/transducers/transduce.js","../../../node_modules/@thi.ng/transducers/run.js","../../../node_modules/@thi.ng/transducers/step.js","../../../node_modules/@thi.ng/transducers/rfn/add.js","../../../node_modules/@thi.ng/transducers/rfn/assoc-map.js","../../../node_modules/@thi.ng/transducers/rfn/assoc-obj.js","../../../node_modules/@thi.ng/transducers/rfn/conj.js","../../../node_modules/@thi.ng/transducers/rfn/count.js","../../../node_modules/@thi.ng/transducers/rfn/div.js","../../../node_modules/@thi.ng/transducers/rfn/every.js","../../../node_modules/@thi.ng/transducers/rfn/fill.js","../../../node_modules/@thi.ng/transducers/func/identity.js","../../../node_modules/@thi.ng/transducers/rfn/group-by-map.js","../../../node_modules/@thi.ng/transducers/rfn/frequencies.js","../../../node_modules/@thi.ng/transducers/rfn/group-by-obj.js","../../../node_modules/@thi.ng/transducers/rfn/group-binary.js","../../../node_modules/@thi.ng/transducers/rfn/last.js","../../../node_modules/@thi.ng/compare/index.js","../../../node_modules/@thi.ng/transducers/rfn/max-compare.js","../../../node_modules/@thi.ng/transducers/rfn/max.js","../../../node_modules/@thi.ng/transducers/rfn/mean.js","../../../node_modules/@thi.ng/transducers/rfn/min-compare.js","../../../node_modules/@thi.ng/transducers/rfn/min.js","../../../node_modules/@thi.ng/transducers/rfn/mul.js","../../../node_modules/@thi.ng/transducers/rfn/push-copy.js","../../../node_modules/@thi.ng/transducers/rfn/reductions.js","../../../node_modules/@thi.ng/transducers/rfn/some.js","../../../node_modules/@thi.ng/transducers/rfn/str.js","../../../node_modules/@thi.ng/transducers/rfn/sub.js","../../../node_modules/@thi.ng/transducers/xform/base64.js","../../../node_modules/@thi.ng/transducers/xform/benchmark.js","../../../node_modules/@thi.ng/transducers/xform/bits.js","../../../node_modules/@thi.ng/transducers/xform/cat.js","../../../node_modules/@thi.ng/transducers/iter/range.js","../../../node_modules/@thi.ng/transducers/iter/range2d.js","../../../node_modules/@thi.ng/transducers/iter/tuples.js","../../../node_modules/@thi.ng/transducers/xform/convolve.js","../../../node_modules/@thi.ng/transducers/xform/dedupe.js","../../../node_modules/@thi.ng/transducers/func/delay.js","../../../node_modules/@thi.ng/transducers/xform/delayed.js","../../../node_modules/@thi.ng/transducers/xform/distinct.js","../../../node_modules/@thi.ng/transducers/xform/throttle.js","../../../node_modules/@thi.ng/transducers/xform/drop-nth.js","../../../node_modules/@thi.ng/transducers/xform/drop-while.js","../../../node_modules/@thi.ng/transducers/xform/drop.js","../../../node_modules/@thi.ng/transducers/xform/duplicate.js","../../../node_modules/@thi.ng/transducers/xform/filter.js","../../../node_modules/@thi.ng/transducers/func/fuzzy-match.js","../../../node_modules/@thi.ng/transducers/xform/filter-fuzzy.js","../../../node_modules/@thi.ng/transducers/xform/flatten-with.js","../../../node_modules/@thi.ng/transducers/xform/flatten.js","../../../node_modules/@thi.ng/memoize/memoizej.js","../../../node_modules/@thi.ng/strings/repeat.js","../../../node_modules/@thi.ng/strings/radix.js","../../../node_modules/@thi.ng/compose/comp.js","../../../node_modules/@thi.ng/transducers/func/comp.js","../../../node_modules/@thi.ng/compose/juxt.js","../../../node_modules/@thi.ng/transducers/func/juxt.js","../../../node_modules/@thi.ng/transducers/xform/map-indexed.js","../../../node_modules/@thi.ng/transducers/xform/pad-last.js","../../../node_modules/@thi.ng/transducers/xform/hex-dump.js","../../../node_modules/@thi.ng/transducers/xform/indexed.js","../../../node_modules/@thi.ng/transducers/xform/interleave.js","../../../node_modules/@thi.ng/transducers/xform/interpose.js","../../../node_modules/@thi.ng/transducers/xform/keep.js","../../../node_modules/@thi.ng/transducers/xform/labeled.js","../../../node_modules/@thi.ng/transducers/func/deep-transform.js","../../../node_modules/@thi.ng/transducers/xform/map-deep.js","../../../node_modules/@thi.ng/transducers/xform/map-keys.js","../../../node_modules/@thi.ng/transducers/xform/map-nth.js","../../../node_modules/@thi.ng/transducers/xform/map-vals.js","../../../node_modules/@thi.ng/transducers/xform/mapcat.js","../../../node_modules/@thi.ng/transducers/xform/take.js","../../../node_modules/@thi.ng/transducers/xform/match-first.js","../../../node_modules/@thi.ng/transducers/xform/take-last.js","../../../node_modules/@thi.ng/transducers/xform/match-last.js","../../../node_modules/@thi.ng/transducers/xform/moving-average.js","../../../node_modules/@thi.ng/transducers/xform/moving-median.js","../../../node_modules/@thi.ng/transducers/xform/multiplex.js","../../../node_modules/@thi.ng/transducers/func/renamer.js","../../../node_modules/@thi.ng/transducers/xform/rename.js","../../../node_modules/@thi.ng/transducers/xform/multiplex-obj.js","../../../node_modules/@thi.ng/transducers/xform/noop.js","../../../node_modules/@thi.ng/transducers/xform/page.js","../../../node_modules/@thi.ng/transducers/xform/partition-bits.js","../../../node_modules/@thi.ng/transducers/xform/partition-by.js","../../../node_modules/@thi.ng/transducers/xform/partition-of.js","../../../node_modules/@thi.ng/transducers/xform/partition-sort.js","../../../node_modules/@thi.ng/transducers/xform/partition-sync.js","../../../node_modules/@thi.ng/transducers/xform/pluck.js","../../../node_modules/@thi.ng/transducers/xform/sample.js","../../../node_modules/@thi.ng/transducers/xform/scan.js","../../../node_modules/@thi.ng/transducers/func/key-selector.js","../../../node_modules/@thi.ng/transducers/xform/select-keys.js","../../../node_modules/@thi.ng/transducers/xform/side-effect.js","../../../node_modules/@thi.ng/transducers/xform/sliding-window.js","../../../node_modules/@thi.ng/transducers/func/shuffle.js","../../../node_modules/@thi.ng/transducers/xform/stream-shuffle.js","../../../node_modules/@thi.ng/transducers/func/binary-search.js","../../../node_modules/@thi.ng/transducers/xform/stream-sort.js","../../../node_modules/@thi.ng/transducers/xform/struct.js","../../../node_modules/@thi.ng/transducers/func/swizzler.js","../../../node_modules/@thi.ng/transducers/xform/swizzle.js","../../../node_modules/@thi.ng/transducers/xform/take-nth.js","../../../node_modules/@thi.ng/transducers/xform/take-while.js","../../../node_modules/@thi.ng/transducers/xform/throttle-time.js","../../../node_modules/@thi.ng/transducers/xform/trace.js","../../../node_modules/@thi.ng/transducers/xform/utf8.js","../../../node_modules/@thi.ng/transducers/xform/word-wrap.js","../../../node_modules/@thi.ng/transducers/func/constantly.js","../../../node_modules/@thi.ng/transducers/func/even.js","../../../node_modules/@thi.ng/transducers/func/hex.js","../../../node_modules/@thi.ng/transducers/func/juxtr.js","../../../node_modules/@thi.ng/transducers/func/lookup.js","../../../node_modules/@thi.ng/transducers/func/odd.js","../../../node_modules/@thi.ng/transducers/func/peek.js","../../../node_modules/@thi.ng/transducers/iter/repeat.js","../../../node_modules/@thi.ng/transducers/func/weighted-random.js","../../../node_modules/@thi.ng/transducers/iter/repeatedly.js","../../../node_modules/@thi.ng/transducers/iter/choices.js","../../../node_modules/@thi.ng/transducers/func/random-id.js","../../../node_modules/@thi.ng/transducers/iter/as-iterable.js","../../../node_modules/@thi.ng/transducers/iter/concat.js","../../../node_modules/@thi.ng/transducers/iter/cycle.js","../../../node_modules/@thi.ng/transducers/iter/iterate.js","../../../node_modules/@thi.ng/transducers/iter/keys.js","../../../node_modules/@thi.ng/transducers/iter/norm-range.js","../../../node_modules/@thi.ng/transducers/iter/pairs.js","../../../node_modules/@thi.ng/transducers/iter/permutations.js","../../../node_modules/@thi.ng/transducers/iter/range3d.js","../../../node_modules/@thi.ng/transducers/iter/reverse.js","../../../node_modules/@thi.ng/transducers/iter/vals.js","../../../node_modules/@thi.ng/transducers/index.js","../../../src/calc/extrude/extrude.ts","../../src/calc/angle-between.ts","../../src/shape/circle.ts","../../src/shape/primitive-icosahedron.ts","../../src/shape/primitive-cylinder.ts","../../src/shape/primitive-octahedron.ts","../src/mesh-combine-normals.ts","../src/index.ts","../src/draw-axes.ts","../../../node_modules/vectors/normalize-nd.js","../../../node_modules/icosphere/index.js","../../../node_modules/primitive-icosphere/lib/is-uv-seam.js","../../../node_modules/primitive-icosphere/lib/fix-wrapped-uvs.js","../../../node_modules/primitive-icosphere/lib/fix-pole-uvs.js","../../../node_modules/primitive-icosphere/index.js","../src/draw-debug.ts","../src/draw-mesh-unicolor.ts","../src/draw-mesh-wireframe.ts","../src/draw-basic-mesh.ts","../../../node_modules/normals/normals.js","../src/draw-normal-lines.ts","../src/draw-normal-mesh.ts","../../../node_modules/rectangular-prism/cube.js","../../../node_modules/rectangular-prism/index.js","../../../node_modules/cube-cube/index.js","../../../node_modules/unindex-mesh/index.js","../../../node_modules/base64-js/index.js","../../../node_modules/ieee754/index.js","../../../node_modules/isarray/index.js","../../../node_modules/buffer/index.js","../node_modules/clone/clone.js","../../../node_modules/gl-vec4/add.js","../../../node_modules/gl-quat/add.js","../../../node_modules/gl-quat/calculateW.js","../../../node_modules/gl-vec4/clone.js","../../../node_modules/gl-quat/clone.js","../../../node_modules/gl-quat/conjugate.js","../../../node_modules/gl-vec4/copy.js","../../../node_modules/gl-quat/copy.js","../../../node_modules/gl-quat/create.js","../../../node_modules/gl-vec4/dot.js","../../../node_modules/gl-quat/dot.js","../../../node_modules/gl-quat/fromMat3.js","../../../node_modules/gl-vec4/fromValues.js","../../../node_modules/gl-quat/fromValues.js","../../../node_modules/gl-quat/identity.js","../../../node_modules/gl-quat/invert.js","../../../node_modules/gl-vec4/length.js","../../../node_modules/gl-quat/length.js","../../../node_modules/gl-vec4/lerp.js","../../../node_modules/gl-quat/lerp.js","../../../node_modules/gl-quat/multiply.js","../../../node_modules/gl-vec4/normalize.js","../../../node_modules/gl-quat/normalize.js","../../../node_modules/gl-quat/rotateX.js","../../../node_modules/gl-quat/rotateY.js","../../../node_modules/gl-quat/rotateZ.js","../../../node_modules/gl-quat/setAxisAngle.js","../../../node_modules/gl-quat/rotationTo.js","../../../node_modules/gl-vec4/scale.js","../../../node_modules/gl-quat/scale.js","../../../node_modules/gl-vec4/set.js","../../../node_modules/gl-quat/set.js","../../../node_modules/gl-quat/node_modules/gl-mat3/create.js","../../../node_modules/gl-quat/setAxes.js","../../../node_modules/gl-quat/slerp.js","../../../node_modules/gl-quat/sqlerp.js","../../../node_modules/gl-vec4/squaredLength.js","../../../node_modules/gl-quat/squaredLength.js","../../../node_modules/gl-quat/index.js","gradient-map.ts","../../../node_modules/face-normals/index.js","../../../node_modules/gl-matrix/lib/gl-matrix/common.js","../../../node_modules/gl-matrix/lib/gl-matrix/mat2.js","../../../node_modules/gl-matrix/lib/gl-matrix/mat2d.js","../../../node_modules/gl-matrix/lib/gl-matrix/mat3.js","../../../node_modules/gl-matrix/lib/gl-matrix/mat4.js","../../../node_modules/gl-matrix/lib/gl-matrix/vec3.js","../../../node_modules/gl-matrix/lib/gl-matrix/vec4.js","../../../node_modules/gl-matrix/lib/gl-matrix/quat.js","../../../node_modules/gl-matrix/lib/gl-matrix/quat2.js","../../../node_modules/gl-matrix/lib/gl-matrix/vec2.js","../../../node_modules/gl-matrix/lib/gl-matrix.js","../../../node_modules/orbit-camera/orbit.js","0","draw-height.ts","draw-voxel.ts","index.ts"],"names":["clone","_instanceof","obj","type","nativeMap","nativeSet","nativePromise","Map","_","Set","Promise","parent","circular","depth","prototype","includeNonEnumerable","allParents","allChildren","useBuffer","Buffer","_clone","Infinity","child","proto","resolve","reject","then","value","err","__isArray","__isRegExp","RegExp","source","__getRegExpFlags","lastIndex","__isDate","Date","getTime","isBuffer","allocUnsafe","length","copy","Error","Object","create","getPrototypeOf","index","indexOf","push","i","forEach","key","keyChild","valueChild","set","entryChild","add","attrs","getOwnPropertyDescriptor","getOwnPropertySymbols","symbols","symbol","descriptor","enumerable","defineProperty","allPropertyNames","getOwnPropertyNames","propertyName","__objToStr","o","toString","call","re","flags","global","ignoreCase","multiline","clonePrototype","c","module","exports","EPSILON","ARRAY_TYPE","Float32Array","Array","RANDOM","Math","random","setMatrixArrayType","degree","PI","toRadian","a","equals","b","abs","max","out","glMatrix","identity","fromValues","m00","m01","m10","m11","transpose","a1","invert","a0","a2","a3","det","adjoint","determinant","multiply","b0","b1","b2","b3","rotate","rad","s","sin","cos","scale","v","v0","v1","fromRotation","fromScaling","str","frob","sqrt","pow","LDU","L","D","U","subtract","exactEquals","multiplyScalar","multiplyScalarAndAdd","mul","sub","d","tx","ty","aa","ab","ac","ad","atx","aty","a4","a5","b4","b5","translate","fromTranslation","fromMat4","m02","m12","m20","m21","m22","a01","a02","a12","a00","a10","a11","a20","a21","a22","b01","b11","b21","b00","b02","b10","b12","b20","b22","x","y","fromMat2d","fromQuat","q","z","w","x2","y2","z2","xx","yx","yy","zx","zy","zz","wx","wy","wz","normalFromMat4","a03","a13","a23","a30","a31","a32","a33","b03","b04","b05","b06","b07","b08","b09","projection","width","height","a6","a7","a8","b6","b7","b8","m03","m13","m23","m30","m31","m32","m33","axis","t","len","rotateX","rotateY","rotateZ","fromXRotation","fromYRotation","fromZRotation","fromRotationTranslation","xy","xz","yz","fromQuat2","translation","bx","by","bz","bw","ax","ay","az","aw","magnitude","getTranslation","mat","getScaling","getRotation","trace","S","fromRotationTranslationScale","sx","sy","sz","fromRotationTranslationScaleOrigin","ox","oy","oz","out0","out1","out2","out4","out5","out6","out8","out9","out10","frustum","left","right","bottom","top","near","far","rl","tb","nf","perspective","fovy","aspect","f","tan","perspectiveFromFieldOfView","fov","upTan","upDegrees","downTan","downDegrees","leftTan","leftDegrees","rightTan","rightDegrees","xScale","yScale","ortho","lr","bt","lookAt","eye","center","up","x0","x1","y0","y1","z0","z1","eyex","eyey","eyez","upx","upy","upz","centerx","centery","centerz","targetTo","target","a9","a14","a15","b9","b13","b14","b15","divide","ceil","floor","min","round","scaleAndAdd","distance","squaredDistance","squaredLength","negate","inverse","normalize","dot","cross","lerp","hermite","factorTimes2","factor1","factor2","factor3","factor4","bezier","inverseFactor","inverseFactorTimesTwo","r","zScale","transformMat4","m","transformMat3","transformQuat","qx","qy","qz","qw","uvx","uvy","uvz","uuvx","uuvy","uuvz","w2","p","angle","tempA","tempB","cosine","acos","div","dist","sqrDist","sqrLen","vec","stride","offset","count","fn","arg","l","v2","v3","v4","s1","s2","ix","iy","iz","iw","setAxisAngle","getAxisAngle","out_axis","calculateW","slerp","omega","cosom","sinom","scale0","scale1","u1","u2","u3","sqrt1MinusU1","sqrtU1","invDot","conjugate","fromMat3","fTrace","fRoot","j","k","fromEuler","halfToRad","cx","cy","cz","vec4","rotationTo","tmpvec3","vec3","xUnitVec3","yUnitVec3","sqlerp","temp1","temp2","setAxes","matr","mat3","view","dq","w1","fromRotationTranslationValues","outer","quat","mat4","getReal","getDual","setReal","setDual","ax1","ay1","az1","aw1","bx1","by1","bz1","ax2","ay2","az2","aw2","rotateByQuatAppend","rotateByQuatPrepend","rotateAroundAxis","axisLength","ax0","ay0","az0","aw0","bw1","bx0","by0","bz0","bw0","mt","sqlen","a_dot_b","transformMat2","transformMat2d","p0","p1","sinC","cosC","len1","len2"],"mappings":"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AG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IA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","file":"src.38988213.map","sourceRoot":"../src","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DEBUG = false;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DEFAULT_EPS = 1e-6;\nexports.EVENT_ALL = \"*\";\nexports.EVENT_ENABLE = \"enable\";\nexports.EVENT_DISABLE = \"disable\";\nexports.SEMAPHORE = Symbol();\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst OBJP = Object.getPrototypeOf({});\nconst FN = \"function\";\nconst STR = \"string\";\nexports.equiv = (a, b) => {\n    let proto;\n    if (a === b) {\n        return true;\n    }\n    if (a != null) {\n        if (typeof a.equiv === FN) {\n            return a.equiv(b);\n        }\n    }\n    else {\n        return a == b;\n    }\n    if (b != null) {\n        if (typeof b.equiv === FN) {\n            return b.equiv(a);\n        }\n    }\n    else {\n        return a == b;\n    }\n    if (typeof a === STR || typeof b === STR) {\n        return false;\n    }\n    if ((proto = Object.getPrototypeOf(a), proto == null || proto === OBJP) &&\n        (proto = Object.getPrototypeOf(b), proto == null || proto === OBJP)) {\n        return exports.equivObject(a, b);\n    }\n    if (typeof a !== FN && a.length !== undefined &&\n        typeof b !== FN && b.length !== undefined) {\n        return exports.equivArrayLike(a, b);\n    }\n    if (a instanceof Set && b instanceof Set) {\n        return exports.equivSet(a, b);\n    }\n    if (a instanceof Map && b instanceof Map) {\n        return exports.equivMap(a, b);\n    }\n    if (a instanceof Date && b instanceof Date) {\n        return a.getTime() === b.getTime();\n    }\n    if (a instanceof RegExp && b instanceof RegExp) {\n        return a.toString() === b.toString();\n    }\n    // NaN\n    return (a !== a && b !== b);\n};\nexports.equivArrayLike = (a, b, _equiv = exports.equiv) => {\n    let l = a.length;\n    if (l === b.length) {\n        while (--l >= 0 && _equiv(a[l], b[l]))\n            ;\n    }\n    return l < 0;\n};\nexports.equivSet = (a, b, _equiv = exports.equiv) => (a.size === b.size) &&\n    _equiv([...a.keys()].sort(), [...b.keys()].sort());\nexports.equivMap = (a, b, _equiv = exports.equiv) => (a.size === b.size) &&\n    _equiv([...a].sort(), [...b].sort());\nexports.equivObject = (a, b, _equiv = exports.equiv) => {\n    if (Object.keys(a).length !== Object.keys(b).length) {\n        return false;\n    }\n    for (let k in a) {\n        if (!b.hasOwnProperty(k) || !_equiv(a[k], b[k])) {\n            return false;\n        }\n    }\n    return true;\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst equiv_1 = require(\"@thi.ng/equiv\");\nlet _cachedFP;\nlet _cachedPath;\nlet _cachedEPC = [];\nlet _cachedPathPos = [];\nconst cachedFP = (size) => _cachedFP && _cachedFP.length >= size ?\n    _cachedFP :\n    (_cachedFP = new Int32Array(size));\nconst cachedPath = (size) => _cachedPath && _cachedPath.length >= size ?\n    _cachedPath :\n    (_cachedPath = new Int32Array(size));\nconst simpleDiff = (state, src, key, logDir, mode) => {\n    const n = src.length;\n    const linear = state.linear;\n    state.distance = n;\n    if (mode !== 0 /* ONLY_DISTANCE */) {\n        for (let i = 0, j = 0; i < n; i++, j += 3) {\n            linear[j] = logDir;\n            linear[j + 1] = i;\n            linear[j + 2] = src[i];\n        }\n        if (mode === 2 /* FULL */) {\n            const _state = state[key];\n            for (let i = 0; i < n; i++) {\n                _state[i] = src[i];\n            }\n        }\n    }\n    return state;\n};\n/**\n * Based on \"An O(NP) Sequence Comparison Algorithm\"\"\n * by Wu, Manber, Myers and Miller\n *\n * - http://www.itu.dk/stud/speciale/bepjea/xwebtex/litt/an-onp-sequence-comparison-algorithm.pdf\n * - https://github.com/cubicdaiya/onp\n *\n * Various optimizations, fixes & refactorings.\n * By default uses `@thi.ng/equiv` for equality checks.\n *\n * @param a \"old\" array\n * @param b \"new\" array\n * @param mode result mode\n * @param equiv equality predicate function\n */\nexports.diffArray = (a, b, mode = 2 /* FULL */, equiv = equiv_1.equiv) => {\n    const state = {\n        distance: 0,\n        adds: {},\n        dels: {},\n        const: {},\n        linear: []\n    };\n    if (a === b || (a == null && b == null)) {\n        return state;\n    }\n    else if (a == null || a.length === 0) {\n        return simpleDiff(state, b, \"adds\", 1, mode);\n    }\n    else if (b == null || b.length === 0) {\n        return simpleDiff(state, a, \"dels\", -1, mode);\n    }\n    const reverse = a.length >= b.length;\n    let _a, _b, na, nb;\n    if (reverse) {\n        _a = b;\n        _b = a;\n    }\n    else {\n        _a = a;\n        _b = b;\n    }\n    na = _a.length;\n    nb = _b.length;\n    const offset = na + 1;\n    const delta = nb - na;\n    const doff = delta + offset;\n    const size = na + nb + 3;\n    const path = cachedPath(size).fill(-1, 0, size);\n    const fp = cachedFP(size).fill(-1, 0, size);\n    const epc = _cachedEPC;\n    const pathPos = _cachedPathPos;\n    epc.length = 0;\n    pathPos.length = 0;\n    const snake = (k, p, pp) => {\n        const koff = k + offset;\n        let r, y;\n        if (p > pp) {\n            r = path[koff - 1];\n            y = p;\n        }\n        else {\n            r = path[koff + 1];\n            y = pp;\n        }\n        let x = y - k;\n        while (x < na && y < nb && equiv(_a[x], _b[y])) {\n            x++;\n            y++;\n        }\n        path[koff] = pathPos.length / 3;\n        pathPos.push(x, y, r);\n        return y;\n    };\n    let p = -1, k, ko;\n    do {\n        p++;\n        for (k = -p, ko = k + offset; k < delta; k++, ko++) {\n            fp[ko] = snake(k, fp[ko - 1] + 1, fp[ko + 1]);\n        }\n        for (k = delta + p, ko = k + offset; k > delta; k--, ko--) {\n            fp[ko] = snake(k, fp[ko - 1] + 1, fp[ko + 1]);\n        }\n        fp[doff] = snake(delta, fp[doff - 1] + 1, fp[doff + 1]);\n    } while (fp[doff] !== nb);\n    state.distance = delta + 2 * p;\n    if (mode !== 0 /* ONLY_DISTANCE */) {\n        p = path[doff] * 3;\n        while (p >= 0) {\n            epc.push(p);\n            p = pathPos[p + 2] * 3;\n        }\n        if (mode === 2 /* FULL */) {\n            buildFullLog(epc, pathPos, state, _a, _b, reverse);\n        }\n        else {\n            buildLinearLog(epc, pathPos, state, _a, _b, reverse);\n        }\n    }\n    return state;\n};\nconst buildFullLog = (epc, pathPos, state, a, b, reverse) => {\n    const linear = state.linear;\n    const _const = state.const;\n    let i = epc.length, px = 0, py = 0;\n    let adds, dels, aID, dID;\n    if (reverse) {\n        adds = state.dels;\n        dels = state.adds;\n        aID = -1;\n        dID = 1;\n    }\n    else {\n        adds = state.adds;\n        dels = state.dels;\n        aID = 1;\n        dID = -1;\n    }\n    for (; --i >= 0;) {\n        const e = epc[i];\n        const ppx = pathPos[e];\n        const ppy = pathPos[e + 1];\n        const d = ppy - ppx;\n        while (px < ppx || py < ppy) {\n            const dp = py - px;\n            if (d > dp) {\n                linear.push(aID, py, adds[py] = b[py]);\n                py++;\n            }\n            else if (d < dp) {\n                linear.push(dID, px, dels[px] = a[px]);\n                px++;\n            }\n            else {\n                linear.push(0, px, _const[px] = a[px]);\n                px++;\n                py++;\n            }\n        }\n    }\n};\nconst buildLinearLog = (epc, pathPos, state, a, b, reverse) => {\n    const linear = state.linear;\n    const aID = reverse ? -1 : 1;\n    const dID = reverse ? 1 : -1;\n    let i = epc.length, px = 0, py = 0;\n    for (; --i >= 0;) {\n        const e = epc[i];\n        const ppx = pathPos[e];\n        const ppy = pathPos[e + 1];\n        const d = ppy - ppx;\n        while (px < ppx || py < ppy) {\n            const dp = py - px;\n            if (d > dp) {\n                linear.push(aID, py, b[py]);\n                py++;\n            }\n            else if (d < dp) {\n                linear.push(dID, px, a[px]);\n                px++;\n            }\n            else {\n                linear.push(0, px, a[px]);\n                px++;\n                py++;\n            }\n        }\n    }\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst equiv_1 = require(\"@thi.ng/equiv\");\nexports.diffObject = (a, b, mode = 2 /* FULL */, _equiv = equiv_1.equiv) => a === b ?\n    { distance: 0 } :\n    mode === 0 /* ONLY_DISTANCE */ ?\n        diffObjectDist(a, b, _equiv) :\n        diffObjectFull(a, b, _equiv);\nconst diffObjectDist = (a, b, _equiv) => {\n    let d = 0;\n    for (let k in a) {\n        const vb = b[k];\n        (vb === undefined || !_equiv(a[k], vb)) && d++;\n    }\n    for (let k in b) {\n        !(k in a) && d++;\n    }\n    return { distance: d };\n};\nconst diffObjectFull = (a, b, _equiv) => {\n    let d = 0;\n    const adds = [];\n    const dels = [];\n    const edits = [];\n    for (let k in a) {\n        const vb = b[k];\n        if (vb === undefined) {\n            dels.push(k);\n            d++;\n        }\n        else if (!_equiv(a[k], vb)) {\n            edits.push(k, vb);\n            d++;\n        }\n    }\n    for (let k in b) {\n        if (!(k in a)) {\n            adds.push(k);\n            d++;\n        }\n    }\n    return { distance: d, adds, dels, edits };\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst api_1 = require(\"@thi.ng/api/api\");\nconst array_1 = require(\"@thi.ng/diff/array\");\nconst object_1 = require(\"@thi.ng/diff/object\");\nconst equiv_1 = require(\"@thi.ng/equiv\");\nconst isArray = Array.isArray;\nconst max = Math.max;\n// child index tracking template buffer\nconst INDEX = (() => {\n    const res = new Array(2048);\n    for (let i = 2, n = res.length; i < n; i++) {\n        res[i] = i - 2;\n    }\n    return res;\n})();\nconst buildIndex = (n) => {\n    if (n <= INDEX.length) {\n        return INDEX.slice(0, n);\n    }\n    const res = new Array(n);\n    while (--n >= 2) {\n        res[n] = n - 2;\n    }\n    return res;\n};\n/**\n * See `HDOMImplementation` interface for further details.\n *\n * @param opts\n * @param impl hdom implementation\n * @param parent\n * @param prev previous tree\n * @param curr current tree\n * @param child child index\n */\nexports.diffTree = (opts, impl, parent, prev, curr, child = 0) => {\n    const attribs = curr[1];\n    if (attribs.__skip) {\n        return;\n    }\n    // always replace element if __diff = false\n    if (attribs.__diff === false) {\n        exports.releaseTree(prev);\n        impl.replaceChild(opts, parent, child, curr);\n        return;\n    }\n    // delegate to branch-local implementation\n    let _impl = attribs.__impl;\n    if (_impl && _impl !== impl) {\n        return _impl.diffTree(opts, _impl, parent, prev, curr, child);\n    }\n    const delta = array_1.diffArray(prev, curr, 1 /* ONLY_DISTANCE_LINEAR */, exports.equiv);\n    if (delta.distance === 0) {\n        return;\n    }\n    const edits = delta.linear;\n    const el = impl.getChild(parent, child);\n    let i;\n    let ii;\n    let j;\n    let idx;\n    let k;\n    let eq;\n    let status;\n    let val;\n    if (edits[0] !== 0 || prev[1].key !== attribs.key) {\n        // DEBUG && console.log(\"replace:\", prev, curr);\n        exports.releaseTree(prev);\n        impl.replaceChild(opts, parent, child, curr);\n        return;\n    }\n    if ((val = prev.__release) && val !== curr.__release) {\n        exports.releaseTree(prev);\n    }\n    if (edits[3] !== 0) {\n        exports.diffAttributes(impl, el, prev[1], curr[1]);\n        // if attribs changed & distance == 2 then we're done here...\n        if (delta.distance === 2) {\n            return;\n        }\n    }\n    const numEdits = edits.length;\n    const prevLength = prev.length - 1;\n    const equivKeys = extractEquivElements(edits);\n    const offsets = buildIndex(prevLength + 1);\n    for (i = 2, ii = 6; ii < numEdits; i++, ii += 3) {\n        status = edits[ii];\n        if (status === -1) {\n            // element removed / edited?\n            val = edits[ii + 2];\n            if (isArray(val)) {\n                k = val[1].key;\n                if (k !== undefined && equivKeys[k][2] !== undefined) {\n                    eq = equivKeys[k];\n                    k = eq[0];\n                    // DEBUG && console.log(`diff equiv key @ ${k}:`, prev[k], curr[eq[2]]);\n                    exports.diffTree(opts, impl, el, prev[k], curr[eq[2]], offsets[k]);\n                }\n                else {\n                    idx = edits[ii + 1];\n                    // DEBUG && console.log(\"remove @\", offsets[idx], val);\n                    exports.releaseTree(val);\n                    impl.removeChild(el, offsets[idx]);\n                    for (j = prevLength; j >= idx; j--) {\n                        offsets[j] = max(offsets[j] - 1, 0);\n                    }\n                }\n            }\n            else if (typeof val === \"string\") {\n                impl.setContent(el, \"\");\n            }\n        }\n        else if (status === 1) {\n            // element added/inserted?\n            val = edits[ii + 2];\n            if (typeof val === \"string\") {\n                impl.setContent(el, val);\n            }\n            else if (isArray(val)) {\n                k = val[1].key;\n                if (k === undefined || equivKeys[k][0] === undefined) {\n                    idx = edits[ii + 1];\n                    // DEBUG && console.log(\"insert @\", offsets[idx], val);\n                    impl.createTree(opts, el, val, offsets[idx]);\n                    for (j = prevLength; j >= idx; j--) {\n                        offsets[j]++;\n                    }\n                }\n            }\n        }\n    }\n    // call __init after all children have been added/updated\n    if ((val = curr.__init) && val != prev.__init) {\n        val.apply(curr, [el, ...(curr.__args)]);\n    }\n};\n/**\n * Helper function for `diffTree()` to compute & apply the difference\n * between a node's `prev` and `curr` attributes.\n *\n * @param impl\n * @param el\n * @param prev\n * @param curr\n */\nexports.diffAttributes = (impl, el, prev, curr) => {\n    const delta = object_1.diffObject(prev, curr, 2 /* FULL */, equiv_1.equiv);\n    impl.removeAttribs(el, delta.dels, prev);\n    let val = api_1.SEMAPHORE;\n    let i, e, edits;\n    for (edits = delta.edits, i = edits.length; (i -= 2) >= 0;) {\n        const a = edits[i];\n        if (a.indexOf(\"on\") === 0) {\n            impl.removeAttribs(el, [a], prev);\n        }\n        if (a !== \"value\") {\n            impl.setAttrib(el, a, edits[i + 1], curr);\n        }\n        else {\n            val = edits[i + 1];\n        }\n    }\n    for (edits = delta.adds, i = edits.length; --i >= 0;) {\n        e = edits[i];\n        if (e !== \"value\") {\n            impl.setAttrib(el, e, curr[e], curr);\n        }\n        else {\n            val = curr[e];\n        }\n    }\n    if (val !== api_1.SEMAPHORE) {\n        impl.setAttrib(el, \"value\", val, curr);\n    }\n};\n/**\n * Recursively attempts to call the `release` lifecycle method on every\n * element in given tree (branch), using depth-first descent. Each\n * element is checked for the presence of the `__release` control\n * attribute. If (and only if) it is set to `false`, further descent\n * into that element's branch is skipped.\n *\n * @param tag\n */\nexports.releaseTree = (tag) => {\n    if (isArray(tag)) {\n        let x;\n        if ((x = tag[1]) && x.__release === false) {\n            return;\n        }\n        if (tag.__release) {\n            // DEBUG && console.log(\"call __release\", tag);\n            tag.__release.apply(tag.__this, tag.__args);\n            delete tag.__release;\n        }\n        for (x = tag.length; --x >= 2;) {\n            exports.releaseTree(tag[x]);\n        }\n    }\n};\nconst extractEquivElements = (edits) => {\n    let k;\n    let val;\n    let ek;\n    const equiv = {};\n    for (let i = edits.length; (i -= 3) >= 0;) {\n        val = edits[i + 2];\n        if (isArray(val) && (k = val[1].key) !== undefined) {\n            ek = equiv[k];\n            !ek && (equiv[k] = ek = [, ,]);\n            ek[edits[i] + 1] = edits[i + 1];\n        }\n    }\n    return equiv;\n};\nconst OBJP = Object.getPrototypeOf({});\nconst FN = \"function\";\nconst STR = \"string\";\n/**\n * Customized version @thi.ng/equiv which takes `__diff` attributes into\n * account (at any nesting level). If an hdom element's attribute object\n * contains `__diff: false`, the object will ALWAYS be considered\n * unequal, even if all other attributes in the object are equivalent.\n *\n * @param a\n * @param b\n */\nexports.equiv = (a, b) => {\n    let proto;\n    if (a === b) {\n        return true;\n    }\n    if (a != null) {\n        if (typeof a.equiv === FN) {\n            return a.equiv(b);\n        }\n    }\n    else {\n        return a == b;\n    }\n    if (b != null) {\n        if (typeof b.equiv === FN) {\n            return b.equiv(a);\n        }\n    }\n    else {\n        return a == b;\n    }\n    if (typeof a === STR || typeof b === STR) {\n        return false;\n    }\n    if ((proto = Object.getPrototypeOf(a), proto == null || proto === OBJP) &&\n        (proto = Object.getPrototypeOf(b), proto == null || proto === OBJP)) {\n        return !(a.__diff === false || b.__diff === false) &&\n            equiv_1.equivObject(a, b, exports.equiv);\n    }\n    if (typeof a !== FN && a.length !== undefined &&\n        typeof b !== FN && b.length !== undefined) {\n        return equiv_1.equivArrayLike(a, b, exports.equiv);\n    }\n    if (a instanceof Set && b instanceof Set) {\n        return equiv_1.equivSet(a, b, exports.equiv);\n    }\n    if (a instanceof Map && b instanceof Map) {\n        return equiv_1.equivMap(a, b, exports.equiv);\n    }\n    if (a instanceof Date && b instanceof Date) {\n        return a.getTime() === b.getTime();\n    }\n    if (a instanceof RegExp && b instanceof RegExp) {\n        return a.toString() === b.toString();\n    }\n    // NaN\n    return (a !== a && b !== b);\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isArray = Array.isArray;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isNotStringAndIterable(x) {\n    return x != null &&\n        typeof x !== \"string\" &&\n        typeof x[Symbol.iterator] === \"function\";\n}\nexports.isNotStringAndIterable = isNotStringAndIterable;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SVG_NS = \"http://www.w3.org/2000/svg\";\nexports.XLINK_NS = \"http://www.w3.org/1999/xlink\";\nexports.TAG_REGEXP = /^([^\\s\\.#]+)(?:#([^\\s\\.#]+))?(?:\\.([^\\s#]+))?$/;\n// tslint:disable-next-line\nexports.SVG_TAGS = \"animate animateColor animateMotion animateTransform circle clipPath color-profile defs desc discard ellipse feBlend feColorMatrix feComponentTransfer feComposite feConvolveMatrix feDiffuseLighting feDisplacementMap feDistantLight feDropShadow feFlood feFuncA feFuncB feFuncG feFuncR feGaussianBlur feImage feMerge feMergeNode feMorphology feOffset fePointLight feSpecularLighting feSpotLight feTile feTurbulence filter font foreignObject g image line linearGradient marker mask metadata mpath path pattern polygon polyline radialGradient rect set stop style svg switch symbol text textPath title tref tspan use view\"\n    .split(\" \")\n    .reduce((acc, x) => (acc[x] = 1, acc), {});\n// tslint:disable-next-line\nexports.VOID_TAGS = \"area base br circle col command ellipse embed hr img input keygen line link meta param path polygon polyline rect source stop track use wbr\"\n    .split(\" \")\n    .reduce((acc, x) => (acc[x] = 1, acc), {});\nexports.ENTITIES = {\n    \"&\": \"&amp;\",\n    \"<\": \"&lt;\",\n    \">\": \"&gt;\",\n    '\"': \"&quot;\",\n    \"'\": \"&apos;\",\n};\nexports.COMMENT = \"__COMMENT__\";\nexports.NO_SPANS = {\n    button: 1,\n    option: 1,\n    text: 1,\n    textarea: 1,\n};\nexports.ENTITY_RE = new RegExp(`[${Object.keys(exports.ENTITIES)}]`, \"g\");\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isFunction(x) {\n    return typeof x === \"function\";\n}\nexports.isFunction = isFunction;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst is_function_1 = require(\"@thi.ng/checks/is-function\");\nexports.css = (rules) => {\n    let css = \"\", v;\n    for (let r in rules) {\n        v = rules[r];\n        if (is_function_1.isFunction(v)) {\n            v = v(rules);\n        }\n        v != null && (css += `${r}:${v};`);\n    }\n    return css;\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst isa = require(\"@thi.ng/checks/is-array\");\nconst isi = require(\"@thi.ng/checks/is-not-string-iterable\");\nconst api_1 = require(\"@thi.ng/hiccup/api\");\nconst css_1 = require(\"@thi.ng/hiccup/css\");\nconst isArray = isa.isArray;\nconst isNotStringAndIterable = isi.isNotStringAndIterable;\n/**\n * See `HDOMImplementation` interface for further details.\n *\n * @param opts\n * @param parent\n * @param tree\n * @param insert\n */\nexports.createTree = (opts, impl, parent, tree, insert) => {\n    if (isArray(tree)) {\n        const tag = tree[0];\n        if (typeof tag === \"function\") {\n            return exports.createTree(opts, impl, parent, tag.apply(null, [opts.ctx, ...tree.slice(1)]), insert);\n        }\n        const attribs = tree[1];\n        if (attribs.__impl) {\n            return attribs.__impl\n                .createTree(opts, parent, tree, insert);\n        }\n        const el = impl.createElement(parent, tag, attribs, insert);\n        if (tree.length > 2) {\n            const n = tree.length;\n            for (let i = 2; i < n; i++) {\n                exports.createTree(opts, impl, el, tree[i]);\n            }\n        }\n        if (tree.__init) {\n            tree.__init.apply(tree.__this, [el, ...tree.__args]);\n        }\n        return el;\n    }\n    if (isNotStringAndIterable(tree)) {\n        const res = [];\n        for (let t of tree) {\n            res.push(exports.createTree(opts, impl, parent, t));\n        }\n        return res;\n    }\n    if (tree == null) {\n        return parent;\n    }\n    return impl.createTextElement(parent, tree);\n};\n/**\n * See `HDOMImplementation` interface for further details.\n *\n * @param opts\n * @param parent\n * @param tree\n * @param index\n */\nexports.hydrateTree = (opts, impl, parent, tree, index = 0) => {\n    if (isArray(tree)) {\n        const el = impl.getChild(parent, index);\n        if (typeof tree[0] === \"function\") {\n            exports.hydrateTree(opts, impl, parent, tree[0].apply(null, [opts.ctx, ...tree.slice(1)]), index);\n        }\n        const attribs = tree[1];\n        if (attribs.__impl) {\n            return attribs.__impl\n                .hydrateTree(opts, parent, tree, index);\n        }\n        if (tree.__init) {\n            tree.__init.apply(tree.__this, [el, ...tree.__args]);\n        }\n        for (let a in attribs) {\n            if (a.indexOf(\"on\") === 0) {\n                impl.setAttrib(el, a, attribs[a]);\n            }\n        }\n        for (let n = tree.length, i = 2; i < n; i++) {\n            exports.hydrateTree(opts, impl, el, tree[i], i - 2);\n        }\n    }\n    else if (isNotStringAndIterable(tree)) {\n        for (let t of tree) {\n            exports.hydrateTree(opts, impl, parent, t, index);\n            index++;\n        }\n    }\n};\n/**\n * Creates a new DOM element of type `tag` with optional `attribs`. If\n * `parent` is not `null`, the new element will be inserted as child at\n * given `insert` index. If `insert` is missing, the element will be\n * appended to the `parent`'s list of children. Returns new DOM node.\n *\n * If `tag` is a known SVG element name, the new element will be created\n * with the proper SVG XML namespace.\n *\n * @param parent\n * @param tag\n * @param attribs\n * @param insert\n */\nexports.createElement = (parent, tag, attribs, insert) => {\n    const el = api_1.SVG_TAGS[tag] ?\n        document.createElementNS(api_1.SVG_NS, tag) :\n        document.createElement(tag);\n    if (parent) {\n        if (insert == null) {\n            parent.appendChild(el);\n        }\n        else {\n            parent.insertBefore(el, parent.children[insert]);\n        }\n    }\n    if (attribs) {\n        exports.setAttribs(el, attribs);\n    }\n    return el;\n};\nexports.createTextElement = (parent, content, insert) => {\n    const el = document.createTextNode(content);\n    if (parent) {\n        if (insert === undefined) {\n            parent.appendChild(el);\n        }\n        else {\n            parent.insertBefore(el, parent.children[insert]);\n        }\n    }\n    return el;\n};\nexports.getChild = (parent, child) => parent.children[child];\nexports.replaceChild = (opts, impl, parent, child, tree) => (impl.removeChild(parent, child),\n    impl.createTree(opts, parent, tree, child));\nexports.cloneWithNewAttribs = (el, attribs) => {\n    const res = el.cloneNode(true);\n    exports.setAttribs(res, attribs);\n    el.parentNode.replaceChild(res, el);\n    return res;\n};\nexports.setContent = (el, body) => el.textContent = body;\nexports.setAttribs = (el, attribs) => {\n    for (let k in attribs) {\n        exports.setAttrib(el, k, attribs[k], attribs);\n    }\n    return el;\n};\n/**\n * Sets a single attribute on given element. If attrib name is NOT an\n * event name (prefix: \"on\") and its value is a function, it is called\n * with given `attribs` object (usually the full attrib object passed to\n * `setAttribs`) and the function's return value is used as the actual\n * attrib value.\n *\n * Special rules apply for certain attributes:\n *\n * - \"style\": delegated to `setStyle()`\n * - \"value\": delegated to `updateValueAttrib()`\n * - attrib IDs starting with \"on\" are treated as event listeners\n *\n * If the given (or computed) attrib value is `false` or `undefined` the\n * attrib is removed from the element.\n *\n * @param el\n * @param id\n * @param val\n * @param attribs\n */\nexports.setAttrib = (el, id, val, attribs) => {\n    if (id.startsWith(\"__\"))\n        return;\n    const isListener = id.indexOf(\"on\") === 0;\n    if (!isListener && typeof val === \"function\") {\n        val = val(attribs);\n    }\n    if (val !== undefined && val !== false) {\n        switch (id) {\n            case \"style\":\n                exports.setStyle(el, val);\n                break;\n            case \"value\":\n                exports.updateValueAttrib(el, val);\n                break;\n            case \"checked\":\n                // TODO add more native attribs?\n                el[id] = val;\n                break;\n            default:\n                if (isListener) {\n                    el.addEventListener(id.substr(2), val);\n                }\n                else {\n                    el.setAttribute(id, val);\n                }\n        }\n    }\n    else {\n        el[id] != null ? (el[id] = null) : el.removeAttribute(id);\n    }\n    return el;\n};\n/**\n * Updates an element's `value` property. For form elements it too\n * ensures the edit cursor retains its position.\n *\n * @param el\n * @param v\n */\nexports.updateValueAttrib = (el, v) => {\n    let ev;\n    switch (el.type) {\n        case \"text\":\n        case \"textarea\":\n        case \"password\":\n        case \"email\":\n        case \"url\":\n        case \"tel\":\n        case \"search\":\n            if ((ev = el.value) !== undefined && typeof v === \"string\") {\n                const off = v.length - (ev.length - el.selectionStart);\n                el.value = v;\n                el.selectionStart = el.selectionEnd = off;\n                break;\n            }\n        default:\n            el.value = v;\n    }\n};\nexports.removeAttribs = (el, attribs, prev) => {\n    for (let i = attribs.length; --i >= 0;) {\n        const a = attribs[i];\n        if (a.indexOf(\"on\") === 0) {\n            el.removeEventListener(a.substr(2), prev[a]);\n        }\n        else {\n            el[a] ? (el[a] = null) : el.removeAttribute(a);\n        }\n    }\n};\nexports.setStyle = (el, styles) => (el.setAttribute(\"style\", css_1.css(styles)), el);\nexports.clearDOM = (el) => el.innerHTML = \"\";\nexports.removeChild = (parent, childIdx) => {\n    const n = parent.children[childIdx];\n    if (n !== undefined) {\n        n.remove();\n    }\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst OBJP = Object.getPrototypeOf({});\n/**\n * Similar to `isObject()`, but also checks if prototype is that of\n * `Object` (or `null`).\n *\n * @param x\n */\nfunction isPlainObject(x) {\n    let proto;\n    return Object.prototype.toString.call(x) === \"[object Object]\" &&\n        (proto = Object.getPrototypeOf(x), proto === null || proto === OBJP);\n}\nexports.isPlainObject = isPlainObject;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass IllegalArgumentError extends Error {\n    constructor(msg) {\n        super(\"illegal argument(s)\" + (msg !== undefined ? \": \" + msg : \"\"));\n    }\n}\nexports.IllegalArgumentError = IllegalArgumentError;\nfunction illegalArgs(msg) {\n    throw new IllegalArgumentError(msg);\n}\nexports.illegalArgs = illegalArgs;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst isa = require(\"@thi.ng/checks/is-array\");\nconst insi = require(\"@thi.ng/checks/is-not-string-iterable\");\nconst iso = require(\"@thi.ng/checks/is-plain-object\");\nconst illegal_arguments_1 = require(\"@thi.ng/errors/illegal-arguments\");\nconst api_1 = require(\"@thi.ng/hiccup/api\");\nconst isArray = isa.isArray;\nconst isNotStringAndIterable = insi.isNotStringAndIterable;\nconst isPlainObject = iso.isPlainObject;\n/**\n * Expands single hiccup element/component into its canonical form:\n *\n * ```\n * [tagname, {attribs}, ...children]\n * ```\n *\n * Emmet-style ID and class names in the original tagname are moved into\n * the attribs object, e.g.:\n *\n * ```\n * [\"div#foo.bar.baz\"] => [\"div\", {id: \"foo\", class: \"bar baz\"}]\n * ```\n *\n * If both Emmet-style classes AND a `class` attrib exists, the former\n * are appended to the latter:\n *\n * ```\n * [\"div.bar.baz\", {class: \"foo\"}] => [\"div\", {class: \"foo bar baz\"}]\n * ```\n *\n * @param spec\n * @param keys\n */\nexports.normalizeElement = (spec, keys) => {\n    let tag = spec[0], hasAttribs = isPlainObject(spec[1]), match, id, clazz, attribs;\n    if (typeof tag !== \"string\" || !(match = api_1.TAG_REGEXP.exec(tag))) {\n        illegal_arguments_1.illegalArgs(`${tag} is not a valid tag name`);\n    }\n    // return orig if already normalized and satisfies key requirement\n    if (tag === match[1] && hasAttribs && (!keys || spec[1].key)) {\n        return spec;\n    }\n    attribs = hasAttribs ? Object.assign({}, spec[1]) : {};\n    id = match[2];\n    clazz = match[3];\n    if (id) {\n        attribs.id = id;\n    }\n    if (clazz) {\n        clazz = clazz.replace(/\\./g, \" \");\n        if (attribs.class) {\n            attribs.class += \" \" + clazz;\n        }\n        else {\n            attribs.class = clazz;\n        }\n    }\n    return [match[1], attribs, ...spec.slice(hasAttribs ? 2 : 1)];\n};\n/**\n * See `HDOMImplementation` interface for further details.\n *\n * @param opts\n * @param tree\n */\nexports.normalizeTree = (opts, tree) => _normalizeTree(tree, opts, opts.ctx, [0], opts.keys !== false, opts.span !== false);\nconst _normalizeTree = (tree, opts, ctx, path, keys, span) => {\n    if (tree == null) {\n        return;\n    }\n    if (isArray(tree)) {\n        if (tree.length === 0) {\n            return;\n        }\n        let norm, nattribs = tree[1], impl;\n        // if available, use branch-local normalize implementation\n        if (nattribs && (impl = nattribs.__impl) && (impl = impl.normalizeTree)) {\n            return impl(opts, tree);\n        }\n        const tag = tree[0];\n        // use result of function call\n        // pass ctx as first arg and remaining array elements as rest args\n        if (typeof tag === \"function\") {\n            return _normalizeTree(tag.apply(null, [ctx, ...tree.slice(1)]), opts, ctx, path, keys, span);\n        }\n        // component object w/ life cycle methods\n        // (render() is the only required hook)\n        if (typeof tag.render === \"function\") {\n            const args = [ctx, ...tree.slice(1)];\n            norm = _normalizeTree(tag.render.apply(tag, args), opts, ctx, path, keys, span);\n            if (isArray(norm)) {\n                norm.__this = tag;\n                norm.__init = tag.init;\n                norm.__release = tag.release;\n                norm.__args = args;\n            }\n            return norm;\n        }\n        norm = exports.normalizeElement(tree, keys);\n        nattribs = norm[1];\n        if (nattribs.__normalize === false) {\n            return norm;\n        }\n        if (keys && nattribs.key === undefined) {\n            nattribs.key = path.join(\"-\");\n        }\n        if (norm.length > 2) {\n            const tag = norm[0];\n            const res = [tag, nattribs];\n            span = span && !api_1.NO_SPANS[tag];\n            for (let i = 2, j = 2, k = 0, n = norm.length; i < n; i++) {\n                let el = norm[i];\n                if (el != null) {\n                    const isarray = isArray(el);\n                    if ((isarray && isArray(el[0])) || (!isarray && isNotStringAndIterable(el))) {\n                        for (let c of el) {\n                            c = _normalizeTree(c, opts, ctx, path.concat(k), keys, span);\n                            if (c !== undefined) {\n                                res[j++] = c;\n                            }\n                            k++;\n                        }\n                    }\n                    else {\n                        el = _normalizeTree(el, opts, ctx, path.concat(k), keys, span);\n                        if (el !== undefined) {\n                            res[j++] = el;\n                        }\n                        k++;\n                    }\n                }\n            }\n            return res;\n        }\n        return norm;\n    }\n    if (typeof tree === \"function\") {\n        return _normalizeTree(tree(ctx), opts, ctx, path, keys, span);\n    }\n    if (typeof tree.toHiccup === \"function\") {\n        return _normalizeTree(tree.toHiccup(opts.ctx), opts, ctx, path, keys, span);\n    }\n    if (typeof tree.deref === \"function\") {\n        return _normalizeTree(tree.deref(), opts, ctx, path, keys, span);\n    }\n    return span ?\n        [\"span\", keys ? { key: path.join(\"-\") } : {}, tree.toString()] :\n        tree.toString();\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst diff_1 = require(\"./diff\");\nconst dom_1 = require(\"./dom\");\nconst normalize_1 = require(\"./normalize\");\n/**\n * Default target implementation to manipulate browser DOM.\n */\nexports.DEFAULT_IMPL = {\n    createTree(opts, parent, tree, child) {\n        return dom_1.createTree(opts, this, parent, tree, child);\n    },\n    hydrateTree(opts, parent, tree, child) {\n        return dom_1.hydrateTree(opts, this, parent, tree, child);\n    },\n    diffTree(opts, parent, prev, curr, child) {\n        diff_1.diffTree(opts, this, parent, prev, curr, child);\n    },\n    normalizeTree: normalize_1.normalizeTree,\n    getElementById(id) {\n        return document.getElementById(id);\n    },\n    getChild: dom_1.getChild,\n    createElement: dom_1.createElement,\n    createTextElement: dom_1.createTextElement,\n    replaceChild(opts, parent, child, tree) {\n        dom_1.replaceChild(opts, this, parent, child, tree);\n    },\n    removeChild: dom_1.removeChild,\n    setContent: dom_1.setContent,\n    removeAttribs: dom_1.removeAttribs,\n    setAttrib: dom_1.setAttrib,\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction implementsFunction(x, fn) {\n    return x != null && typeof x[fn] === \"function\";\n}\nexports.implementsFunction = implementsFunction;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst implements_function_1 = require(\"@thi.ng/checks/implements-function\");\n/**\n * Takes an arbitrary `ctx` object and array of `keys`. Attempts to call\n * `.deref()` on all given keys' values and stores result values instead\n * of original. Returns updated copy of `ctx` or original if `ctx` is\n * `null` or no keys were given.\n *\n * @param ctx\n * @param keys\n */\nexports.derefContext = (ctx, keys) => {\n    if (ctx == null || !keys || !keys.length)\n        return ctx;\n    const res = Object.assign({}, ctx);\n    for (let k of keys) {\n        const v = res[k];\n        implements_function_1.implementsFunction(v, \"deref\") && (res[k] = v.deref());\n    }\n    return res;\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isString(x) {\n    return typeof x === \"string\";\n}\nexports.isString = isString;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst is_string_1 = require(\"@thi.ng/checks/is-string\");\nexports.resolveRoot = (root, impl) => is_string_1.isString(root) ?\n    impl.getElementById(root) :\n    root;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst deref_1 = require(\"@thi.ng/hiccup/deref\");\nconst default_1 = require(\"./default\");\nconst utils_1 = require(\"./utils\");\n/**\n * One-off hdom tree conversion & target DOM application. Takes same\n * options as `start()`, but performs no diffing and only creates or\n * hydrates target once. The given tree is first normalized and if\n * result is `null` or `undefined` no further action will be taken.\n *\n * @param tree\n * @param opts\n * @param impl\n */\nexports.renderOnce = (tree, opts = {}, impl = default_1.DEFAULT_IMPL) => {\n    opts = Object.assign({ root: \"app\" }, opts);\n    opts.ctx = deref_1.derefContext(opts.ctx, opts.autoDerefKeys);\n    const root = utils_1.resolveRoot(opts.root, impl);\n    tree = impl.normalizeTree(opts, tree);\n    if (!tree)\n        return;\n    opts.hydrate ?\n        impl.hydrateTree(opts, root, tree) :\n        impl.createTree(opts, root, tree);\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst deref_1 = require(\"@thi.ng/hiccup/deref\");\nconst default_1 = require(\"./default\");\nconst utils_1 = require(\"./utils\");\n/**\n * Takes an hiccup tree (array, function or component object w/ life\n * cycle methods) and an optional object of DOM update options. Starts\n * RAF update loop, in each iteration first normalizing given tree, then\n * computing diff to previous frame's tree and applying any changes to\n * the real DOM. The `ctx` option can be used for passing arbitrary\n * config data or state down into the hiccup component tree. Any\n * embedded component function in the tree will receive this context\n * object (shallow copy) as first argument, as will life cycle methods\n * in component objects. If the `autoDerefKeys` option is given, attempts\n * to auto-expand/deref the given keys in the user supplied context\n * object (`ctx` option) prior to *each* tree normalization. All of\n * these values should implement the thi.ng/api `IDeref` interface (e.g.\n * atoms, cursors, views, rstreams etc.). This feature can be used to\n * define dynamic contexts linked to the main app state, e.g. using\n * derived views provided by thi.ng/atom.\n *\n * **Selective updates**: No updates will be applied if the given hiccup\n * tree is `undefined` or `null` or a root component function returns no\n * value. This way a given root function can do some state handling of\n * its own and implement fail-fast checks to determine no DOM updates\n * are necessary, save effort re-creating a new hiccup tree and request\n * skipping DOM updates via this function. In this case, the previous\n * DOM tree is kept around until the root function returns a tree again,\n * which then is diffed and applied against the previous tree kept as\n * usual. Any number of frames may be skipped this way.\n *\n * **Important:** Unless the `hydrate` option is enabled, the parent\n * element given is assumed to have NO children at the time when\n * `start()` is called. Since hdom does NOT track the real DOM, the\n * resulting changes will result in potentially undefined behavior if\n * the parent element wasn't empty. Likewise, if `hydrate` is enabled,\n * it is assumed that an equivalent DOM (minus listeners) already exists\n * (i.e. generated via SSR) when `start()` is called. Any other\n * discrepancies between the pre-existing DOM and the hdom trees will\n * cause undefined behavior.\n *\n * Returns a function, which when called, immediately cancels the update\n * loop.\n *\n * @param tree hiccup DOM tree\n * @param opts options\n * @param impl hdom target implementation\n */\nexports.start = (tree, opts = {}, impl = default_1.DEFAULT_IMPL) => {\n    const _opts = Object.assign({ root: \"app\" }, opts);\n    let prev = [];\n    let isActive = true;\n    const root = utils_1.resolveRoot(_opts.root, impl);\n    const update = () => {\n        if (isActive) {\n            _opts.ctx = deref_1.derefContext(opts.ctx, _opts.autoDerefKeys);\n            const curr = impl.normalizeTree(_opts, tree);\n            if (curr != null) {\n                if (_opts.hydrate) {\n                    impl.hydrateTree(_opts, root, curr);\n                    _opts.hydrate = false;\n                }\n                else {\n                    impl.diffTree(_opts, root, prev, curr);\n                }\n                prev = curr;\n            }\n            // check again in case one of the components called cancel\n            isActive && requestAnimationFrame(update);\n        }\n    };\n    requestAnimationFrame(update);\n    return () => (isActive = false);\n};\n","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./api\"));\n__export(require(\"./default\"));\n__export(require(\"./diff\"));\n__export(require(\"./dom\"));\n__export(require(\"./normalize\"));\n__export(require(\"./render-once\"));\n__export(require(\"./start\"));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Configurable canvas component. Used as common base for `canvasWebGL`\n * and `canvas2D` wrappers.\n *\n * @param type canvas context type\n * @param handlers user handlers\n * @param opts canvas context creation options\n */\nconst _canvas = (type, { init, update, release }, opts) => {\n    let el, ctx;\n    let frame = 0;\n    let time = 0;\n    return {\n        init(_el, hctx, ...args) {\n            el = _el;\n            exports.adaptDPI(el, el.width, el.height);\n            ctx = el.getContext(type, opts);\n            time = Date.now();\n            init && init(el, ctx, hctx, ...args);\n            update && update(el, ctx, hctx, time, frame++, ...args);\n        },\n        render(hctx, ...args) {\n            ctx && update && update(el, ctx, hctx, Date.now() - time, frame++, ...args);\n            return [\"canvas\", args[0]];\n        },\n        release(hctx, ...args) {\n            release && release(el, ctx, hctx, ...args);\n        }\n    };\n};\n/**\n * Higher order WebGL canvas component delegating to user provided\n * handlers.\n *\n * Note: Since this is an higher order component, if used within a\n * non-static parent component, this function itself cannot be directly\n * inlined into hdom tree and must be initialized prior/outside, however\n * the returned component can be used as normal.\n *\n * ```\n * const glcanvas = canvasWebGL({\n *   render: (canv, gl, hctx, time, frame, ...args) => {\n *     const col = 0.5 + 0.5 * Math.sin(time);\n *     gl.clearColor(col, col, col, 1);\n *   }\n * });\n * ...\n * [glcanvas, {id: \"foo\", width: 640, height: 480}]\n * ```\n *\n * @param handlers user provided handlers\n * @param opts canvas context creation options\n */\nexports.canvasWebGL = (handlers, opts) => _canvas(\"webgl\", handlers, opts);\n/**\n * Same as `canvasWebGL` but targets WebGL2.\n *\n * @param handlers user provided handlers\n * @param opts canvas context creation options\n */\nexports.canvasWebGL2 = (handlers, opts) => _canvas(\"webgl2\", handlers, opts);\n/**\n * Similar to `canvasWebGL`, but targets default 2D drawing context.\n *\n * @param handlers user provided handlers\n * @param glopts canvas context creation options\n */\nexports.canvas2D = (handlers, opts) => _canvas(\"2d\", handlers, opts);\n/**\n * Sets the canvas size to given `width` & `height` and adjusts style to\n * compensate for HDPI devices. Note: For 2D canvases, this will\n * automatically clear any prior canvas content.\n *\n * @param canvas\n * @param width uncompensated pixel width\n * @param height uncompensated pixel height\n */\nexports.adaptDPI = (canvas, width, height) => {\n    const dpr = window.devicePixelRatio || 1;\n    if (dpr != 1) {\n        canvas.style.width = `${width}px`;\n        canvas.style.height = `${height}px`;\n    }\n    canvas.width = width * dpr;\n    canvas.height = height * dpr;\n    return dpr;\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction existsAndNotNull(x) {\n    return x != null;\n}\nexports.existsAndNotNull = existsAndNotNull;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction exists(x) {\n    return x !== undefined;\n}\nexports.exists = exists;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction hasCrypto() {\n    return typeof window !== \"undefined\" && window[\"crypto\"] !== undefined;\n}\nexports.hasCrypto = hasCrypto;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction hasMaxLength(len, x) {\n    return x != null && x.length <= len;\n}\nexports.hasMaxLength = hasMaxLength;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction hasMinLength(len, x) {\n    return x != null && x.length >= len;\n}\nexports.hasMinLength = hasMinLength;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst is_function_1 = require(\"./is-function\");\nfunction hasPerformance() {\n    return typeof performance !== 'undefined' && is_function_1.isFunction(performance.now);\n}\nexports.hasPerformance = hasPerformance;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction hasWASM() {\n    return (typeof window !== \"undefined\" && typeof window[\"WebAssembly\"] !== \"undefined\") ||\n        (typeof global !== \"undefined\" && typeof global[\"WebAssembly\"] !== \"undefined\");\n}\nexports.hasWASM = hasWASM;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction hasWebGL() {\n    try {\n        document.createElement(\"canvas\").getContext(\"webgl\");\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n}\nexports.hasWebGL = hasWebGL;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction hasWebSocket() {\n    return typeof WebSocket !== \"undefined\";\n}\nexports.hasWebSocket = hasWebSocket;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isArrayLike(x) {\n    return (x != null && typeof x !== \"function\" && x.length !== undefined);\n}\nexports.isArrayLike = isArrayLike;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isBlob(x) {\n    return x instanceof Blob;\n}\nexports.isBlob = isBlob;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isBoolean(x) {\n    return typeof x === \"boolean\";\n}\nexports.isBoolean = isBoolean;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isChrome() {\n    return typeof window !== \"undefined\" && !!window[\"chrome\"];\n}\nexports.isChrome = isChrome;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isDate(x) {\n    return x instanceof Date;\n}\nexports.isDate = isDate;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isEven(x) {\n    return (x % 2) === 0;\n}\nexports.isEven = isEven;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isFalse(x) {\n    return x === false;\n}\nexports.isFalse = isFalse;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isFile(x) {\n    return x instanceof File;\n}\nexports.isFile = isFile;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isFirefox() {\n    return typeof window !== \"undefined\" && !!window[\"InstallTrigger\"];\n}\nexports.isFirefox = isFirefox;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isIE() {\n    return typeof document !== \"undefined\" &&\n        (typeof document[\"documentMode\"] !== \"undefined\" ||\n            navigator.userAgent.indexOf(\"MSIE\") > 0);\n}\nexports.isIE = isIE;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isInRange(min, max, x) {\n    return x >= min && x <= max;\n}\nexports.isInRange = isInRange;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isInt32(x) {\n    return typeof x === \"number\" && (x | 0) === x;\n}\nexports.isInt32 = isInt32;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isIterable(x) {\n    return x != null && typeof x[Symbol.iterator] === \"function\";\n}\nexports.isIterable = isIterable;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isMap(x) {\n    return x instanceof Map;\n}\nexports.isMap = isMap;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isMobile() {\n    return typeof navigator !== \"undefined\" &&\n        /mobile|tablet|ip(ad|hone|od)|android|silk/i.test(navigator.userAgent) &&\n        !/crios/i.test(navigator.userAgent);\n}\nexports.isMobile = isMobile;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isNaN(x) {\n    return x !== x;\n}\nexports.isNaN = isNaN;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isNegative(x) {\n    return typeof x === \"number\" && x < 0;\n}\nexports.isNegative = isNegative;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isNode() {\n    if (typeof process === \"object\") {\n        if (typeof process.versions === \"object\") {\n            if (typeof process.versions.node !== \"undefined\") {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nexports.isNode = isNode;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isNull(x) {\n    return x === null;\n}\nexports.isNull = isNull;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isNumber(x) {\n    return typeof x === \"number\";\n}\nexports.isNumber = isNumber;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isObject(x) {\n    return x !== null && typeof x === \"object\";\n}\nexports.isObject = isObject;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isOdd(x) {\n    return (x % 2) !== 0;\n}\nexports.isOdd = isOdd;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isPosititve(x) {\n    return typeof x === \"number\" && x > 0;\n}\nexports.isPosititve = isPosititve;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isPromise(x) {\n    return x instanceof Promise;\n}\nexports.isPromise = isPromise;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst implements_function_1 = require(\"./implements-function\");\nfunction isPromiseLike(x) {\n    return x instanceof Promise ||\n        (implements_function_1.implementsFunction(x, \"then\") && implements_function_1.implementsFunction(x, \"catch\"));\n}\nexports.isPromiseLike = isPromiseLike;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isRegExp(x) {\n    return x instanceof RegExp;\n}\nexports.isRegExp = isRegExp;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst is_chrome_1 = require(\"./is-chrome\");\nfunction isSafari() {\n    return typeof navigator !== \"undefined\" && /Safari/.test(navigator.userAgent) && !is_chrome_1.isChrome();\n}\nexports.isSafari = isSafari;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isSet(x) {\n    return x instanceof Set;\n}\nexports.isSet = isSet;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isSymbol(x) {\n    return typeof x === \"symbol\";\n}\nexports.isSymbol = isSymbol;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isTransferable(x) {\n    return x instanceof ArrayBuffer ||\n        (typeof SharedArrayBuffer !== \"undefined\" && x instanceof SharedArrayBuffer) ||\n        (typeof MessagePort !== \"undefined\" && x instanceof MessagePort);\n}\nexports.isTransferable = isTransferable;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isTrue(x) {\n    return x === true;\n}\nexports.isTrue = isTrue;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isTypedArray(x) {\n    return x && (x.constructor === Float32Array ||\n        x.constructor === Uint32Array ||\n        x.constructor === Uint8Array ||\n        x.constructor === Uint8ClampedArray ||\n        x.constructor === Int8Array ||\n        x.constructor === Uint16Array ||\n        x.constructor === Int16Array ||\n        x.constructor === Int32Array ||\n        x.constructor === Float64Array);\n}\nexports.isTypedArray = isTypedArray;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isUint32(x) {\n    return typeof x === \"number\" && (x >>> 0) === x;\n}\nexports.isUint32 = isUint32;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isUndefined(x) {\n    return x === undefined;\n}\nexports.isUndefined = isUndefined;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isUUID(x) {\n    return /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i.test(x);\n}\nexports.isUUID = isUUID;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isUUIDv4(x) {\n    return /^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i.test(x);\n}\nexports.isUUIDv4 = isUUIDv4;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isZero(x) {\n    return x === 0;\n}\nexports.isZero = isZero;\n","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./exists-not-null\"));\n__export(require(\"./exists\"));\n__export(require(\"./has-crypto\"));\n__export(require(\"./has-max-length\"));\n__export(require(\"./has-min-length\"));\n__export(require(\"./has-performance\"));\n__export(require(\"./has-wasm\"));\n__export(require(\"./has-webgl\"));\n__export(require(\"./has-websocket\"));\n__export(require(\"./implements-function\"));\n__export(require(\"./is-array\"));\n__export(require(\"./is-arraylike\"));\n__export(require(\"./is-blob\"));\n__export(require(\"./is-boolean\"));\n__export(require(\"./is-chrome\"));\n__export(require(\"./is-date\"));\n__export(require(\"./is-even\"));\n__export(require(\"./is-false\"));\n__export(require(\"./is-file\"));\n__export(require(\"./is-firefox\"));\n__export(require(\"./is-function\"));\n__export(require(\"./is-ie\"));\n__export(require(\"./is-in-range\"));\n__export(require(\"./is-int32\"));\n__export(require(\"./is-iterable\"));\n__export(require(\"./is-map\"));\n__export(require(\"./is-mobile\"));\n__export(require(\"./is-nan\"));\n__export(require(\"./is-negative\"));\n__export(require(\"./is-node\"));\n__export(require(\"./is-not-string-iterable\"));\n__export(require(\"./is-null\"));\n__export(require(\"./is-number\"));\n__export(require(\"./is-object\"));\n__export(require(\"./is-odd\"));\n__export(require(\"./is-plain-object\"));\n__export(require(\"./is-positive\"));\n__export(require(\"./is-promise\"));\n__export(require(\"./is-promiselike\"));\n__export(require(\"./is-regexp\"));\n__export(require(\"./is-safari\"));\n__export(require(\"./is-set\"));\n__export(require(\"./is-string\"));\n__export(require(\"./is-symbol\"));\n__export(require(\"./is-transferable\"));\n__export(require(\"./is-true\"));\n__export(require(\"./is-typedarray\"));\n__export(require(\"./is-uint32\"));\n__export(require(\"./is-undefined\"));\n__export(require(\"./is-uuid\"));\n__export(require(\"./is-uuid4\"));\n__export(require(\"./is-zero\"));\n","import createRegl from 'regl'\n\nexport function createFrameCatch(regl: createRegl.Regl) {\n  return function frameCatch(func: (n: any) => void) {\n    const loop = regl.frame((...args) => {\n      try {\n        func(...args)\n      } catch (err) {\n        loop.cancel()\n        throw err\n      }\n    })\n    return loop\n  }\n}\n","\n/**\n * An Array.prototype.slice.call(arguments) alternative\n *\n * @param {Object} args something with a length\n * @param {Number} slice\n * @param {Number} sliceEnd\n * @api public\n */\n\nmodule.exports = function (args, slice, sliceEnd) {\n  var ret = [];\n  var len = args.length;\n\n  if (0 === len) return ret;\n\n  var start = slice < 0\n    ? Math.max(0, slice + len)\n    : slice || 0;\n\n  if (sliceEnd !== undefined) {\n    len = sliceEnd < 0\n      ? sliceEnd + len\n      : sliceEnd\n  }\n\n  while (len-- > start) {\n    ret[len - start] = args[len];\n  }\n\n  return ret;\n}\n\n","import slice = require('sliced')\nimport { Mesh } from '@tstackgl/types'\nimport { Vec3 } from '@tstackgl/types'\n\nexport function combine(meshes: Array<Mesh>): Mesh {\n  const hasNormals = meshes.every(\n    mesh => mesh.normals && mesh.positions.length === mesh.normals.length,\n  )\n  const hasColors = meshes.every(\n    mesh => mesh.colors && mesh.positions.length === mesh.colors.length,\n  )\n\n  const pos = []\n  const cel = []\n  const nor = []\n  const color = []\n  let p = 0\n  let c = 0\n  let k = 0\n  let j = 0\n\n  for (let i = 0; i < meshes.length; i++) {\n    const mpos = meshes[i].positions\n    const mcel = meshes[i].cells\n    const mnor = meshes[i].normals\n    const mcol = meshes[i].colors\n\n    for (j = 0; j < mpos.length; j++) {\n      pos[j + p] = slice(mpos[j])\n      if (hasNormals) nor[j + p] = slice(mnor[j])\n      if (hasColors) color[j + p] = slice(mcol[j])\n    }\n\n    for (j = 0; j < mcel.length; j++) {\n      cel[(k = j + c)] = slice(mcel[j])\n\n      for (let l = 0; l < cel[k].length; l++) {\n        cel[k][l] += p\n      }\n    }\n\n    p += mpos.length\n    c += mcel.length\n  }\n\n  return {\n    cells: cel as Array<Vec3>,\n    positions: pos as Array<Vec3>,\n    ...(hasNormals && { normals: nor as Array<Vec3> }),\n    ...(hasColors && { colors: color as Array<Vec3> }),\n  }\n}\n","module.exports = create;\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\nfunction create() {\n    var out = new Float32Array(16);\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n};","module.exports = clone;\n\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {mat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\nfunction clone(a) {\n    var out = new Float32Array(16);\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n};","module.exports = copy;\n\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nfunction copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n};","module.exports = identity;\n\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\nfunction identity(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n};","module.exports = transpose;\n\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nfunction transpose(out, a) {\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\n    if (out === a) {\n        var a01 = a[1], a02 = a[2], a03 = a[3],\n            a12 = a[6], a13 = a[7],\n            a23 = a[11];\n\n        out[1] = a[4];\n        out[2] = a[8];\n        out[3] = a[12];\n        out[4] = a01;\n        out[6] = a[9];\n        out[7] = a[13];\n        out[8] = a02;\n        out[9] = a12;\n        out[11] = a[14];\n        out[12] = a03;\n        out[13] = a13;\n        out[14] = a23;\n    } else {\n        out[0] = a[0];\n        out[1] = a[4];\n        out[2] = a[8];\n        out[3] = a[12];\n        out[4] = a[1];\n        out[5] = a[5];\n        out[6] = a[9];\n        out[7] = a[13];\n        out[8] = a[2];\n        out[9] = a[6];\n        out[10] = a[10];\n        out[11] = a[14];\n        out[12] = a[3];\n        out[13] = a[7];\n        out[14] = a[11];\n        out[15] = a[15];\n    }\n    \n    return out;\n};","module.exports = invert;\n\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nfunction invert(out, a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],\n\n        b00 = a00 * a11 - a01 * a10,\n        b01 = a00 * a12 - a02 * a10,\n        b02 = a00 * a13 - a03 * a10,\n        b03 = a01 * a12 - a02 * a11,\n        b04 = a01 * a13 - a03 * a11,\n        b05 = a02 * a13 - a03 * a12,\n        b06 = a20 * a31 - a21 * a30,\n        b07 = a20 * a32 - a22 * a30,\n        b08 = a20 * a33 - a23 * a30,\n        b09 = a21 * a32 - a22 * a31,\n        b10 = a21 * a33 - a23 * a31,\n        b11 = a22 * a33 - a23 * a32,\n\n        // Calculate the determinant\n        det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n    if (!det) { \n        return null; \n    }\n    det = 1.0 / det;\n\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n    out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n    out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n    out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n    out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n    out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n    out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n    out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n    out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n    out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n\n    return out;\n};","module.exports = adjoint;\n\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nfunction adjoint(out, a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n    out[0]  =  (a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22));\n    out[1]  = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n    out[2]  =  (a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12));\n    out[3]  = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n    out[4]  = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n    out[5]  =  (a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22));\n    out[6]  = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n    out[7]  =  (a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12));\n    out[8]  =  (a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21));\n    out[9]  = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n    out[10] =  (a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11));\n    out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n    out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n    out[13] =  (a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21));\n    out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n    out[15] =  (a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11));\n    return out;\n};","module.exports = determinant;\n\n/**\n * Calculates the determinant of a mat4\n *\n * @param {mat4} a the source matrix\n * @returns {Number} determinant of a\n */\nfunction determinant(a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],\n\n        b00 = a00 * a11 - a01 * a10,\n        b01 = a00 * a12 - a02 * a10,\n        b02 = a00 * a13 - a03 * a10,\n        b03 = a01 * a12 - a02 * a11,\n        b04 = a01 * a13 - a03 * a11,\n        b05 = a02 * a13 - a03 * a12,\n        b06 = a20 * a31 - a21 * a30,\n        b07 = a20 * a32 - a22 * a30,\n        b08 = a20 * a33 - a23 * a30,\n        b09 = a21 * a32 - a22 * a31,\n        b10 = a21 * a33 - a23 * a31,\n        b11 = a22 * a33 - a23 * a32;\n\n    // Calculate the determinant\n    return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n};","module.exports = multiply;\n\n/**\n * Multiplies two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nfunction multiply(out, a, b) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n    // Cache only the current line of the second matrix\n    var b0  = b[0], b1 = b[1], b2 = b[2], b3 = b[3];  \n    out[0] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[1] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[2] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[3] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n    b0 = b[4]; b1 = b[5]; b2 = b[6]; b3 = b[7];\n    out[4] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[5] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[6] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[7] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n    b0 = b[8]; b1 = b[9]; b2 = b[10]; b3 = b[11];\n    out[8] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[9] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[10] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[11] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n    b0 = b[12]; b1 = b[13]; b2 = b[14]; b3 = b[15];\n    out[12] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[13] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[14] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[15] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n    return out;\n};","module.exports = translate;\n\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to translate\n * @param {vec3} v vector to translate by\n * @returns {mat4} out\n */\nfunction translate(out, a, v) {\n    var x = v[0], y = v[1], z = v[2],\n        a00, a01, a02, a03,\n        a10, a11, a12, a13,\n        a20, a21, a22, a23;\n\n    if (a === out) {\n        out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n        out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n        out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n        out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n    } else {\n        a00 = a[0]; a01 = a[1]; a02 = a[2]; a03 = a[3];\n        a10 = a[4]; a11 = a[5]; a12 = a[6]; a13 = a[7];\n        a20 = a[8]; a21 = a[9]; a22 = a[10]; a23 = a[11];\n\n        out[0] = a00; out[1] = a01; out[2] = a02; out[3] = a03;\n        out[4] = a10; out[5] = a11; out[6] = a12; out[7] = a13;\n        out[8] = a20; out[9] = a21; out[10] = a22; out[11] = a23;\n\n        out[12] = a00 * x + a10 * y + a20 * z + a[12];\n        out[13] = a01 * x + a11 * y + a21 * z + a[13];\n        out[14] = a02 * x + a12 * y + a22 * z + a[14];\n        out[15] = a03 * x + a13 * y + a23 * z + a[15];\n    }\n\n    return out;\n};","module.exports = scale;\n\n/**\n * Scales the mat4 by the dimensions in the given vec3\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {vec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\nfunction scale(out, a, v) {\n    var x = v[0], y = v[1], z = v[2];\n\n    out[0] = a[0] * x;\n    out[1] = a[1] * x;\n    out[2] = a[2] * x;\n    out[3] = a[3] * x;\n    out[4] = a[4] * y;\n    out[5] = a[5] * y;\n    out[6] = a[6] * y;\n    out[7] = a[7] * y;\n    out[8] = a[8] * z;\n    out[9] = a[9] * z;\n    out[10] = a[10] * z;\n    out[11] = a[11] * z;\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n};","module.exports = rotate;\n\n/**\n * Rotates a mat4 by the given angle\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {vec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nfunction rotate(out, a, rad, axis) {\n    var x = axis[0], y = axis[1], z = axis[2],\n        len = Math.sqrt(x * x + y * y + z * z),\n        s, c, t,\n        a00, a01, a02, a03,\n        a10, a11, a12, a13,\n        a20, a21, a22, a23,\n        b00, b01, b02,\n        b10, b11, b12,\n        b20, b21, b22;\n\n    if (Math.abs(len) < 0.000001) { return null; }\n    \n    len = 1 / len;\n    x *= len;\n    y *= len;\n    z *= len;\n\n    s = Math.sin(rad);\n    c = Math.cos(rad);\n    t = 1 - c;\n\n    a00 = a[0]; a01 = a[1]; a02 = a[2]; a03 = a[3];\n    a10 = a[4]; a11 = a[5]; a12 = a[6]; a13 = a[7];\n    a20 = a[8]; a21 = a[9]; a22 = a[10]; a23 = a[11];\n\n    // Construct the elements of the rotation matrix\n    b00 = x * x * t + c; b01 = y * x * t + z * s; b02 = z * x * t - y * s;\n    b10 = x * y * t - z * s; b11 = y * y * t + c; b12 = z * y * t + x * s;\n    b20 = x * z * t + y * s; b21 = y * z * t - x * s; b22 = z * z * t + c;\n\n    // Perform rotation-specific matrix multiplication\n    out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n    out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n    out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n    out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n    out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n    out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n    out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n    out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n    out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n    out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n    out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n    out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged last row\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n    return out;\n};","module.exports = rotateX;\n\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nfunction rotateX(out, a, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad),\n        a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7],\n        a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged rows\n        out[0]  = a[0];\n        out[1]  = a[1];\n        out[2]  = a[2];\n        out[3]  = a[3];\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n\n    // Perform axis-specific matrix multiplication\n    out[4] = a10 * c + a20 * s;\n    out[5] = a11 * c + a21 * s;\n    out[6] = a12 * c + a22 * s;\n    out[7] = a13 * c + a23 * s;\n    out[8] = a20 * c - a10 * s;\n    out[9] = a21 * c - a11 * s;\n    out[10] = a22 * c - a12 * s;\n    out[11] = a23 * c - a13 * s;\n    return out;\n};","module.exports = rotateY;\n\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nfunction rotateY(out, a, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad),\n        a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3],\n        a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged rows\n        out[4]  = a[4];\n        out[5]  = a[5];\n        out[6]  = a[6];\n        out[7]  = a[7];\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n\n    // Perform axis-specific matrix multiplication\n    out[0] = a00 * c - a20 * s;\n    out[1] = a01 * c - a21 * s;\n    out[2] = a02 * c - a22 * s;\n    out[3] = a03 * c - a23 * s;\n    out[8] = a00 * s + a20 * c;\n    out[9] = a01 * s + a21 * c;\n    out[10] = a02 * s + a22 * c;\n    out[11] = a03 * s + a23 * c;\n    return out;\n};","module.exports = rotateZ;\n\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nfunction rotateZ(out, a, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad),\n        a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3],\n        a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged last row\n        out[8]  = a[8];\n        out[9]  = a[9];\n        out[10] = a[10];\n        out[11] = a[11];\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n\n    // Perform axis-specific matrix multiplication\n    out[0] = a00 * c + a10 * s;\n    out[1] = a01 * c + a11 * s;\n    out[2] = a02 * c + a12 * s;\n    out[3] = a03 * c + a13 * s;\n    out[4] = a10 * c - a00 * s;\n    out[5] = a11 * c - a01 * s;\n    out[6] = a12 * c - a02 * s;\n    out[7] = a13 * c - a03 * s;\n    return out;\n};","module.exports = fromRotation\n\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest)\n *     mat4.rotate(dest, dest, rad, axis)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @param {vec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nfunction fromRotation(out, rad, axis) {\n  var s, c, t\n  var x = axis[0]\n  var y = axis[1]\n  var z = axis[2]\n  var len = Math.sqrt(x * x + y * y + z * z)\n\n  if (Math.abs(len) < 0.000001) {\n    return null\n  }\n\n  len = 1 / len\n  x *= len\n  y *= len\n  z *= len\n\n  s = Math.sin(rad)\n  c = Math.cos(rad)\n  t = 1 - c\n\n  // Perform rotation-specific matrix multiplication\n  out[0] = x * x * t + c\n  out[1] = y * x * t + z * s\n  out[2] = z * x * t - y * s\n  out[3] = 0\n  out[4] = x * y * t - z * s\n  out[5] = y * y * t + c\n  out[6] = z * y * t + x * s\n  out[7] = 0\n  out[8] = x * z * t + y * s\n  out[9] = y * z * t - x * s\n  out[10] = z * z * t + c\n  out[11] = 0\n  out[12] = 0\n  out[13] = 0\n  out[14] = 0\n  out[15] = 1\n  return out\n}\n","module.exports = fromRotationTranslation;\n\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     var quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @returns {mat4} out\n */\nfunction fromRotationTranslation(out, q, v) {\n    // Quaternion math\n    var x = q[0], y = q[1], z = q[2], w = q[3],\n        x2 = x + x,\n        y2 = y + y,\n        z2 = z + z,\n\n        xx = x * x2,\n        xy = x * y2,\n        xz = x * z2,\n        yy = y * y2,\n        yz = y * z2,\n        zz = z * z2,\n        wx = w * x2,\n        wy = w * y2,\n        wz = w * z2;\n\n    out[0] = 1 - (yy + zz);\n    out[1] = xy + wz;\n    out[2] = xz - wy;\n    out[3] = 0;\n    out[4] = xy - wz;\n    out[5] = 1 - (xx + zz);\n    out[6] = yz + wx;\n    out[7] = 0;\n    out[8] = xz + wy;\n    out[9] = yz - wx;\n    out[10] = 1 - (xx + yy);\n    out[11] = 0;\n    out[12] = v[0];\n    out[13] = v[1];\n    out[14] = v[2];\n    out[15] = 1;\n    \n    return out;\n};","module.exports = fromScaling\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest)\n *     mat4.scale(dest, dest, vec)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {vec3} v Scaling vector\n * @returns {mat4} out\n */\nfunction fromScaling(out, v) {\n  out[0] = v[0]\n  out[1] = 0\n  out[2] = 0\n  out[3] = 0\n  out[4] = 0\n  out[5] = v[1]\n  out[6] = 0\n  out[7] = 0\n  out[8] = 0\n  out[9] = 0\n  out[10] = v[2]\n  out[11] = 0\n  out[12] = 0\n  out[13] = 0\n  out[14] = 0\n  out[15] = 1\n  return out\n}\n","module.exports = fromTranslation\n\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest)\n *     mat4.translate(dest, dest, vec)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {vec3} v Translation vector\n * @returns {mat4} out\n */\nfunction fromTranslation(out, v) {\n  out[0] = 1\n  out[1] = 0\n  out[2] = 0\n  out[3] = 0\n  out[4] = 0\n  out[5] = 1\n  out[6] = 0\n  out[7] = 0\n  out[8] = 0\n  out[9] = 0\n  out[10] = 1\n  out[11] = 0\n  out[12] = v[0]\n  out[13] = v[1]\n  out[14] = v[2]\n  out[15] = 1\n  return out\n}\n","module.exports = fromXRotation\n\n/**\n * Creates a matrix from the given angle around the X axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest)\n *     mat4.rotateX(dest, dest, rad)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nfunction fromXRotation(out, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad)\n\n    // Perform axis-specific matrix multiplication\n    out[0] = 1\n    out[1] = 0\n    out[2] = 0\n    out[3] = 0\n    out[4] = 0\n    out[5] = c\n    out[6] = s\n    out[7] = 0\n    out[8] = 0\n    out[9] = -s\n    out[10] = c\n    out[11] = 0\n    out[12] = 0\n    out[13] = 0\n    out[14] = 0\n    out[15] = 1\n    return out\n}","module.exports = fromYRotation\n\n/**\n * Creates a matrix from the given angle around the Y axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest)\n *     mat4.rotateY(dest, dest, rad)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nfunction fromYRotation(out, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad)\n\n    // Perform axis-specific matrix multiplication\n    out[0] = c\n    out[1] = 0\n    out[2] = -s\n    out[3] = 0\n    out[4] = 0\n    out[5] = 1\n    out[6] = 0\n    out[7] = 0\n    out[8] = s\n    out[9] = 0\n    out[10] = c\n    out[11] = 0\n    out[12] = 0\n    out[13] = 0\n    out[14] = 0\n    out[15] = 1\n    return out\n}","module.exports = fromZRotation\n\n/**\n * Creates a matrix from the given angle around the Z axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest)\n *     mat4.rotateZ(dest, dest, rad)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nfunction fromZRotation(out, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad)\n\n    // Perform axis-specific matrix multiplication\n    out[0] = c\n    out[1] = s\n    out[2] = 0\n    out[3] = 0\n    out[4] = -s\n    out[5] = c\n    out[6] = 0\n    out[7] = 0\n    out[8] = 0\n    out[9] = 0\n    out[10] = 1\n    out[11] = 0\n    out[12] = 0\n    out[13] = 0\n    out[14] = 0\n    out[15] = 1\n    return out\n}","module.exports = fromQuat;\n\n/**\n * Creates a matrix from a quaternion rotation.\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @returns {mat4} out\n */\nfunction fromQuat(out, q) {\n    var x = q[0], y = q[1], z = q[2], w = q[3],\n        x2 = x + x,\n        y2 = y + y,\n        z2 = z + z,\n\n        xx = x * x2,\n        yx = y * x2,\n        yy = y * y2,\n        zx = z * x2,\n        zy = z * y2,\n        zz = z * z2,\n        wx = w * x2,\n        wy = w * y2,\n        wz = w * z2;\n\n    out[0] = 1 - yy - zz;\n    out[1] = yx + wz;\n    out[2] = zx - wy;\n    out[3] = 0;\n\n    out[4] = yx - wz;\n    out[5] = 1 - xx - zz;\n    out[6] = zy + wx;\n    out[7] = 0;\n\n    out[8] = zx + wy;\n    out[9] = zy - wx;\n    out[10] = 1 - xx - yy;\n    out[11] = 0;\n\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n\n    return out;\n};","module.exports = frustum;\n\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\nfunction frustum(out, left, right, bottom, top, near, far) {\n    var rl = 1 / (right - left),\n        tb = 1 / (top - bottom),\n        nf = 1 / (near - far);\n    out[0] = (near * 2) * rl;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = (near * 2) * tb;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = (right + left) * rl;\n    out[9] = (top + bottom) * tb;\n    out[10] = (far + near) * nf;\n    out[11] = -1;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = (far * near * 2) * nf;\n    out[15] = 0;\n    return out;\n};","module.exports = perspective;\n\n/**\n * Generates a perspective projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nfunction perspective(out, fovy, aspect, near, far) {\n    var f = 1.0 / Math.tan(fovy / 2),\n        nf = 1 / (near - far);\n    out[0] = f / aspect;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = f;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = (far + near) * nf;\n    out[11] = -1;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = (2 * far * near) * nf;\n    out[15] = 0;\n    return out;\n};","module.exports = perspectiveFromFieldOfView;\n\n/**\n * Generates a perspective projection matrix with the given field of view.\n * This is primarily useful for generating projection matrices to be used\n * with the still experiemental WebVR API.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nfunction perspectiveFromFieldOfView(out, fov, near, far) {\n    var upTan = Math.tan(fov.upDegrees * Math.PI/180.0),\n        downTan = Math.tan(fov.downDegrees * Math.PI/180.0),\n        leftTan = Math.tan(fov.leftDegrees * Math.PI/180.0),\n        rightTan = Math.tan(fov.rightDegrees * Math.PI/180.0),\n        xScale = 2.0 / (leftTan + rightTan),\n        yScale = 2.0 / (upTan + downTan);\n\n    out[0] = xScale;\n    out[1] = 0.0;\n    out[2] = 0.0;\n    out[3] = 0.0;\n    out[4] = 0.0;\n    out[5] = yScale;\n    out[6] = 0.0;\n    out[7] = 0.0;\n    out[8] = -((leftTan - rightTan) * xScale * 0.5);\n    out[9] = ((upTan - downTan) * yScale * 0.5);\n    out[10] = far / (near - far);\n    out[11] = -1.0;\n    out[12] = 0.0;\n    out[13] = 0.0;\n    out[14] = (far * near) / (near - far);\n    out[15] = 0.0;\n    return out;\n}\n\n","module.exports = ortho;\n\n/**\n * Generates a orthogonal projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nfunction ortho(out, left, right, bottom, top, near, far) {\n    var lr = 1 / (left - right),\n        bt = 1 / (bottom - top),\n        nf = 1 / (near - far);\n    out[0] = -2 * lr;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = -2 * bt;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 2 * nf;\n    out[11] = 0;\n    out[12] = (left + right) * lr;\n    out[13] = (top + bottom) * bt;\n    out[14] = (far + near) * nf;\n    out[15] = 1;\n    return out;\n};","var identity = require('./identity');\n\nmodule.exports = lookAt;\n\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {vec3} eye Position of the viewer\n * @param {vec3} center Point the viewer is looking at\n * @param {vec3} up vec3 pointing up\n * @returns {mat4} out\n */\nfunction lookAt(out, eye, center, up) {\n    var x0, x1, x2, y0, y1, y2, z0, z1, z2, len,\n        eyex = eye[0],\n        eyey = eye[1],\n        eyez = eye[2],\n        upx = up[0],\n        upy = up[1],\n        upz = up[2],\n        centerx = center[0],\n        centery = center[1],\n        centerz = center[2];\n\n    if (Math.abs(eyex - centerx) < 0.000001 &&\n        Math.abs(eyey - centery) < 0.000001 &&\n        Math.abs(eyez - centerz) < 0.000001) {\n        return identity(out);\n    }\n\n    z0 = eyex - centerx;\n    z1 = eyey - centery;\n    z2 = eyez - centerz;\n\n    len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n\n    x0 = upy * z2 - upz * z1;\n    x1 = upz * z0 - upx * z2;\n    x2 = upx * z1 - upy * z0;\n    len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\n    if (!len) {\n        x0 = 0;\n        x1 = 0;\n        x2 = 0;\n    } else {\n        len = 1 / len;\n        x0 *= len;\n        x1 *= len;\n        x2 *= len;\n    }\n\n    y0 = z1 * x2 - z2 * x1;\n    y1 = z2 * x0 - z0 * x2;\n    y2 = z0 * x1 - z1 * x0;\n\n    len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\n    if (!len) {\n        y0 = 0;\n        y1 = 0;\n        y2 = 0;\n    } else {\n        len = 1 / len;\n        y0 *= len;\n        y1 *= len;\n        y2 *= len;\n    }\n\n    out[0] = x0;\n    out[1] = y0;\n    out[2] = z0;\n    out[3] = 0;\n    out[4] = x1;\n    out[5] = y1;\n    out[6] = z1;\n    out[7] = 0;\n    out[8] = x2;\n    out[9] = y2;\n    out[10] = z2;\n    out[11] = 0;\n    out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n    out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n    out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n    out[15] = 1;\n\n    return out;\n};","module.exports = str;\n\n/**\n * Returns a string representation of a mat4\n *\n * @param {mat4} mat matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nfunction str(a) {\n    return 'mat4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' +\n                    a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' +\n                    a[8] + ', ' + a[9] + ', ' + a[10] + ', ' + a[11] + ', ' + \n                    a[12] + ', ' + a[13] + ', ' + a[14] + ', ' + a[15] + ')';\n};","module.exports = {\n  create: require('./create')\n  , clone: require('./clone')\n  , copy: require('./copy')\n  , identity: require('./identity')\n  , transpose: require('./transpose')\n  , invert: require('./invert')\n  , adjoint: require('./adjoint')\n  , determinant: require('./determinant')\n  , multiply: require('./multiply')\n  , translate: require('./translate')\n  , scale: require('./scale')\n  , rotate: require('./rotate')\n  , rotateX: require('./rotateX')\n  , rotateY: require('./rotateY')\n  , rotateZ: require('./rotateZ')\n  , fromRotation: require('./fromRotation')\n  , fromRotationTranslation: require('./fromRotationTranslation')\n  , fromScaling: require('./fromScaling')\n  , fromTranslation: require('./fromTranslation')\n  , fromXRotation: require('./fromXRotation')\n  , fromYRotation: require('./fromYRotation')\n  , fromZRotation: require('./fromZRotation')\n  , fromQuat: require('./fromQuat')\n  , frustum: require('./frustum')\n  , perspective: require('./perspective')\n  , perspectiveFromFieldOfView: require('./perspectiveFromFieldOfView')\n  , ortho: require('./ortho')\n  , lookAt: require('./lookAt')\n  , str: require('./str')\n}\n","module.exports = 0.000001\n","module.exports = create;\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\nfunction create() {\n    var out = new Float32Array(3)\n    out[0] = 0\n    out[1] = 0\n    out[2] = 0\n    return out\n}","module.exports = clone;\n\n/**\n * Creates a new vec3 initialized with values from an existing vector\n *\n * @param {vec3} a vector to clone\n * @returns {vec3} a new 3D vector\n */\nfunction clone(a) {\n    var out = new Float32Array(3)\n    out[0] = a[0]\n    out[1] = a[1]\n    out[2] = a[2]\n    return out\n}","module.exports = fromValues;\n\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\nfunction fromValues(x, y, z) {\n    var out = new Float32Array(3)\n    out[0] = x\n    out[1] = y\n    out[2] = z\n    return out\n}","module.exports = normalize;\n\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to normalize\n * @returns {vec3} out\n */\nfunction normalize(out, a) {\n    var x = a[0],\n        y = a[1],\n        z = a[2]\n    var len = x*x + y*y + z*z\n    if (len > 0) {\n        //TODO: evaluate use of glm_invsqrt here?\n        len = 1 / Math.sqrt(len)\n        out[0] = a[0] * len\n        out[1] = a[1] * len\n        out[2] = a[2] * len\n    }\n    return out\n}","module.exports = dot;\n\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} dot product of a and b\n */\nfunction dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2]\n}","module.exports = angle\n\nvar fromValues = require('./fromValues')\nvar normalize = require('./normalize')\nvar dot = require('./dot')\n\n/**\n * Get the angle between two 3D vectors\n * @param {vec3} a The first operand\n * @param {vec3} b The second operand\n * @returns {Number} The angle in radians\n */\nfunction angle(a, b) {\n    var tempA = fromValues(a[0], a[1], a[2])\n    var tempB = fromValues(b[0], b[1], b[2])\n \n    normalize(tempA, tempA)\n    normalize(tempB, tempB)\n \n    var cosine = dot(tempA, tempB)\n\n    if(cosine > 1.0){\n        return 0\n    } else {\n        return Math.acos(cosine)\n    }     \n}\n","module.exports = copy;\n\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the source vector\n * @returns {vec3} out\n */\nfunction copy(out, a) {\n    out[0] = a[0]\n    out[1] = a[1]\n    out[2] = a[2]\n    return out\n}","module.exports = set;\n\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\nfunction set(out, x, y, z) {\n    out[0] = x\n    out[1] = y\n    out[2] = z\n    return out\n}","module.exports = equals\n\nvar EPSILON = require('./epsilon')\n\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {vec3} a The first vector.\n * @param {vec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nfunction equals(a, b) {\n  var a0 = a[0]\n  var a1 = a[1]\n  var a2 = a[2]\n  var b0 = b[0]\n  var b1 = b[1]\n  var b2 = b[2]\n  return (Math.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n          Math.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n          Math.abs(a2 - b2) <= EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)))\n}\n","module.exports = exactEquals\n\n/**\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\n *\n * @param {vec3} a The first vector.\n * @param {vec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2]\n}\n","module.exports = add;\n\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nfunction add(out, a, b) {\n    out[0] = a[0] + b[0]\n    out[1] = a[1] + b[1]\n    out[2] = a[2] + b[2]\n    return out\n}","module.exports = subtract;\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nfunction subtract(out, a, b) {\n    out[0] = a[0] - b[0]\n    out[1] = a[1] - b[1]\n    out[2] = a[2] - b[2]\n    return out\n}","module.exports = require('./subtract')\n","module.exports = multiply;\n\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nfunction multiply(out, a, b) {\n    out[0] = a[0] * b[0]\n    out[1] = a[1] * b[1]\n    out[2] = a[2] * b[2]\n    return out\n}","module.exports = require('./multiply')\n","module.exports = divide;\n\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nfunction divide(out, a, b) {\n    out[0] = a[0] / b[0]\n    out[1] = a[1] / b[1]\n    out[2] = a[2] / b[2]\n    return out\n}","module.exports = require('./divide')\n","module.exports = min;\n\n/**\n * Returns the minimum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nfunction min(out, a, b) {\n    out[0] = Math.min(a[0], b[0])\n    out[1] = Math.min(a[1], b[1])\n    out[2] = Math.min(a[2], b[2])\n    return out\n}","module.exports = max;\n\n/**\n * Returns the maximum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nfunction max(out, a, b) {\n    out[0] = Math.max(a[0], b[0])\n    out[1] = Math.max(a[1], b[1])\n    out[2] = Math.max(a[2], b[2])\n    return out\n}","module.exports = floor\n\n/**\n * Math.floor the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to floor\n * @returns {vec3} out\n */\nfunction floor(out, a) {\n  out[0] = Math.floor(a[0])\n  out[1] = Math.floor(a[1])\n  out[2] = Math.floor(a[2])\n  return out\n}\n","module.exports = ceil\n\n/**\n * Math.ceil the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to ceil\n * @returns {vec3} out\n */\nfunction ceil(out, a) {\n  out[0] = Math.ceil(a[0])\n  out[1] = Math.ceil(a[1])\n  out[2] = Math.ceil(a[2])\n  return out\n}\n","module.exports = round\n\n/**\n * Math.round the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to round\n * @returns {vec3} out\n */\nfunction round(out, a) {\n  out[0] = Math.round(a[0])\n  out[1] = Math.round(a[1])\n  out[2] = Math.round(a[2])\n  return out\n}\n","module.exports = scale;\n\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\nfunction scale(out, a, b) {\n    out[0] = a[0] * b\n    out[1] = a[1] * b\n    out[2] = a[2] * b\n    return out\n}","module.exports = scaleAndAdd;\n\n/**\n * Adds two vec3's after scaling the second operand by a scalar value\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec3} out\n */\nfunction scaleAndAdd(out, a, b, scale) {\n    out[0] = a[0] + (b[0] * scale)\n    out[1] = a[1] + (b[1] * scale)\n    out[2] = a[2] + (b[2] * scale)\n    return out\n}","module.exports = distance;\n\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} distance between a and b\n */\nfunction distance(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1],\n        z = b[2] - a[2]\n    return Math.sqrt(x*x + y*y + z*z)\n}","module.exports = require('./distance')\n","module.exports = squaredDistance;\n\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\nfunction squaredDistance(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1],\n        z = b[2] - a[2]\n    return x*x + y*y + z*z\n}","module.exports = require('./squaredDistance')\n","module.exports = length;\n\n/**\n * Calculates the length of a vec3\n *\n * @param {vec3} a vector to calculate length of\n * @returns {Number} length of a\n */\nfunction length(a) {\n    var x = a[0],\n        y = a[1],\n        z = a[2]\n    return Math.sqrt(x*x + y*y + z*z)\n}","module.exports = require('./length')\n","module.exports = squaredLength;\n\n/**\n * Calculates the squared length of a vec3\n *\n * @param {vec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nfunction squaredLength(a) {\n    var x = a[0],\n        y = a[1],\n        z = a[2]\n    return x*x + y*y + z*z\n}","module.exports = require('./squaredLength')\n","module.exports = negate;\n\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to negate\n * @returns {vec3} out\n */\nfunction negate(out, a) {\n    out[0] = -a[0]\n    out[1] = -a[1]\n    out[2] = -a[2]\n    return out\n}","module.exports = inverse;\n\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to invert\n * @returns {vec3} out\n */\nfunction inverse(out, a) {\n  out[0] = 1.0 / a[0]\n  out[1] = 1.0 / a[1]\n  out[2] = 1.0 / a[2]\n  return out\n}","module.exports = cross;\n\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nfunction cross(out, a, b) {\n    var ax = a[0], ay = a[1], az = a[2],\n        bx = b[0], by = b[1], bz = b[2]\n\n    out[0] = ay * bz - az * by\n    out[1] = az * bx - ax * bz\n    out[2] = ax * by - ay * bx\n    return out\n}","module.exports = lerp;\n\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec3} out\n */\nfunction lerp(out, a, b, t) {\n    var ax = a[0],\n        ay = a[1],\n        az = a[2]\n    out[0] = ax + t * (b[0] - ax)\n    out[1] = ay + t * (b[1] - ay)\n    out[2] = az + t * (b[2] - az)\n    return out\n}","module.exports = random;\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec3} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec3} out\n */\nfunction random(out, scale) {\n    scale = scale || 1.0\n\n    var r = Math.random() * 2.0 * Math.PI\n    var z = (Math.random() * 2.0) - 1.0\n    var zScale = Math.sqrt(1.0-z*z) * scale\n\n    out[0] = Math.cos(r) * zScale\n    out[1] = Math.sin(r) * zScale\n    out[2] = z * scale\n    return out\n}","module.exports = transformMat4;\n\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec3} out\n */\nfunction transformMat4(out, a, m) {\n    var x = a[0], y = a[1], z = a[2],\n        w = m[3] * x + m[7] * y + m[11] * z + m[15]\n    w = w || 1.0\n    out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w\n    out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w\n    out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w\n    return out\n}","module.exports = transformMat3;\n\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat4} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\nfunction transformMat3(out, a, m) {\n    var x = a[0], y = a[1], z = a[2]\n    out[0] = x * m[0] + y * m[3] + z * m[6]\n    out[1] = x * m[1] + y * m[4] + z * m[7]\n    out[2] = x * m[2] + y * m[5] + z * m[8]\n    return out\n}","module.exports = transformQuat;\n\n/**\n * Transforms the vec3 with a quat\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {quat} q quaternion to transform with\n * @returns {vec3} out\n */\nfunction transformQuat(out, a, q) {\n    // benchmarks: http://jsperf.com/quaternion-transform-vec3-implementations\n\n    var x = a[0], y = a[1], z = a[2],\n        qx = q[0], qy = q[1], qz = q[2], qw = q[3],\n\n        // calculate quat * vec\n        ix = qw * x + qy * z - qz * y,\n        iy = qw * y + qz * x - qx * z,\n        iz = qw * z + qx * y - qy * x,\n        iw = -qx * x - qy * y - qz * z\n\n    // calculate result * inverse quat\n    out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy\n    out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz\n    out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx\n    return out\n}","module.exports = rotateX;\n\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nfunction rotateX(out, a, b, c){\n    var by = b[1]\n    var bz = b[2]\n\n    // Translate point to the origin\n    var py = a[1] - by\n    var pz = a[2] - bz\n\n    var sc = Math.sin(c)\n    var cc = Math.cos(c)\n\n    // perform rotation and translate to correct position\n    out[0] = a[0]\n    out[1] = by + py * cc - pz * sc\n    out[2] = bz + py * sc + pz * cc\n\n    return out\n}\n","module.exports = rotateY;\n\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nfunction rotateY(out, a, b, c){\n    var bx = b[0]\n    var bz = b[2]\n\n    // translate point to the origin\n    var px = a[0] - bx\n    var pz = a[2] - bz\n    \n    var sc = Math.sin(c)\n    var cc = Math.cos(c)\n  \n    // perform rotation and translate to correct position\n    out[0] = bx + pz * sc + px * cc\n    out[1] = a[1]\n    out[2] = bz + pz * cc - px * sc\n  \n    return out\n}\n","module.exports = rotateZ;\n\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nfunction rotateZ(out, a, b, c){\n    var bx = b[0]\n    var by = b[1]\n\n    //Translate point to the origin\n    var px = a[0] - bx\n    var py = a[1] - by\n  \n    var sc = Math.sin(c)\n    var cc = Math.cos(c)\n\n    // perform rotation and translate to correct position\n    out[0] = bx + px * cc - py * sc\n    out[1] = by + px * sc + py * cc\n    out[2] = a[2]\n  \n    return out\n}\n","module.exports = forEach;\n\nvar vec = require('./create')()\n\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nfunction forEach(a, stride, offset, count, fn, arg) {\n        var i, l\n        if(!stride) {\n            stride = 3\n        }\n\n        if(!offset) {\n            offset = 0\n        }\n        \n        if(count) {\n            l = Math.min((count * stride) + offset, a.length)\n        } else {\n            l = a.length\n        }\n\n        for(i = offset; i < l; i += stride) {\n            vec[0] = a[i] \n            vec[1] = a[i+1] \n            vec[2] = a[i+2]\n            fn(vec, vec, arg)\n            a[i] = vec[0] \n            a[i+1] = vec[1] \n            a[i+2] = vec[2]\n        }\n        \n        return a\n}","module.exports = {\n  EPSILON: require('./epsilon')\n  , create: require('./create')\n  , clone: require('./clone')\n  , angle: require('./angle')\n  , fromValues: require('./fromValues')\n  , copy: require('./copy')\n  , set: require('./set')\n  , equals: require('./equals')\n  , exactEquals: require('./exactEquals')\n  , add: require('./add')\n  , subtract: require('./subtract')\n  , sub: require('./sub')\n  , multiply: require('./multiply')\n  , mul: require('./mul')\n  , divide: require('./divide')\n  , div: require('./div')\n  , min: require('./min')\n  , max: require('./max')\n  , floor: require('./floor')\n  , ceil: require('./ceil')\n  , round: require('./round')\n  , scale: require('./scale')\n  , scaleAndAdd: require('./scaleAndAdd')\n  , distance: require('./distance')\n  , dist: require('./dist')\n  , squaredDistance: require('./squaredDistance')\n  , sqrDist: require('./sqrDist')\n  , length: require('./length')\n  , len: require('./len')\n  , squaredLength: require('./squaredLength')\n  , sqrLen: require('./sqrLen')\n  , negate: require('./negate')\n  , inverse: require('./inverse')\n  , normalize: require('./normalize')\n  , dot: require('./dot')\n  , cross: require('./cross')\n  , lerp: require('./lerp')\n  , random: require('./random')\n  , transformMat4: require('./transformMat4')\n  , transformMat3: require('./transformMat3')\n  , transformQuat: require('./transformQuat')\n  , rotateX: require('./rotateX')\n  , rotateY: require('./rotateY')\n  , rotateZ: require('./rotateZ')\n  , forEach: require('./forEach')\n}\n","import { Vec3 } from '@tstackgl/types'\nimport vec3 from 'gl-vec3'\n\nexport function getCentroid<T extends Array<number> | Float32Array>(points: Array<T>): T {\n  // TODO: refactor with transducers\n  const l = points.length\n\n  if (l === 0) {\n    return [] as T\n  }\n\n  return points.reduce(\n    function(center, p, i) {\n      for (let j = 0; j < p.length; j++) {\n        center[j] += p[j]\n      }\n\n      if (i === l - 1) {\n        for (let j = 0; j < p.length; j++) {\n          center[j] /= l\n        }\n      }\n\n      return center\n    },\n    new Float32Array(points[0].length) as T,\n  )\n}\n\nexport function getCentroidFromCells(cells: Array<Vec3>, positions: Array<Vec3>): Array<Vec3> {\n  return cells.map(face => getCentroid(face.map(index => positions[index])))\n}\n\nexport function getCentroidTriangle3(triangle: [Vec3, Vec3, Vec3]) {\n  const result: Vec3 = vec3.create()\n\n  result[0] = (triangle[0][0] + triangle[1][0] + triangle[2][0]) / 3\n  result[1] = (triangle[0][1] + triangle[1][1] + triangle[2][1]) / 3\n  result[2] = (triangle[0][2] + triangle[1][2] + triangle[2][2]) / 3\n\n  return result\n}\n","'use strict';\n\nmodule.exports = earcut;\nmodule.exports.default = earcut;\n\nfunction earcut(data, holeIndices, dim) {\n\n    dim = dim || 2;\n\n    var hasHoles = holeIndices && holeIndices.length,\n        outerLen = hasHoles ? holeIndices[0] * dim : data.length,\n        outerNode = linkedList(data, 0, outerLen, dim, true),\n        triangles = [];\n\n    if (!outerNode || outerNode.next === outerNode.prev) return triangles;\n\n    var minX, minY, maxX, maxY, x, y, invSize;\n\n    if (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim);\n\n    // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n    if (data.length > 80 * dim) {\n        minX = maxX = data[0];\n        minY = maxY = data[1];\n\n        for (var i = dim; i < outerLen; i += dim) {\n            x = data[i];\n            y = data[i + 1];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n        }\n\n        // minX, minY and invSize are later used to transform coords into integers for z-order calculation\n        invSize = Math.max(maxX - minX, maxY - minY);\n        invSize = invSize !== 0 ? 1 / invSize : 0;\n    }\n\n    earcutLinked(outerNode, triangles, dim, minX, minY, invSize);\n\n    return triangles;\n}\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList(data, start, end, dim, clockwise) {\n    var i, last;\n\n    if (clockwise === (signedArea(data, start, end, dim) > 0)) {\n        for (i = start; i < end; i += dim) last = insertNode(i, data[i], data[i + 1], last);\n    } else {\n        for (i = end - dim; i >= start; i -= dim) last = insertNode(i, data[i], data[i + 1], last);\n    }\n\n    if (last && equals(last, last.next)) {\n        removeNode(last);\n        last = last.next;\n    }\n\n    return last;\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints(start, end) {\n    if (!start) return start;\n    if (!end) end = start;\n\n    var p = start,\n        again;\n    do {\n        again = false;\n\n        if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n            removeNode(p);\n            p = end = p.prev;\n            if (p === p.next) break;\n            again = true;\n\n        } else {\n            p = p.next;\n        }\n    } while (again || p !== end);\n\n    return end;\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\n    if (!ear) return;\n\n    // interlink polygon nodes in z-order\n    if (!pass && invSize) indexCurve(ear, minX, minY, invSize);\n\n    var stop = ear,\n        prev, next;\n\n    // iterate through ears, slicing them one by one\n    while (ear.prev !== ear.next) {\n        prev = ear.prev;\n        next = ear.next;\n\n        if (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\n            // cut off the triangle\n            triangles.push(prev.i / dim);\n            triangles.push(ear.i / dim);\n            triangles.push(next.i / dim);\n\n            removeNode(ear);\n\n            // skipping the next vertex leads to less sliver triangles\n            ear = next.next;\n            stop = next.next;\n\n            continue;\n        }\n\n        ear = next;\n\n        // if we looped through the whole remaining polygon and can't find any more ears\n        if (ear === stop) {\n            // try filtering points and slicing again\n            if (!pass) {\n                earcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1);\n\n            // if this didn't work, try curing all small self-intersections locally\n            } else if (pass === 1) {\n                ear = cureLocalIntersections(ear, triangles, dim);\n                earcutLinked(ear, triangles, dim, minX, minY, invSize, 2);\n\n            // as a last resort, try splitting the remaining polygon into two\n            } else if (pass === 2) {\n                splitEarcut(ear, triangles, dim, minX, minY, invSize);\n            }\n\n            break;\n        }\n    }\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar(ear) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // now make sure we don't have other points inside the potential ear\n    var p = ear.next.next;\n\n    while (p !== ear.prev) {\n        if (pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.next;\n    }\n\n    return true;\n}\n\nfunction isEarHashed(ear, minX, minY, invSize) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // triangle bbox; min & max are calculated like this for speed\n    var minTX = a.x < b.x ? (a.x < c.x ? a.x : c.x) : (b.x < c.x ? b.x : c.x),\n        minTY = a.y < b.y ? (a.y < c.y ? a.y : c.y) : (b.y < c.y ? b.y : c.y),\n        maxTX = a.x > b.x ? (a.x > c.x ? a.x : c.x) : (b.x > c.x ? b.x : c.x),\n        maxTY = a.y > b.y ? (a.y > c.y ? a.y : c.y) : (b.y > c.y ? b.y : c.y);\n\n    // z-order range for the current triangle bbox;\n    var minZ = zOrder(minTX, minTY, minX, minY, invSize),\n        maxZ = zOrder(maxTX, maxTY, minX, minY, invSize);\n\n    var p = ear.prevZ,\n        n = ear.nextZ;\n\n    // look for points inside the triangle in both directions\n    while (p && p.z >= minZ && n && n.z <= maxZ) {\n        if (p !== ear.prev && p !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n\n        if (n !== ear.prev && n !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) &&\n            area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    // look for remaining points in decreasing z-order\n    while (p && p.z >= minZ) {\n        if (p !== ear.prev && p !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n    }\n\n    // look for remaining points in increasing z-order\n    while (n && n.z <= maxZ) {\n        if (n !== ear.prev && n !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) &&\n            area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    return true;\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections(start, triangles, dim) {\n    var p = start;\n    do {\n        var a = p.prev,\n            b = p.next.next;\n\n        if (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\n\n            triangles.push(a.i / dim);\n            triangles.push(p.i / dim);\n            triangles.push(b.i / dim);\n\n            // remove two nodes involved\n            removeNode(p);\n            removeNode(p.next);\n\n            p = start = b;\n        }\n        p = p.next;\n    } while (p !== start);\n\n    return p;\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut(start, triangles, dim, minX, minY, invSize) {\n    // look for a valid diagonal that divides the polygon into two\n    var a = start;\n    do {\n        var b = a.next.next;\n        while (b !== a.prev) {\n            if (a.i !== b.i && isValidDiagonal(a, b)) {\n                // split the polygon in two by the diagonal\n                var c = splitPolygon(a, b);\n\n                // filter colinear points around the cuts\n                a = filterPoints(a, a.next);\n                c = filterPoints(c, c.next);\n\n                // run earcut on each half\n                earcutLinked(a, triangles, dim, minX, minY, invSize);\n                earcutLinked(c, triangles, dim, minX, minY, invSize);\n                return;\n            }\n            b = b.next;\n        }\n        a = a.next;\n    } while (a !== start);\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles(data, holeIndices, outerNode, dim) {\n    var queue = [],\n        i, len, start, end, list;\n\n    for (i = 0, len = holeIndices.length; i < len; i++) {\n        start = holeIndices[i] * dim;\n        end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n        list = linkedList(data, start, end, dim, false);\n        if (list === list.next) list.steiner = true;\n        queue.push(getLeftmost(list));\n    }\n\n    queue.sort(compareX);\n\n    // process holes from left to right\n    for (i = 0; i < queue.length; i++) {\n        eliminateHole(queue[i], outerNode);\n        outerNode = filterPoints(outerNode, outerNode.next);\n    }\n\n    return outerNode;\n}\n\nfunction compareX(a, b) {\n    return a.x - b.x;\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole(hole, outerNode) {\n    outerNode = findHoleBridge(hole, outerNode);\n    if (outerNode) {\n        var b = splitPolygon(outerNode, hole);\n        filterPoints(b, b.next);\n    }\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge(hole, outerNode) {\n    var p = outerNode,\n        hx = hole.x,\n        hy = hole.y,\n        qx = -Infinity,\n        m;\n\n    // find a segment intersected by a ray from the hole's leftmost point to the left;\n    // segment's endpoint with lesser x will be potential connection point\n    do {\n        if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n            var x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\n            if (x <= hx && x > qx) {\n                qx = x;\n                if (x === hx) {\n                    if (hy === p.y) return p;\n                    if (hy === p.next.y) return p.next;\n                }\n                m = p.x < p.next.x ? p : p.next;\n            }\n        }\n        p = p.next;\n    } while (p !== outerNode);\n\n    if (!m) return null;\n\n    if (hx === qx) return m.prev; // hole touches outer segment; pick lower endpoint\n\n    // look for points inside the triangle of hole point, segment intersection and endpoint;\n    // if there are no points found, we have a valid connection;\n    // otherwise choose the point of the minimum angle with the ray as connection point\n\n    var stop = m,\n        mx = m.x,\n        my = m.y,\n        tanMin = Infinity,\n        tan;\n\n    p = m.next;\n\n    while (p !== stop) {\n        if (hx >= p.x && p.x >= mx && hx !== p.x &&\n                pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n\n            tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n\n            if ((tan < tanMin || (tan === tanMin && p.x > m.x)) && locallyInside(p, hole)) {\n                m = p;\n                tanMin = tan;\n            }\n        }\n\n        p = p.next;\n    }\n\n    return m;\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve(start, minX, minY, invSize) {\n    var p = start;\n    do {\n        if (p.z === null) p.z = zOrder(p.x, p.y, minX, minY, invSize);\n        p.prevZ = p.prev;\n        p.nextZ = p.next;\n        p = p.next;\n    } while (p !== start);\n\n    p.prevZ.nextZ = null;\n    p.prevZ = null;\n\n    sortLinked(p);\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked(list) {\n    var i, p, q, e, tail, numMerges, pSize, qSize,\n        inSize = 1;\n\n    do {\n        p = list;\n        list = null;\n        tail = null;\n        numMerges = 0;\n\n        while (p) {\n            numMerges++;\n            q = p;\n            pSize = 0;\n            for (i = 0; i < inSize; i++) {\n                pSize++;\n                q = q.nextZ;\n                if (!q) break;\n            }\n            qSize = inSize;\n\n            while (pSize > 0 || (qSize > 0 && q)) {\n\n                if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\n                    e = p;\n                    p = p.nextZ;\n                    pSize--;\n                } else {\n                    e = q;\n                    q = q.nextZ;\n                    qSize--;\n                }\n\n                if (tail) tail.nextZ = e;\n                else list = e;\n\n                e.prevZ = tail;\n                tail = e;\n            }\n\n            p = q;\n        }\n\n        tail.nextZ = null;\n        inSize *= 2;\n\n    } while (numMerges > 1);\n\n    return list;\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder(x, y, minX, minY, invSize) {\n    // coords are transformed into non-negative 15-bit integer range\n    x = 32767 * (x - minX) * invSize;\n    y = 32767 * (y - minY) * invSize;\n\n    x = (x | (x << 8)) & 0x00FF00FF;\n    x = (x | (x << 4)) & 0x0F0F0F0F;\n    x = (x | (x << 2)) & 0x33333333;\n    x = (x | (x << 1)) & 0x55555555;\n\n    y = (y | (y << 8)) & 0x00FF00FF;\n    y = (y | (y << 4)) & 0x0F0F0F0F;\n    y = (y | (y << 2)) & 0x33333333;\n    y = (y | (y << 1)) & 0x55555555;\n\n    return x | (y << 1);\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost(start) {\n    var p = start,\n        leftmost = start;\n    do {\n        if (p.x < leftmost.x) leftmost = p;\n        p = p.next;\n    } while (p !== start);\n\n    return leftmost;\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n    return (cx - px) * (ay - py) - (ax - px) * (cy - py) >= 0 &&\n           (ax - px) * (by - py) - (bx - px) * (ay - py) >= 0 &&\n           (bx - px) * (cy - py) - (cx - px) * (by - py) >= 0;\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal(a, b) {\n    return a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) &&\n           locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b);\n}\n\n// signed area of a triangle\nfunction area(p, q, r) {\n    return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n}\n\n// check if two points are equal\nfunction equals(p1, p2) {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n// check if two segments intersect\nfunction intersects(p1, q1, p2, q2) {\n    if ((equals(p1, q1) && equals(p2, q2)) ||\n        (equals(p1, q2) && equals(p2, q1))) return true;\n    return area(p1, q1, p2) > 0 !== area(p1, q1, q2) > 0 &&\n           area(p2, q2, p1) > 0 !== area(p2, q2, q1) > 0;\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon(a, b) {\n    var p = a;\n    do {\n        if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n                intersects(p, p.next, a, b)) return true;\n        p = p.next;\n    } while (p !== a);\n\n    return false;\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside(a, b) {\n    return area(a.prev, a, a.next) < 0 ?\n        area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 :\n        area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside(a, b) {\n    var p = a,\n        inside = false,\n        px = (a.x + b.x) / 2,\n        py = (a.y + b.y) / 2;\n    do {\n        if (((p.y > py) !== (p.next.y > py)) && p.next.y !== p.y &&\n                (px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x))\n            inside = !inside;\n        p = p.next;\n    } while (p !== a);\n\n    return inside;\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon(a, b) {\n    var a2 = new Node(a.i, a.x, a.y),\n        b2 = new Node(b.i, b.x, b.y),\n        an = a.next,\n        bp = b.prev;\n\n    a.next = b;\n    b.prev = a;\n\n    a2.next = an;\n    an.prev = a2;\n\n    b2.next = a2;\n    a2.prev = b2;\n\n    bp.next = b2;\n    b2.prev = bp;\n\n    return b2;\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode(i, x, y, last) {\n    var p = new Node(i, x, y);\n\n    if (!last) {\n        p.prev = p;\n        p.next = p;\n\n    } else {\n        p.next = last.next;\n        p.prev = last;\n        last.next.prev = p;\n        last.next = p;\n    }\n    return p;\n}\n\nfunction removeNode(p) {\n    p.next.prev = p.prev;\n    p.prev.next = p.next;\n\n    if (p.prevZ) p.prevZ.nextZ = p.nextZ;\n    if (p.nextZ) p.nextZ.prevZ = p.prevZ;\n}\n\nfunction Node(i, x, y) {\n    // vertex index in coordinates array\n    this.i = i;\n\n    // vertex coordinates\n    this.x = x;\n    this.y = y;\n\n    // previous and next vertex nodes in a polygon ring\n    this.prev = null;\n    this.next = null;\n\n    // z-order curve value\n    this.z = null;\n\n    // previous and next nodes in z-order\n    this.prevZ = null;\n    this.nextZ = null;\n\n    // indicates whether this is a steiner point\n    this.steiner = false;\n}\n\n// return a percentage difference between the polygon area and its triangulation area;\n// used to verify correctness of triangulation\nearcut.deviation = function (data, holeIndices, dim, triangles) {\n    var hasHoles = holeIndices && holeIndices.length;\n    var outerLen = hasHoles ? holeIndices[0] * dim : data.length;\n\n    var polygonArea = Math.abs(signedArea(data, 0, outerLen, dim));\n    if (hasHoles) {\n        for (var i = 0, len = holeIndices.length; i < len; i++) {\n            var start = holeIndices[i] * dim;\n            var end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n            polygonArea -= Math.abs(signedArea(data, start, end, dim));\n        }\n    }\n\n    var trianglesArea = 0;\n    for (i = 0; i < triangles.length; i += 3) {\n        var a = triangles[i] * dim;\n        var b = triangles[i + 1] * dim;\n        var c = triangles[i + 2] * dim;\n        trianglesArea += Math.abs(\n            (data[a] - data[c]) * (data[b + 1] - data[a + 1]) -\n            (data[a] - data[b]) * (data[c + 1] - data[a + 1]));\n    }\n\n    return polygonArea === 0 && trianglesArea === 0 ? 0 :\n        Math.abs((trianglesArea - polygonArea) / polygonArea);\n};\n\nfunction signedArea(data, start, end, dim) {\n    var sum = 0;\n    for (var i = start, j = end - dim; i < end; i += dim) {\n        sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\n        j = i;\n    }\n    return sum;\n}\n\n// turn a polygon in a multi-dimensional array form (e.g. as in GeoJSON) into a form Earcut accepts\nearcut.flatten = function (data) {\n    var dim = data[0][0].length,\n        result = {vertices: [], holes: [], dimensions: dim},\n        holeIndex = 0;\n\n    for (var i = 0; i < data.length; i++) {\n        for (var j = 0; j < data[i].length; j++) {\n            for (var d = 0; d < dim; d++) result.vertices.push(data[i][j][d]);\n        }\n        if (i > 0) {\n            holeIndex += data[i - 1].length;\n            result.holes.push(holeIndex);\n        }\n    }\n    return result;\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst illegal_arguments_1 = require(\"@thi.ng/errors/illegal-arguments\");\nfunction ensureIterable(x) {\n    if (!(x != null && x[Symbol.iterator])) {\n        illegal_arguments_1.illegalArgs(`value is not iterable: ${x}`);\n    }\n    return x;\n}\nexports.ensureIterable = ensureIterable;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst is_array_1 = require(\"@thi.ng/checks/is-array\");\nconst is_arraylike_1 = require(\"@thi.ng/checks/is-arraylike\");\nconst ensure_iterable_1 = require(\"./ensure-iterable\");\n/**\n * Helper function to avoid unnecessary copying if `x` is already an\n * array. First checks if `x` is an array and if so returns it. Else\n * attempts to obtain an iterator from `x` and if successful collects it\n * as array and returns it. Throws error if `x` isn't iterable.\n *\n * @param x\n */\nfunction ensureArray(x) {\n    return is_array_1.isArray(x) ? x : [...ensure_iterable_1.ensureIterable(x)];\n}\nexports.ensureArray = ensureArray;\nfunction ensureArrayLike(x) {\n    return is_arraylike_1.isArrayLike(x) ? x : [...ensure_iterable_1.ensureIterable(x)];\n}\nexports.ensureArrayLike = ensureArrayLike;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst illegal_arguments_1 = require(\"@thi.ng/errors/illegal-arguments\");\nconst ensure_array_1 = require(\"../func/ensure-array\");\n/**\n * Yields iterator of `src` with the last `n` values of `src` prepended\n * at the beginning (if `left` is truthy) and/or the first `n` values\n * appended at the end (if `right` is truthy). Wraps both sides by\n * default and throws error if `n` < 0 or larger than `src.length`.\n *\n * @param src\n * @param n\n * @param left\n * @param right\n */\nfunction* wrap(src, n = 1, left = true, right = true) {\n    const _src = ensure_array_1.ensureArray(src);\n    (n < 0 || n > _src.length) && illegal_arguments_1.illegalArgs(`wrong number of wrap items: got ${n}, but max: ${_src.length}`);\n    if (left) {\n        for (let m = _src.length, i = m - n; i < m; i++) {\n            yield _src[i];\n        }\n    }\n    yield* _src;\n    if (right) {\n        for (let i = 0; i < n; i++) {\n            yield _src[i];\n        }\n    }\n}\nexports.wrap = wrap;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass Reduced {\n    constructor(val) {\n        this.value = val;\n    }\n    deref() {\n        return this.value;\n    }\n}\nexports.Reduced = Reduced;\nfunction reduced(x) {\n    return new Reduced(x);\n}\nexports.reduced = reduced;\nfunction isReduced(x) {\n    return x instanceof Reduced;\n}\nexports.isReduced = isReduced;\nfunction ensureReduced(x) {\n    return x instanceof Reduced ? x : new Reduced(x);\n}\nexports.ensureReduced = ensureReduced;\nfunction unreduced(x) {\n    return x instanceof Reduced ? x.deref() : x;\n}\nexports.unreduced = unreduced;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass IllegalArityError extends Error {\n    constructor(n) {\n        super(`illegal arity: ${n}`);\n    }\n}\nexports.IllegalArityError = IllegalArityError;\nfunction illegalArity(n) {\n    throw new IllegalArityError(n);\n}\nexports.illegalArity = illegalArity;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst implements_function_1 = require(\"@thi.ng/checks/implements-function\");\nconst is_arraylike_1 = require(\"@thi.ng/checks/is-arraylike\");\nconst is_iterable_1 = require(\"@thi.ng/checks/is-iterable\");\nconst illegal_arity_1 = require(\"@thi.ng/errors/illegal-arity\");\nconst reduced_1 = require(\"./reduced\");\nfunction reduce(...args) {\n    let acc, xs;\n    switch (args.length) {\n        case 3:\n            xs = args[2];\n            acc = args[1];\n            break;\n        case 2:\n            xs = args[1];\n            break;\n        default:\n            illegal_arity_1.illegalArity(args.length);\n    }\n    const rfn = args[0];\n    const init = rfn[0];\n    const complete = rfn[1];\n    const reduce = rfn[2];\n    acc = acc == null ? init() : acc;\n    if (implements_function_1.implementsFunction(xs, \"$reduce\")) {\n        acc = xs.$reduce(reduce, acc);\n    }\n    else if (is_arraylike_1.isArrayLike(xs)) {\n        for (let i = 0, n = xs.length; i < n; i++) {\n            acc = reduce(acc, xs[i]);\n            if (reduced_1.isReduced(acc)) {\n                acc = acc.deref();\n                break;\n            }\n        }\n    }\n    else {\n        for (let x of xs) {\n            acc = reduce(acc, x);\n            if (reduced_1.isReduced(acc)) {\n                acc = acc.deref();\n                break;\n            }\n        }\n    }\n    return reduced_1.unreduced(complete(acc));\n}\nexports.reduce = reduce;\n/**\n * Convenience helper for building a full `Reducer` using the identity\n * function (i.e. `(x) => x`) as completion step (true for 90% of all\n * bundled transducers).\n *\n * @param init init step of reducer\n * @param rfn reduction step of reducer\n */\nfunction reducer(init, rfn) {\n    return [init, (acc) => acc, rfn];\n}\nexports.reducer = reducer;\nexports.$$reduce = (rfn, args) => {\n    const n = args.length - 1;\n    return is_iterable_1.isIterable(args[n]) ?\n        args.length > 1 ?\n            reduce(rfn.apply(null, args.slice(0, n)), args[n]) :\n            reduce(rfn(), args[0]) :\n        undefined;\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst reduce_1 = require(\"../reduce\");\nfunction push(xs) {\n    return xs ?\n        [...xs] :\n        reduce_1.reducer(() => [], (acc, x) => (acc.push(x), acc));\n}\nexports.push = push;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst api_1 = require(\"@thi.ng/api/api\");\nconst is_iterable_1 = require(\"@thi.ng/checks/is-iterable\");\nconst reduced_1 = require(\"./reduced\");\nconst push_1 = require(\"./rfn/push\");\n/**\n * Takes a transducer and input iterable. Returns iterator of\n * transformed results.\n *\n * @param xform\n * @param xs\n */\nfunction* iterator(xform, xs) {\n    const rfn = xform(push_1.push());\n    const complete = rfn[1];\n    const reduce = rfn[2];\n    for (let x of xs) {\n        const y = reduce([], x);\n        if (reduced_1.isReduced(y)) {\n            yield* reduced_1.unreduced(complete(y.deref()));\n            return;\n        }\n        if (y.length) {\n            yield* y;\n        }\n    }\n    yield* reduced_1.unreduced(complete([]));\n}\nexports.iterator = iterator;\n/**\n * Optimized version of `iterator()` for transducers which are\n * guaranteed to:\n *\n * 1) Only produce none or a single result per input\n * 2) Do not require a `completion` reduction step\n *\n * @param xform\n * @param xs\n */\nfunction* iterator1(xform, xs) {\n    const reduce = xform([null, null, (_, x) => x])[2];\n    for (let x of xs) {\n        let y = reduce(api_1.SEMAPHORE, x);\n        if (reduced_1.isReduced(y)) {\n            y = reduced_1.unreduced(y.deref());\n            if (y !== api_1.SEMAPHORE) {\n                yield y;\n            }\n            return;\n        }\n        if (y !== api_1.SEMAPHORE) {\n            yield y;\n        }\n    }\n}\nexports.iterator1 = iterator1;\n/**\n * Helper function used by various transducers to wrap themselves as\n * transforming iterators. Delegates to `iterator1()` by default.\n *\n * @param xform\n * @param args\n * @param impl\n */\nexports.$iter = (xform, args, impl = iterator1) => {\n    const n = args.length - 1;\n    return is_iterable_1.isIterable(args[n]) ?\n        args.length > 1 ?\n            impl(xform.apply(null, args.slice(0, n)), args[n]) :\n            impl(xform(), args[0]) :\n        undefined;\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst iterator_1 = require(\"../iterator\");\nfunction partition(...args) {\n    const iter = iterator_1.$iter(partition, args, iterator_1.iterator);\n    if (iter) {\n        return iter;\n    }\n    let size = args[0], all, step;\n    if (typeof args[1] == \"number\") {\n        step = args[1];\n        all = args[2];\n    }\n    else {\n        step = size;\n        all = args[1];\n    }\n    return ([init, complete, reduce]) => {\n        let buf = [];\n        let skip = 0;\n        return [\n            init,\n            (acc) => {\n                if (all && buf.length > 0) {\n                    acc = reduce(acc, buf);\n                    buf = [];\n                }\n                return complete(acc);\n            },\n            (acc, x) => {\n                if (skip <= 0) {\n                    if (buf.length < size) {\n                        buf.push(x);\n                    }\n                    if (buf.length === size) {\n                        acc = reduce(acc, buf);\n                        buf = step < size ? buf.slice(step) : [];\n                        skip = step - size;\n                    }\n                }\n                else {\n                    skip--;\n                }\n                return acc;\n            }\n        ];\n    };\n}\nexports.partition = partition;\n","import { wrap } from '@thi.ng/transducers/iter/wrap'\nimport { partition } from '@thi.ng/transducers/xform/partition'\n\nexport function polygonToSegments<T>(array: Iterable<T>): IterableIterator<[T, T]> {\n  return partition(2, 1, wrap(array, 1, false, true)) as IterableIterator<[T, T]>\n}\n","module.exports = 0.000001\n","module.exports = create\n\n/**\n * Creates a new, empty vec2\n *\n * @returns {vec2} a new 2D vector\n */\nfunction create() {\n    var out = new Float32Array(2)\n    out[0] = 0\n    out[1] = 0\n    return out\n}","module.exports = clone\n\n/**\n * Creates a new vec2 initialized with values from an existing vector\n *\n * @param {vec2} a vector to clone\n * @returns {vec2} a new 2D vector\n */\nfunction clone(a) {\n    var out = new Float32Array(2)\n    out[0] = a[0]\n    out[1] = a[1]\n    return out\n}","module.exports = fromValues\n\n/**\n * Creates a new vec2 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} a new 2D vector\n */\nfunction fromValues(x, y) {\n    var out = new Float32Array(2)\n    out[0] = x\n    out[1] = y\n    return out\n}","module.exports = copy\n\n/**\n * Copy the values from one vec2 to another\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the source vector\n * @returns {vec2} out\n */\nfunction copy(out, a) {\n    out[0] = a[0]\n    out[1] = a[1]\n    return out\n}","module.exports = set\n\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\nfunction set(out, x, y) {\n    out[0] = x\n    out[1] = y\n    return out\n}","module.exports = equals\n\nvar EPSILON = require('./epsilon')\n\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {vec2} a The first vector.\n * @param {vec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nfunction equals(a, b) {\n  var a0 = a[0]\n  var a1 = a[1]\n  var b0 = b[0]\n  var b1 = b[1]\n  return (Math.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n          Math.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)))\n}\n","module.exports = exactEquals\n\n/**\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\n *\n * @param {vec2} a The first vector.\n * @param {vec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1]\n}\n","module.exports = add\n\n/**\n * Adds two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nfunction add(out, a, b) {\n    out[0] = a[0] + b[0]\n    out[1] = a[1] + b[1]\n    return out\n}","module.exports = subtract\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nfunction subtract(out, a, b) {\n    out[0] = a[0] - b[0]\n    out[1] = a[1] - b[1]\n    return out\n}","module.exports = require('./subtract')\n","module.exports = multiply\n\n/**\n * Multiplies two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nfunction multiply(out, a, b) {\n    out[0] = a[0] * b[0]\n    out[1] = a[1] * b[1]\n    return out\n}","module.exports = require('./multiply')\n","module.exports = divide\n\n/**\n * Divides two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nfunction divide(out, a, b) {\n    out[0] = a[0] / b[0]\n    out[1] = a[1] / b[1]\n    return out\n}","module.exports = require('./divide')\n","module.exports = inverse\n\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to invert\n * @returns {vec2} out\n */\nfunction inverse(out, a) {\n  out[0] = 1.0 / a[0]\n  out[1] = 1.0 / a[1]\n  return out\n}\n","module.exports = min\n\n/**\n * Returns the minimum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nfunction min(out, a, b) {\n    out[0] = Math.min(a[0], b[0])\n    out[1] = Math.min(a[1], b[1])\n    return out\n}","module.exports = max\n\n/**\n * Returns the maximum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nfunction max(out, a, b) {\n    out[0] = Math.max(a[0], b[0])\n    out[1] = Math.max(a[1], b[1])\n    return out\n}","module.exports = rotate\n\n/**\n * Rotates a vec2 by an angle\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to rotate\n * @param {Number} angle the angle of rotation (in radians)\n * @returns {vec2} out\n */\nfunction rotate(out, a, angle) {\n  var c = Math.cos(angle),\n      s = Math.sin(angle)\n  var x = a[0],\n      y = a[1]\n\n  out[0] = x * c - y * s\n  out[1] = x * s + y * c\n\n  return out\n}\n\n","module.exports = floor\n\n/**\n * Math.floor the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to floor\n * @returns {vec2} out\n */\nfunction floor(out, a) {\n  out[0] = Math.floor(a[0])\n  out[1] = Math.floor(a[1])\n  return out\n}\n","module.exports = ceil\n\n/**\n * Math.ceil the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to ceil\n * @returns {vec2} out\n */\nfunction ceil(out, a) {\n  out[0] = Math.ceil(a[0])\n  out[1] = Math.ceil(a[1])\n  return out\n}\n","module.exports = round\n\n/**\n * Math.round the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to round\n * @returns {vec2} out\n */\nfunction round(out, a) {\n  out[0] = Math.round(a[0])\n  out[1] = Math.round(a[1])\n  return out\n}\n","module.exports = scale\n\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec2} out\n */\nfunction scale(out, a, b) {\n    out[0] = a[0] * b\n    out[1] = a[1] * b\n    return out\n}","module.exports = scaleAndAdd\n\n/**\n * Adds two vec2's after scaling the second operand by a scalar value\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec2} out\n */\nfunction scaleAndAdd(out, a, b, scale) {\n    out[0] = a[0] + (b[0] * scale)\n    out[1] = a[1] + (b[1] * scale)\n    return out\n}","module.exports = distance\n\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} distance between a and b\n */\nfunction distance(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1]\n    return Math.sqrt(x*x + y*y)\n}","module.exports = require('./distance')\n","module.exports = squaredDistance\n\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} squared distance between a and b\n */\nfunction squaredDistance(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1]\n    return x*x + y*y\n}","module.exports = require('./squaredDistance')\n","module.exports = length\n\n/**\n * Calculates the length of a vec2\n *\n * @param {vec2} a vector to calculate length of\n * @returns {Number} length of a\n */\nfunction length(a) {\n    var x = a[0],\n        y = a[1]\n    return Math.sqrt(x*x + y*y)\n}","module.exports = require('./length')\n","module.exports = squaredLength\n\n/**\n * Calculates the squared length of a vec2\n *\n * @param {vec2} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nfunction squaredLength(a) {\n    var x = a[0],\n        y = a[1]\n    return x*x + y*y\n}","module.exports = require('./squaredLength')\n","module.exports = negate\n\n/**\n * Negates the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to negate\n * @returns {vec2} out\n */\nfunction negate(out, a) {\n    out[0] = -a[0]\n    out[1] = -a[1]\n    return out\n}","module.exports = normalize\n\n/**\n * Normalize a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to normalize\n * @returns {vec2} out\n */\nfunction normalize(out, a) {\n    var x = a[0],\n        y = a[1]\n    var len = x*x + y*y\n    if (len > 0) {\n        //TODO: evaluate use of glm_invsqrt here?\n        len = 1 / Math.sqrt(len)\n        out[0] = a[0] * len\n        out[1] = a[1] * len\n    }\n    return out\n}","module.exports = dot\n\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} dot product of a and b\n */\nfunction dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1]\n}","module.exports = cross\n\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product must by definition produce a 3D vector\n *\n * @param {vec3} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec3} out\n */\nfunction cross(out, a, b) {\n    var z = a[0] * b[1] - a[1] * b[0]\n    out[0] = out[1] = 0\n    out[2] = z\n    return out\n}","module.exports = lerp\n\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec2} out\n */\nfunction lerp(out, a, b, t) {\n    var ax = a[0],\n        ay = a[1]\n    out[0] = ax + t * (b[0] - ax)\n    out[1] = ay + t * (b[1] - ay)\n    return out\n}","module.exports = random\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec2} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec2} out\n */\nfunction random(out, scale) {\n    scale = scale || 1.0\n    var r = Math.random() * 2.0 * Math.PI\n    out[0] = Math.cos(r) * scale\n    out[1] = Math.sin(r) * scale\n    return out\n}","module.exports = transformMat2\n\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2} m matrix to transform with\n * @returns {vec2} out\n */\nfunction transformMat2(out, a, m) {\n    var x = a[0],\n        y = a[1]\n    out[0] = m[0] * x + m[2] * y\n    out[1] = m[1] * x + m[3] * y\n    return out\n}","module.exports = transformMat2d\n\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2d} m matrix to transform with\n * @returns {vec2} out\n */\nfunction transformMat2d(out, a, m) {\n    var x = a[0],\n        y = a[1]\n    out[0] = m[0] * x + m[2] * y + m[4]\n    out[1] = m[1] * x + m[3] * y + m[5]\n    return out\n}","module.exports = transformMat3\n\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat3} m matrix to transform with\n * @returns {vec2} out\n */\nfunction transformMat3(out, a, m) {\n    var x = a[0],\n        y = a[1]\n    out[0] = m[0] * x + m[3] * y + m[6]\n    out[1] = m[1] * x + m[4] * y + m[7]\n    return out\n}","module.exports = transformMat4\n\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec2} out\n */\nfunction transformMat4(out, a, m) {\n    var x = a[0], \n        y = a[1]\n    out[0] = m[0] * x + m[4] * y + m[12]\n    out[1] = m[1] * x + m[5] * y + m[13]\n    return out\n}","module.exports = forEach\n\nvar vec = require('./create')()\n\n/**\n * Perform some operation over an array of vec2s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nfunction forEach(a, stride, offset, count, fn, arg) {\n    var i, l\n    if(!stride) {\n        stride = 2\n    }\n\n    if(!offset) {\n        offset = 0\n    }\n    \n    if(count) {\n        l = Math.min((count * stride) + offset, a.length)\n    } else {\n        l = a.length\n    }\n\n    for(i = offset; i < l; i += stride) {\n        vec[0] = a[i]\n        vec[1] = a[i+1]\n        fn(vec, vec, arg)\n        a[i] = vec[0]\n        a[i+1] = vec[1]\n    }\n    \n    return a\n}","module.exports = limit;\n\n/**\n * Limit the magnitude of this vector to the value used for the `max`\n * parameter.\n *\n * @param  {vec2} the vector to limit\n * @param  {Number} max the maximum magnitude for the vector\n * @returns {vec2} out\n */\nfunction limit(out, a, max) {\n  var mSq = a[0] * a[0] + a[1] * a[1];\n\n  if (mSq > max * max) {\n    var n = Math.sqrt(mSq);\n    out[0] = a[0] / n * max;\n    out[1] = a[1] / n * max;\n  } else {\n    out[0] = a[0];\n    out[1] = a[1];\n  }\n\n  return out;\n}\n","module.exports = {\n  EPSILON: require('./epsilon')\n  , create: require('./create')\n  , clone: require('./clone')\n  , fromValues: require('./fromValues')\n  , copy: require('./copy')\n  , set: require('./set')\n  , equals: require('./equals')\n  , exactEquals: require('./exactEquals')\n  , add: require('./add')\n  , subtract: require('./subtract')\n  , sub: require('./sub')\n  , multiply: require('./multiply')\n  , mul: require('./mul')\n  , divide: require('./divide')\n  , div: require('./div')\n  , inverse: require('./inverse')\n  , min: require('./min')\n  , max: require('./max')\n  , rotate: require('./rotate')\n  , floor: require('./floor')\n  , ceil: require('./ceil')\n  , round: require('./round')\n  , scale: require('./scale')\n  , scaleAndAdd: require('./scaleAndAdd')\n  , distance: require('./distance')\n  , dist: require('./dist')\n  , squaredDistance: require('./squaredDistance')\n  , sqrDist: require('./sqrDist')\n  , length: require('./length')\n  , len: require('./len')\n  , squaredLength: require('./squaredLength')\n  , sqrLen: require('./sqrLen')\n  , negate: require('./negate')\n  , normalize: require('./normalize')\n  , dot: require('./dot')\n  , cross: require('./cross')\n  , lerp: require('./lerp')\n  , random: require('./random')\n  , transformMat2: require('./transformMat2')\n  , transformMat2d: require('./transformMat2d')\n  , transformMat3: require('./transformMat3')\n  , transformMat4: require('./transformMat4')\n  , forEach: require('./forEach')\n  , limit: require('./limit')\n}\n","import { Vec2, Vec3 } from '@tstackgl/types'\nimport vec2 from 'gl-vec2'\n\nexport function scaleAroundCenter2(out: Vec2, input: Vec2, center: Vec2, scale: number) {\n  out[0] = (input[0] - center[0]) * scale + center[0]\n  out[1] = (input[1] - center[1]) * scale + center[1]\n  return out\n}\n\nexport function rotateAroundCenter2(out: Vec2, input: Vec2, center: Vec2, angle: number) {\n  vec2.sub(out, input, center)\n  vec2.rotate(out, out, angle)\n  vec2.add(out, out, center)\n  return out\n}\n\nexport function scaleAroundCenter3(out: Vec3, input: Vec3, center: Vec3, scale: number) {\n  out[0] = (input[0] - center[0]) * scale + center[0]\n  out[1] = (input[1] - center[1]) * scale + center[1]\n  out[2] = (input[2] - center[2]) * scale + center[2]\n  return out\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Reducer composition helper. Takes existing reducer `rfn` (a 3-tuple)\n * and a reducing function `fn`. Returns a new reducer tuple of this\n * form:\n *\n * ```\n * [rfn[0], rfn[1], fn]\n * ```\n *\n * `rfn[2]` reduces values of type `B` into an accumulator of type `A`.\n * `fn` accepts values of type `C` and produces interim results of type\n * `B`, which are then (possibly) passed to the \"inner\" `rfn[2]`\n * function. Therefore the resulting reducer takes inputs of `C` and an\n * accumulator of type `A`.\n *\n * It is assumed that `fn` internally calls `rfn[2]` to pass its own\n * results for further processing by the nested reducer `rfn`.\n *\n * @param rfn\n * @param fn\n */\nfunction compR(rfn, fn) {\n    return [rfn[0], rfn[1], fn];\n}\nexports.compR = compR;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst compr_1 = require(\"../func/compr\");\nconst iterator_1 = require(\"../iterator\");\nfunction map(fn, src) {\n    return src ?\n        iterator_1.iterator1(map(fn), src) :\n        (rfn) => {\n            const r = rfn[2];\n            return compr_1.compR(rfn, (acc, x) => r(acc, fn(x)));\n        };\n}\nexports.map = map;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst illegal_arity_1 = require(\"@thi.ng/errors/illegal-arity\");\nconst reduce_1 = require(\"./reduce\");\nconst map_1 = require(\"./xform/map\");\nfunction transduce(...args) {\n    let acc, xs;\n    switch (args.length) {\n        case 4:\n            xs = args[3];\n            acc = args[2];\n            break;\n        case 3:\n            xs = args[2];\n            break;\n        case 2:\n            return map_1.map((x) => transduce(args[0], args[1], x));\n        default:\n            illegal_arity_1.illegalArity(args.length);\n    }\n    return reduce_1.reduce(args[0](args[1]), acc, xs);\n}\nexports.transduce = transduce;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst transduce_1 = require(\"./transduce\");\nconst nop = () => { };\nfunction run(tx, ...args) {\n    if (args.length === 1) {\n        transduce_1.transduce(tx, [nop, nop, nop], args[0]);\n    }\n    else {\n        const fx = args[0];\n        transduce_1.transduce(tx, [nop, nop, (_, x) => fx(x)], args[1]);\n    }\n}\nexports.run = run;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst reduced_1 = require(\"./reduced\");\nconst push_1 = require(\"./rfn/push\");\n/**\n * Single-step transducer execution wrapper.\n * Returns array if transducer produces multiple results\n * and undefined if there was no output. Else returns single\n * result value.\n *\n * Likewise, once a transducer has produced a final / reduced\n * value, all further invocations of the stepper function will\n * return undefined.\n *\n * ```\n * // single result\n * step(map(x => x * 10))(1);\n * // 10\n *\n * // multiple results\n * step(mapcat(x => [x, x + 1, x + 2]))(1)\n * // [ 1, 2, 3 ]\n *\n * // no result\n * f = step(filter(even))\n * f(1); // undefined\n * f(2); // 2\n *\n * // reduced value termination\n * f = step(take(2));\n * f(1); // 1\n * f(1); // 1\n * f(1); // undefined\n * f(1); // undefined\n * ```\n *\n * @param tx\n */\nfunction step(tx) {\n    const [_, complete, reduce] = tx(push_1.push());\n    _;\n    let done = false;\n    return (x) => {\n        if (!done) {\n            let acc = reduce([], x);\n            done = reduced_1.isReduced(acc);\n            if (done) {\n                acc = complete(acc.deref());\n            }\n            return acc.length === 1 ?\n                acc[0] :\n                acc.length > 0 ?\n                    acc :\n                    undefined;\n        }\n    };\n}\nexports.step = step;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst reduce_1 = require(\"../reduce\");\nfunction add(...args) {\n    const res = reduce_1.$$reduce(add, args);\n    if (res !== undefined) {\n        return res;\n    }\n    const init = args[0] || 0;\n    return reduce_1.reducer(() => init, (acc, x) => acc + x);\n}\nexports.add = add;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst reduce_1 = require(\"../reduce\");\nfunction assocMap(xs) {\n    return xs ?\n        reduce_1.reduce(assocMap(), xs) :\n        reduce_1.reducer(() => new Map(), (acc, [k, v]) => acc.set(k, v));\n}\nexports.assocMap = assocMap;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst reduce_1 = require(\"../reduce\");\nfunction assocObj(xs) {\n    return xs ?\n        reduce_1.reduce(assocObj(), xs) :\n        reduce_1.reducer(() => new Object(), (acc, [k, v]) => (acc[k] = v, acc));\n}\nexports.assocObj = assocObj;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst reduce_1 = require(\"../reduce\");\nfunction conj(xs) {\n    return xs ?\n        reduce_1.reduce(conj(), xs) :\n        reduce_1.reducer(() => new Set(), (acc, x) => acc.add(x));\n}\nexports.conj = conj;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst reduce_1 = require(\"../reduce\");\nfunction count(...args) {\n    const res = reduce_1.$$reduce(count, args);\n    if (res !== undefined) {\n        return res;\n    }\n    let offset = args[0] || 0;\n    let step = args[1] || 1;\n    return reduce_1.reducer(() => offset, (acc, _) => acc + step);\n}\nexports.count = count;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst reduce_1 = require(\"../reduce\");\nfunction div(init, xs) {\n    return xs ?\n        reduce_1.reduce(div(init), xs) :\n        reduce_1.reducer(() => init, (acc, x) => acc / x);\n}\nexports.div = div;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst reduce_1 = require(\"../reduce\");\nconst reduced_1 = require(\"../reduced\");\nfunction every(...args) {\n    const res = reduce_1.$$reduce(every, args);\n    if (res !== undefined) {\n        return res;\n    }\n    const pred = args[0];\n    return reduce_1.reducer(() => true, pred ?\n        (acc, x) => (pred(x) ? acc : reduced_1.reduced(false)) :\n        (acc, x) => (x ? acc : reduced_1.reduced(false)));\n}\nexports.every = every;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst reduce_1 = require(\"../reduce\");\nfunction fill(...args) {\n    const res = reduce_1.$$reduce(fill, args);\n    if (res !== undefined) {\n        return res;\n    }\n    let start = args[0] || 0;\n    return reduce_1.reducer(() => [], (acc, x) => (acc[start++] = x, acc));\n}\nexports.fill = fill;\nfunction fillN(...args) {\n    return fill(...args);\n}\nexports.fillN = fillN;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction identity(x) { return x; }\nexports.identity = identity;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst identity_1 = require(\"../func/identity\");\nconst reduce_1 = require(\"../reduce\");\nconst push_1 = require(\"./push\");\nfunction groupByMap(...args) {\n    const res = reduce_1.$$reduce(groupByMap, args);\n    if (res !== undefined) {\n        return res;\n    }\n    const opts = Object.assign({ key: identity_1.identity, group: push_1.push() }, args[0]);\n    const [init, _, reduce] = opts.group;\n    _;\n    return reduce_1.reducer(() => new Map(), (acc, x) => {\n        const k = opts.key(x);\n        return acc.set(k, acc.has(k) ?\n            reduce(acc.get(k), x) :\n            reduce(init(), x));\n    });\n}\nexports.groupByMap = groupByMap;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst identity_1 = require(\"../func/identity\");\nconst reduce_1 = require(\"../reduce\");\nconst count_1 = require(\"./count\");\nconst group_by_map_1 = require(\"./group-by-map\");\nfunction frequencies(...args) {\n    return reduce_1.$$reduce(frequencies, args) ||\n        group_by_map_1.groupByMap({ key: args[0] || identity_1.identity, group: count_1.count() });\n}\nexports.frequencies = frequencies;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst identity_1 = require(\"../func/identity\");\nconst reduce_1 = require(\"../reduce\");\nconst push_1 = require(\"./push\");\nfunction groupByObj(...args) {\n    const res = reduce_1.$$reduce(groupByObj, args);\n    if (res) {\n        return res;\n    }\n    const _opts = Object.assign({ key: identity_1.identity, group: push_1.push() }, args[0]);\n    const [_init, _, _reduce] = _opts.group;\n    _;\n    return reduce_1.reducer(() => ({}), (acc, x) => {\n        const k = _opts.key(x);\n        acc[k] = acc[k] ?\n            _reduce(acc[k], x) :\n            _reduce(_init(), x);\n        return acc;\n    });\n}\nexports.groupByObj = groupByObj;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst group_by_obj_1 = require(\"./group-by-obj\");\nconst push_1 = require(\"./push\");\nfunction branchPred(key, b, l, r) {\n    return (x) => key(x) & b ? r : l;\n}\n/**\n * Creates a bottom-up, unbalanced binary tree of desired depth and\n * choice of data structures. Any value can be indexed, as long as a\n * numeric representation (key) can be obtained. This numeric key is\n * produced by the supplied `key` function. IMPORTANT: the returned\n * values MUST be unsigned and less than the provided bit length (i.e.\n * `0 .. (2^bits) - 1` range).\n *\n * By default the tree is constructed using plain objects for branches,\n * with left branches stored as \"l\" and right ones as \"r\". The original\n * values are stored at the lowest tree level using a customizable\n * nested reducer. By default leaves are collected in arrays (using the\n * `push()` reducer), but any suitable reducer can be used (e.g.\n * `conj()` to collect values into sets).\n *\n * Index by lowest 4-bits of ID value:\n *\n * ```\n * tree = reduce(\n *   groupBinary(4, x => x.id & 0xf),\n *   [{id: 3}, {id: 8}, {id: 15}, {id: 0}]\n * )\n *\n * tree.l.l.l.l\n * // [ { id: 0 } ]\n * tree.r.r.r.r\n * // [ { id: 15 } ]\n * tree.l.l.r.r\n * // [ { id: 3 } ]\n * ```\n *\n * Collecting as array:\n *\n * ```\n * tree = reduce(\n *   groupBinary(4, identity, ()=>[], push(), 0, 1),\n *   [1,2,3,4,5,6,7]\n * )\n *\n * tree[0][1][0][1] // 0101 == 5 in binary\n * // [ 5 ]\n *\n * tree[0][1][1]    // 011* == branch\n * // [ [ 6 ], [ 7 ] ]\n * ```\n *\n * Using `frequencies` as leaf reducer:\n *\n * ```\n * tree = reduce(\n *   groupBinary(3, (x: string) => x.length, null, frequencies()),\n *   \"aa bbb dddd ccccc bbb eeee fff\".split(\" \")\n * )\n * // [ [ undefined,\n * //     [ Map { 'aa' => 1 },\n * //       Map { 'bbb' => 2, 'fff' => 1 } ] ],\n * //   [ [ Map { 'dddd' => 1, 'eeee' => 1 },\n * //       Map { 'ccccc' => 1 } ] ] ]\n *\n * tree[0][1][1]\n * // Map { 'bbb' => 2, 'fff' => 1 }\n * ```\n *\n * @param bits index range (always from 0)\n * @param key key function\n * @param branch function to create a new branch container (object or\n * array)\n * @param leaf reducer for leaf collection\n * @param left key for storing left branches (e.g. `0` for arrays)\n * @param right key for storing right branches (e.g. `1` for arrays)\n */\nfunction groupBinary(bits, key, branch, leaf, left = \"l\", right = \"r\") {\n    const init = branch || (() => ({}));\n    let rfn = group_by_obj_1.groupByObj({\n        key: branchPred(key, 1, left, right),\n        group: leaf || push_1.push(),\n    });\n    for (let i = 2, maxIndex = 1 << bits; i < maxIndex; i <<= 1) {\n        rfn = group_by_obj_1.groupByObj({ key: branchPred(key, i, left, right), group: [init, rfn[1], rfn[2]] });\n    }\n    return [init, rfn[1], rfn[2]];\n}\nexports.groupBinary = groupBinary;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst reduce_1 = require(\"../reduce\");\nfunction last(xs) {\n    return xs ?\n        reduce_1.reduce(last(), xs) :\n        reduce_1.reducer(() => undefined, (_, x) => x);\n}\nexports.last = last;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction compare(a, b) {\n    if (a === b) {\n        return 0;\n    }\n    if (a == null) {\n        return b == null ? 0 : -1;\n    }\n    if (b == null) {\n        return a == null ? 0 : 1;\n    }\n    if (typeof a.compare === \"function\") {\n        return a.compare(b);\n    }\n    if (typeof b.compare === \"function\") {\n        return -b.compare(a);\n    }\n    return a < b ? -1 : a > b ? 1 : 0;\n}\nexports.compare = compare;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst compare_1 = require(\"@thi.ng/compare\");\nconst reduce_1 = require(\"../reduce\");\nfunction maxCompare(...args) {\n    const res = reduce_1.$$reduce(maxCompare, args);\n    if (res !== undefined) {\n        return res;\n    }\n    const init = args[0];\n    const cmp = args[1] || compare_1.compare;\n    return reduce_1.reducer(init, (acc, x) => cmp(acc, x) >= 0 ? acc : x);\n}\nexports.maxCompare = maxCompare;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst reduce_1 = require(\"../reduce\");\nfunction max(xs) {\n    return xs ?\n        reduce_1.reduce(max(), xs) :\n        reduce_1.reducer(() => -Infinity, (acc, x) => Math.max(acc, x));\n}\nexports.max = max;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst reduce_1 = require(\"../reduce\");\nfunction mean(xs) {\n    let n = 0;\n    return xs ?\n        reduce_1.reduce(mean(), xs) :\n        [\n            () => 0,\n            (acc) => acc / n,\n            (acc, x) => (n++, acc + x),\n        ];\n}\nexports.mean = mean;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst compare_1 = require(\"@thi.ng/compare\");\nconst reduce_1 = require(\"../reduce\");\nfunction minCompare(...args) {\n    const res = reduce_1.$$reduce(minCompare, args);\n    if (res !== undefined) {\n        return res;\n    }\n    const init = args[0];\n    const cmp = args[1] || compare_1.compare;\n    return reduce_1.reducer(init, (acc, x) => cmp(acc, x) <= 0 ? acc : x);\n}\nexports.minCompare = minCompare;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst reduce_1 = require(\"../reduce\");\nfunction min(xs) {\n    return xs ?\n        reduce_1.reduce(min(), xs) :\n        reduce_1.reducer(() => Infinity, (acc, x) => Math.min(acc, x));\n}\nexports.min = min;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst reduce_1 = require(\"../reduce\");\nfunction mul(...args) {\n    const res = reduce_1.$$reduce(mul, args);\n    if (res !== undefined) {\n        return res;\n    }\n    const init = args[0] || 1;\n    return reduce_1.reducer(() => init, (acc, x) => acc * x);\n}\nexports.mul = mul;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst reduce_1 = require(\"../reduce\");\nfunction pushCopy() {\n    return reduce_1.reducer(() => [], (acc, x) => ((acc = acc.slice()).push(x), acc));\n}\nexports.pushCopy = pushCopy;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst reduce_1 = require(\"../reduce\");\nconst reduced_1 = require(\"../reduced\");\nfunction reductions(rfn, xs) {\n    const [init, complete, _reduce] = rfn;\n    return xs ?\n        reduce_1.reduce(reductions(rfn), xs) :\n        [\n            () => [init()],\n            (acc) => (acc[acc.length - 1] = complete(acc[acc.length - 1]), acc),\n            (acc, x) => {\n                const res = _reduce(acc[acc.length - 1], x);\n                if (reduced_1.isReduced(res)) {\n                    acc.push(res.deref());\n                    return reduced_1.reduced(acc);\n                }\n                acc.push(res);\n                return acc;\n            }\n        ];\n}\nexports.reductions = reductions;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst reduce_1 = require(\"../reduce\");\nconst reduced_1 = require(\"../reduced\");\nfunction some(...args) {\n    const res = reduce_1.$$reduce(some, args);\n    if (res !== undefined) {\n        return res;\n    }\n    const pred = args[0];\n    return reduce_1.reducer(() => false, pred ?\n        (acc, x) => (pred(x) ? reduced_1.reduced(true) : acc) :\n        (acc, x) => (x ? reduced_1.reduced(true) : acc));\n}\nexports.some = some;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst reduce_1 = require(\"../reduce\");\nfunction str(sep, xs) {\n    sep = sep || \"\";\n    let first = true;\n    return xs ?\n        [...xs].join(sep) :\n        reduce_1.reducer(() => \"\", (acc, x) => (acc = first ? acc + x : acc + sep + x, first = false, acc));\n}\nexports.str = str;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst reduce_1 = require(\"../reduce\");\nfunction sub(...args) {\n    const res = reduce_1.$$reduce(sub, args);\n    if (res !== undefined) {\n        return res;\n    }\n    const init = args[0] || 0;\n    return reduce_1.reducer(() => init, (acc, x) => acc - x);\n}\nexports.sub = sub;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst compr_1 = require(\"../func/compr\");\nconst iterator_1 = require(\"../iterator\");\nconst reduced_1 = require(\"../reduced\");\nconst B64_CHARS = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\nconst B64_SAFE = B64_CHARS.substr(0, 62) + \"-_\";\nfunction base64Decode(src) {\n    return src ?\n        iterator_1.iterator1(base64Decode(), src) :\n        (rfn) => {\n            const r = rfn[2];\n            let bc = 0, bs = 0;\n            return compr_1.compR(rfn, (acc, x) => {\n                switch (x) {\n                    case \"-\":\n                        x = \"+\";\n                        break;\n                    case \"_\":\n                        x = \"/\";\n                        break;\n                    case \"=\":\n                        return reduced_1.reduced(acc);\n                    default:\n                }\n                let y = B64_CHARS.indexOf(x);\n                bs = bc & 3 ? (bs << 6) + y : y;\n                if (bc++ & 3) {\n                    acc = r(acc, 255 & bs >> (-2 * bc & 6));\n                }\n                return acc;\n            });\n        };\n}\nexports.base64Decode = base64Decode;\nfunction base64Encode(...args) {\n    const iter = iterator_1.$iter(base64Encode, args, iterator_1.iterator);\n    if (iter) {\n        return [...iter].join(\"\");\n    }\n    return (([init, complete, reduce]) => {\n        let state = 0;\n        let b;\n        const opts = Object.assign({ safe: false, buffer: 1024 }, args[0]);\n        const chars = opts.safe ? B64_SAFE : B64_CHARS;\n        const buf = [];\n        return [\n            init,\n            (acc) => {\n                switch (state) {\n                    case 1:\n                        buf.push(chars[b >> 18 & 0x3f], chars[b >> 12 & 0x3f], \"=\", \"=\");\n                        break;\n                    case 2:\n                        buf.push(chars[b >> 18 & 0x3f], chars[b >> 12 & 0x3f], chars[b >> 6 & 0x3f], \"=\");\n                        break;\n                    default:\n                }\n                while (buf.length && !reduced_1.isReduced(acc)) {\n                    acc = reduce(acc, buf.shift());\n                }\n                return complete(acc);\n            },\n            (acc, x) => {\n                switch (state) {\n                    case 0:\n                        state = 1;\n                        b = x << 16;\n                        break;\n                    case 1:\n                        state = 2;\n                        b += x << 8;\n                        break;\n                    default:\n                        state = 0;\n                        b += x;\n                        buf.push(chars[b >> 18 & 0x3f], chars[b >> 12 & 0x3f], chars[b >> 6 & 0x3f], chars[b & 0x3f]);\n                        if (buf.length >= opts.buffer) {\n                            for (let i = 0, n = buf.length; i < n && !reduced_1.isReduced(acc); i++) {\n                                acc = reduce(acc, buf[i]);\n                            }\n                            buf.length = 0;\n                        }\n                }\n                return acc;\n            }\n        ];\n    });\n}\nexports.base64Encode = base64Encode;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst compr_1 = require(\"../func/compr\");\nconst iterator_1 = require(\"../iterator\");\nfunction benchmark(src) {\n    return src ?\n        iterator_1.iterator1(benchmark(), src) :\n        (rfn) => {\n            const r = rfn[2];\n            let prev = Date.now();\n            return compr_1.compR(rfn, (acc, _) => {\n                const t = Date.now();\n                const x = t - prev;\n                prev = t;\n                return r(acc, x);\n            });\n        };\n}\nexports.benchmark = benchmark;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst compr_1 = require(\"../func/compr\");\nconst iterator_1 = require(\"../iterator\");\nconst reduced_1 = require(\"../reduced\");\nfunction bits(...args) {\n    return iterator_1.$iter(bits, args, iterator_1.iterator) ||\n        ((rfn) => {\n            const reduce = rfn[2];\n            const size = (args[0] || 8) - 1;\n            const msb = args[1] !== false;\n            return compr_1.compR(rfn, msb ?\n                (acc, x) => {\n                    for (let i = size; i >= 0 && !reduced_1.isReduced(acc); i--) {\n                        acc = reduce(acc, (x >>> i) & 1);\n                    }\n                    return acc;\n                } :\n                (acc, x) => {\n                    for (let i = 0; i <= size && !reduced_1.isReduced(acc); i++) {\n                        acc = reduce(acc, (x >>> i) & 1);\n                    }\n                    return acc;\n                });\n        });\n}\nexports.bits = bits;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst compr_1 = require(\"../func/compr\");\nconst reduced_1 = require(\"../reduced\");\n/**\n * Transducer to concatenate iterable values.\n */\nfunction cat() {\n    return (rfn) => {\n        const r = rfn[2];\n        return compr_1.compR(rfn, (acc, x) => {\n            if (x) {\n                for (let y of x) {\n                    acc = r(acc, y);\n                    if (reduced_1.isReduced(acc)) {\n                        break;\n                    }\n                }\n            }\n            return acc;\n        });\n    };\n}\nexports.cat = cat;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst reduced_1 = require(\"../reduced\");\nfunction range(from, to, step) {\n    return new Range(from, to, step);\n}\nexports.range = range;\n;\n/**\n * Simple class wrapper around given range interval and implementing\n * `Iterable` and `IReducible` interfaces, the latter is used to\n * accelerate use with `reduce`.\n */\nclass Range {\n    constructor(from, to, step) {\n        if (from === undefined) {\n            from = 0;\n            to = Infinity;\n        }\n        else if (to === undefined) {\n            to = from;\n            from = 0;\n        }\n        step = step === undefined ? (from < to ? 1 : -1) : step;\n        this.from = from;\n        this.to = to;\n        this.step = step;\n    }\n    *[Symbol.iterator]() {\n        const step = this.step;\n        const to = this.to;\n        let from = this.from;\n        if (step > 0) {\n            while (from < to) {\n                yield from;\n                from += step;\n            }\n        }\n        else if (step < 0) {\n            while (from > to) {\n                yield from;\n                from += step;\n            }\n        }\n    }\n    $reduce(rfn, acc) {\n        const step = this.step;\n        if (step > 0) {\n            for (let i = this.from, n = this.to; i < n && !reduced_1.isReduced(acc); i += step) {\n                acc = rfn(acc, i);\n            }\n        }\n        else {\n            for (let i = this.from, n = this.to; i > n && !reduced_1.isReduced(acc); i += step) {\n                acc = rfn(acc, i);\n            }\n        }\n        return acc;\n    }\n}\nexports.Range = Range;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst illegal_arity_1 = require(\"@thi.ng/errors/illegal-arity\");\nconst range_1 = require(\"./range\");\nfunction* range2d(...args) {\n    let fromX, toX, fromY, toY, stepX, stepY;\n    switch (args.length) {\n        case 6:\n            stepX = args[4];\n            stepY = args[5];\n        case 4:\n            [fromX, toX, fromY, toY] = args;\n            break;\n        case 2:\n            [toX, toY] = args;\n            fromX = fromY = 0;\n            break;\n        default:\n            illegal_arity_1.illegalArity(args.length);\n    }\n    const rx = range_1.range(fromX, toX, stepX);\n    for (let y of range_1.range(fromY, toY, stepY)) {\n        for (let x of rx) {\n            yield [x, y];\n        }\n    }\n}\nexports.range2d = range2d;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction* tuples(...src) {\n    const iters = src.map((s) => s[Symbol.iterator]());\n    while (true) {\n        const tuple = [];\n        for (let i of iters) {\n            let v = i.next();\n            if (v.done) {\n                return;\n            }\n            tuple.push(v.value);\n        }\n        yield tuple;\n    }\n}\nexports.tuples = tuples;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst illegal_arguments_1 = require(\"@thi.ng/errors/illegal-arguments\");\nconst range2d_1 = require(\"../iter/range2d\");\nconst tuples_1 = require(\"../iter/tuples\");\nconst iterator_1 = require(\"../iterator\");\nconst add_1 = require(\"../rfn/add\");\nconst transduce_1 = require(\"../transduce\");\nconst map_1 = require(\"./map\");\nexports.buildKernel2d = (weights, w, h) => {\n    const w2 = w >> 1;\n    const h2 = h >> 1;\n    return [...tuples_1.tuples(weights, range2d_1.range2d(-w2, w2 + 1, -h2, h2 + 1))];\n};\nconst kernelLookup2d = (src, x, y, width, height, wrap, border) => wrap ?\n    ([w, [ox, oy]]) => {\n        const xx = x < -ox ? width + ox : x >= width - ox ? ox - 1 : x + ox;\n        const yy = y < -oy ? height + oy : y >= height - oy ? oy - 1 : y + oy;\n        return w * src[yy * width + xx];\n    } :\n    ([w, [ox, oy]]) => {\n        return (x < -ox || y < -oy || x >= width - ox || y >= height - oy) ?\n            border :\n            w * src[(y + oy) * width + x + ox];\n    };\nfunction convolve2d(opts, _src) {\n    if (_src) {\n        return iterator_1.iterator1(convolve2d(opts), _src);\n    }\n    const { src, width, height } = opts;\n    const wrap = opts.wrap !== false;\n    const border = opts.border || 0;\n    let kernel = opts.kernel;\n    if (!kernel) {\n        if (!(opts.weights && opts.kwidth && opts.kheight)) {\n            illegal_arguments_1.illegalArgs(`no kernel or kernel config`);\n        }\n        kernel = exports.buildKernel2d(opts.weights, opts.kwidth, opts.kheight);\n    }\n    return map_1.map((p) => transduce_1.transduce(map_1.map(kernelLookup2d(src, p[0], p[1], width, height, wrap, border)), add_1.add(), kernel));\n}\nexports.convolve2d = convolve2d;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst api_1 = require(\"@thi.ng/api/api\");\nconst compr_1 = require(\"../func/compr\");\nconst iterator_1 = require(\"../iterator\");\nfunction dedupe(...args) {\n    return iterator_1.$iter(dedupe, args) ||\n        ((rfn) => {\n            const r = rfn[2];\n            const equiv = args[0];\n            let prev = api_1.SEMAPHORE;\n            return compr_1.compR(rfn, equiv ?\n                (acc, x) => {\n                    acc = equiv(prev, x) ? acc : r(acc, x);\n                    prev = x;\n                    return acc;\n                } :\n                (acc, x) => {\n                    acc = prev === x ? acc : r(acc, x);\n                    prev = x;\n                    return acc;\n                });\n        });\n}\nexports.dedupe = dedupe;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction delay(x, t) {\n    return new Promise((resolve) => setTimeout(() => resolve(x), t));\n}\nexports.delay = delay;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst delay_1 = require(\"../func/delay\");\nconst map_1 = require(\"./map\");\n/**\n * Yields transducer which wraps incoming values in promises, which\n * resolve after specified delay time (in ms).\n *\n * **Only to be used in async contexts and NOT with `transduce`\n * directly.**\n *\n * @param t\n */\nfunction delayed(t) {\n    return map_1.map((x) => delay_1.delay(x, t));\n}\nexports.delayed = delayed;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst compr_1 = require(\"../func/compr\");\nconst iterator_1 = require(\"../iterator\");\nfunction distinct(...args) {\n    return iterator_1.$iter(distinct, args) ||\n        ((rfn) => {\n            const r = rfn[2];\n            const opts = (args[0] || {});\n            const key = opts.key;\n            const seen = (opts.cache || (() => new Set()))();\n            return compr_1.compR(rfn, key ?\n                (acc, x) => {\n                    const k = key(x);\n                    return !seen.has(k) ? (seen.add(k), r(acc, x)) : acc;\n                } :\n                (acc, x) => !seen.has(x) ? (seen.add(x), r(acc, x)) : acc);\n        });\n}\nexports.distinct = distinct;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst compr_1 = require(\"../func/compr\");\nconst iterator_1 = require(\"../iterator\");\nfunction throttle(pred, src) {\n    return src ?\n        iterator_1.iterator1(throttle(pred), src) :\n        (rfn) => {\n            const r = rfn[2];\n            const _pred = pred();\n            return compr_1.compR(rfn, (acc, x) => _pred(x) ? r(acc, x) : acc);\n        };\n}\nexports.throttle = throttle;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst throttle_1 = require(\"./throttle\");\nconst iterator_1 = require(\"../iterator\");\nfunction dropNth(n, src) {\n    if (src) {\n        return iterator_1.iterator1(dropNth(n), src);\n    }\n    n = Math.max(0, n - 1);\n    return throttle_1.throttle(() => {\n        let skip = n;\n        return () => skip-- > 0 ? true : (skip = n, false);\n    });\n}\nexports.dropNth = dropNth;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst compr_1 = require(\"../func/compr\");\nconst iterator_1 = require(\"../iterator\");\nfunction dropWhile(...args) {\n    return iterator_1.$iter(dropWhile, args) ||\n        ((rfn) => {\n            const r = rfn[2];\n            const pred = args[0];\n            let ok = true;\n            return compr_1.compR(rfn, (acc, x) => (ok = ok && pred(x)) ? acc : r(acc, x));\n        });\n}\nexports.dropWhile = dropWhile;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst compr_1 = require(\"../func/compr\");\nconst iterator_1 = require(\"../iterator\");\nfunction drop(n, src) {\n    return src ?\n        iterator_1.iterator1(drop(n), src) :\n        (rfn) => {\n            const r = rfn[2];\n            let m = n;\n            return compr_1.compR(rfn, (acc, x) => m > 0 ? (m--, acc) : r(acc, x));\n        };\n}\nexports.drop = drop;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst compr_1 = require(\"../func/compr\");\nconst iterator_1 = require(\"../iterator\");\nconst reduced_1 = require(\"../reduced\");\nfunction duplicate(n = 1, src) {\n    return src ?\n        iterator_1.iterator(duplicate(n), src) :\n        (rfn) => {\n            const r = rfn[2];\n            return compr_1.compR(rfn, (acc, x) => {\n                for (let i = n; i >= 0 && !reduced_1.isReduced(acc); i--) {\n                    acc = r(acc, x);\n                }\n                return acc;\n            });\n        };\n}\nexports.duplicate = duplicate;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst iterator_1 = require(\"../iterator\");\nconst compr_1 = require(\"../func/compr\");\nfunction filter(pred, src) {\n    return src ?\n        iterator_1.iterator1(filter(pred), src) :\n        (rfn) => {\n            const r = rfn[2];\n            return compr_1.compR(rfn, (acc, x) => pred(x) ? r(acc, x) : acc);\n        };\n}\nexports.filter = filter;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst equiv_1 = require(\"@thi.ng/equiv\");\n/**\n * Performs a fuzzy search of `query` in `domain` and returns `true` if\n * successful. The optional `eq` predicate can be used to customize item\n * equality checking. Uses @thi.ng/equiv by default.\n *\n * Related transducer: `filterFuzzy()` (/xform/filter-fuzzy.ts)\n *\n * Adapted and generalized from:\n * https://github.com/bevacqua/fufuzzyzzysearch (MIT)\n *\n * @param domain\n * @param query\n * @param eq\n */\nfunction fuzzyMatch(domain, query, eq = equiv_1.equiv) {\n    const nd = domain.length;\n    const nq = query.length;\n    if (nq > nd) {\n        return false;\n    }\n    if (nq === nd) {\n        return eq(query, domain);\n    }\n    next: for (let i = 0, j = 0; i < nq; i++) {\n        const q = query[i];\n        while (j < nd) {\n            if (eq(domain[j++], q)) {\n                continue next;\n            }\n        }\n        return false;\n    }\n    return true;\n}\nexports.fuzzyMatch = fuzzyMatch;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst fuzzy_match_1 = require(\"../func/fuzzy-match\");\nconst iterator_1 = require(\"../iterator\");\nconst filter_1 = require(\"./filter\");\nfunction filterFuzzy(...args) {\n    const iter = args.length > 1 && iterator_1.$iter(filterFuzzy, args);\n    if (iter) {\n        return iter;\n    }\n    const query = args[0];\n    const { key, equiv } = (args[1] || {});\n    return filter_1.filter((x) => fuzzy_match_1.fuzzyMatch(key != null ? key(x) : x, query, equiv));\n}\nexports.filterFuzzy = filterFuzzy;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst compr_1 = require(\"../func/compr\");\nconst iterator_1 = require(\"../iterator\");\nconst reduced_1 = require(\"../reduced\");\nfunction flattenWith(fn, src) {\n    return src ?\n        iterator_1.iterator(flattenWith(fn), src) :\n        (rfn) => {\n            const reduce = rfn[2];\n            const flatten = (acc, x) => {\n                const xx = fn(x);\n                if (xx) {\n                    for (let y of xx) {\n                        acc = flatten(acc, y);\n                        if (reduced_1.isReduced(acc)) {\n                            break;\n                        }\n                    }\n                    return acc;\n                }\n                return reduce(acc, x);\n            };\n            return compr_1.compR(rfn, flatten);\n        };\n}\nexports.flattenWith = flattenWith;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst flatten_with_1 = require(\"./flatten-with\");\nfunction flatten(src) {\n    return flatten_with_1.flattenWith((x) => x != null && x[Symbol.iterator] && typeof x !== \"string\" ? x : undefined, src);\n}\nexports.flatten = flatten;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction memoizeJ(fn, cache) {\n    !cache && (cache = {});\n    return (...args) => {\n        const key = JSON.stringify(args);\n        if (key !== undefined) {\n            return key in cache ?\n                cache[key] :\n                (cache[key] = fn.apply(null, args));\n        }\n        return fn.apply(null, args);\n    };\n}\nexports.memoizeJ = memoizeJ;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst memoizej_1 = require(\"@thi.ng/memoize/memoizej\");\n/**\n * @param ch character\n * @param n repeat count\n */\nexports.repeat = memoizej_1.memoizeJ((ch, n) => ch.repeat(n));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst memoizej_1 = require(\"@thi.ng/memoize/memoizej\");\nconst repeat_1 = require(\"./repeat\");\n/**\n * Returns a `Stringer` which formats given numbers to `radix`, `len`\n * and with optional prefix (not included in `len`).\n *\n * @param radix\n * @param len\n * @param prefix\n */\nexports.radix = memoizej_1.memoizeJ((radix, n, prefix = \"\") => {\n    const buf = repeat_1.repeat(\"0\", n);\n    return (x) => {\n        x = (x >>> 0).toString(radix);\n        return prefix + (x.length < n ? buf.substr(x.length) + x : x);\n    };\n});\n/**\n * 8bit binary conversion preset.\n */\nexports.B8 = exports.radix(2, 8);\n/**\n * 8bit hex conversion preset.\n * Assumes unsigned inputs.\n */\nexports.U8 = exports.radix(16, 2);\n/**\n * 16bit hex conversion preset.\n * Assumes unsigned inputs.\n */\nexports.U16 = exports.radix(16, 4);\n/**\n * 24bit hex conversion preset.\n * Assumes unsigned inputs.\n */\nexports.U24 = exports.radix(16, 6);\n/**\n * 32bit hex conversion preset.\n * Assumes unsigned inputs.\n */\nexports.U32 = exports.radix(16, 8);\n/**\n * 64bit hex conversion preset (2x 32bit ints)\n * Assumes unsigned inputs.\n */\nexports.U64 = (hi, lo) => exports.U32(hi) + exports.U32(lo);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst illegal_arity_1 = require(\"@thi.ng/errors/illegal-arity\");\nfunction comp(...fns) {\n    let [a, b, c, d, e, f, g, h, i, j] = fns;\n    switch (fns.length) {\n        case 0:\n            illegal_arity_1.illegalArity(0);\n        case 1:\n            return a;\n        case 2:\n            return (...xs) => a(b(...xs));\n        case 3:\n            return (...xs) => a(b(c(...xs)));\n        case 4:\n            return (...xs) => a(b(c(d(...xs))));\n        case 5:\n            return (...xs) => a(b(c(d(e(...xs)))));\n        case 6:\n            return (...xs) => a(b(c(d(e(f(...xs))))));\n        case 7:\n            return (...xs) => a(b(c(d(e(f(g(...xs)))))));\n        case 8:\n            return (...xs) => a(b(c(d(e(f(g(h(...xs))))))));\n        case 9:\n            return (...xs) => a(b(c(d(e(f(g(h(i(...xs)))))))));\n        case 10:\n        default:\n            const fn = (...xs) => a(b(c(d(e(f(g(h(i(j(...xs))))))))));\n            return fns.length === 10 ? fn : compI(fn, ...fns.slice(10));\n    }\n}\nexports.comp = comp;\nfunction compI(...fns) {\n    return comp.apply(null, fns.reverse());\n}\nexports.compI = compI;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst comp_1 = require(\"@thi.ng/compose/comp\");\nfunction comp(...fns) {\n    return comp_1.comp.apply(null, fns);\n}\nexports.comp = comp;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction juxt(...fns) {\n    const [a, b, c, d, e, f, g, h] = fns;\n    switch (fns.length) {\n        case 1:\n            return (x) => [a(x)];\n        case 2:\n            return (x) => [a(x), b(x)];\n        case 3:\n            return (x) => [a(x), b(x), c(x)];\n        case 4:\n            return (x) => [a(x), b(x), c(x), d(x)];\n        case 5:\n            return (x) => [a(x), b(x), c(x), d(x), e(x)];\n        case 6:\n            return (x) => [a(x), b(x), c(x), d(x), e(x), f(x)];\n        case 7:\n            return (x) => [a(x), b(x), c(x), d(x), e(x), f(x), g(x)];\n        case 8:\n            return (x) => [a(x), b(x), c(x), d(x), e(x), f(x), g(x), h(x)];\n        default:\n            return (x) => {\n                let res = new Array(fns.length);\n                for (let i = fns.length - 1; i >= 0; i--) {\n                    res[i] = fns[i](x);\n                }\n                return res;\n            };\n    }\n}\nexports.juxt = juxt;\n","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"@thi.ng/compose/juxt\"));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst compr_1 = require(\"../func/compr\");\nconst iterator_1 = require(\"../iterator\");\nfunction mapIndexed(...args) {\n    return iterator_1.$iter(mapIndexed, args) ||\n        ((rfn) => {\n            const r = rfn[2];\n            const fn = args[0];\n            let i = args[1] || 0;\n            return compr_1.compR(rfn, (acc, x) => r(acc, fn(i++, x)));\n        });\n}\nexports.mapIndexed = mapIndexed;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst iterator_1 = require(\"../iterator\");\nconst reduced_1 = require(\"../reduced\");\nfunction padLast(n, fill, src) {\n    return src ?\n        iterator_1.iterator(padLast(n, fill), src) :\n        ([init, complete, reduce]) => {\n            let m = 0;\n            return [\n                init,\n                (acc) => {\n                    let rem = m % n;\n                    if (rem > 0) {\n                        while (++rem <= n && !reduced_1.isReduced(acc)) {\n                            acc = reduce(acc, fill);\n                        }\n                    }\n                    return complete(acc);\n                },\n                (acc, x) => (m++, reduce(acc, x))\n            ];\n        };\n}\nexports.padLast = padLast;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst radix_1 = require(\"@thi.ng/strings/radix\");\nconst comp_1 = require(\"../func/comp\");\nconst juxt_1 = require(\"../func/juxt\");\nconst iterator_1 = require(\"../iterator\");\nconst map_1 = require(\"./map\");\nconst map_indexed_1 = require(\"./map-indexed\");\nconst pad_last_1 = require(\"./pad-last\");\nconst partition_1 = require(\"./partition\");\nfunction hexDump(...args) {\n    const iter = iterator_1.$iter(hexDump, args);\n    if (iter) {\n        return iter;\n    }\n    const { cols, address } = Object.assign({ cols: 16, address: 0 }, args[0]);\n    return comp_1.comp(pad_last_1.padLast(cols, 0), map_1.map(juxt_1.juxt(radix_1.U8, (x) => x > 31 && x < 128 ? String.fromCharCode(x) : \".\")), partition_1.partition(cols, true), map_1.map(juxt_1.juxt((x) => x.map((y) => y[0]).join(\" \"), (x) => x.map((y) => y[1]).join(\"\"))), map_indexed_1.mapIndexed((i, [h, a]) => `${radix_1.U32(address + i * cols)} | ${h} | ${a}`));\n}\nexports.hexDump = hexDump;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst iterator_1 = require(\"../iterator\");\nconst map_indexed_1 = require(\"./map-indexed\");\nfunction indexed(...args) {\n    const iter = iterator_1.$iter(indexed, args);\n    if (iter) {\n        return iter;\n    }\n    const from = args[0] || 0;\n    return map_indexed_1.mapIndexed((i, x) => [from + i, x]);\n}\nexports.indexed = indexed;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst compr_1 = require(\"../func/compr\");\nconst iterator_1 = require(\"../iterator\");\nconst reduced_1 = require(\"../reduced\");\nfunction interleave(sep, src) {\n    return src ?\n        iterator_1.iterator(interleave(sep), src) :\n        (rfn) => {\n            const r = rfn[2];\n            const _sep = typeof sep === \"function\" ? sep : () => sep;\n            return compr_1.compR(rfn, (acc, x) => {\n                acc = r(acc, _sep());\n                return reduced_1.isReduced(acc) ? acc : r(acc, x);\n            });\n        };\n}\nexports.interleave = interleave;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst compr_1 = require(\"../func/compr\");\nconst iterator_1 = require(\"../iterator\");\nconst reduced_1 = require(\"../reduced\");\nfunction interpose(sep, src) {\n    return src ?\n        iterator_1.iterator(interpose(sep), src) :\n        (rfn) => {\n            const r = rfn[2];\n            const _sep = typeof sep === \"function\" ? sep : () => sep;\n            let first = true;\n            return compr_1.compR(rfn, (acc, x) => {\n                if (first) {\n                    first = false;\n                    return r(acc, x);\n                }\n                acc = r(acc, _sep());\n                return reduced_1.isReduced(acc) ? acc : r(acc, x);\n            });\n        };\n}\nexports.interpose = interpose;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst compr_1 = require(\"../func/compr\");\nconst identity_1 = require(\"../func/identity\");\nconst iterator_1 = require(\"../iterator\");\nfunction keep(...args) {\n    return iterator_1.$iter(keep, args) ||\n        ((rfn) => {\n            const r = rfn[2];\n            const pred = args[0] || identity_1.identity;\n            return compr_1.compR(rfn, (acc, x) => pred(x) != null ? r(acc, x) : acc);\n        });\n}\nexports.keep = keep;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst is_function_1 = require(\"@thi.ng/checks/is-function\");\nconst iterator_1 = require(\"../iterator\");\nconst map_1 = require(\"./map\");\nfunction labeled(id, src) {\n    return src ?\n        iterator_1.iterator1(labeled(id), src) :\n        map_1.map(is_function_1.isFunction(id) ?\n            (x) => [id(x), x] :\n            (x) => [id, x]);\n}\nexports.labeled = labeled;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst is_function_1 = require(\"@thi.ng/checks/is-function\");\n/**\n * Higher-order deep object transformer. Accepts a nested `spec`\n * array reflecting same key structure as the object to be mapped,\n * but with functions or sub-specs as their values.\n * Returns a new function, which when called, recursively applies\n * nested transformers in post-order traversal (child transformers\n * are run first) and returns the result of the root transformer.\n *\n * The transform specs are given as arrays in this format:\n *\n * ```\n * [tx-function, {key1: [tx-function, {...}], key2: tx-fn}]\n * ```\n *\n * If a key in the spec has no further sub maps, its transform\n * function can be given directly without having to wrap it into\n * the usual array structure.\n *\n * ```\n * // source object to be transformed\n * src = {\n *    meta: {\n *      author: { name: \"Alice\", email: \"a@b.com\" },\n *      date: 1041510896000\n *    },\n *    type: \"post\",\n *    title: \"Hello world\",\n *    body: \"Ratione necessitatibus doloremque itaque.\"\n * };\n *\n * // deep transformation spec\n * spec = [\n *    // root transform (called last)\n *    ({type, meta, title, body}) => [\"div\", {class: type}, title, meta, body],\n *    // object of transform sub-specs\n *    {\n *      meta: [\n *        ({author, date}) => [\"div.meta\", author, `(${date})`],\n *        {\n *          author: ({email, name}) => [\"a\", {href: `mailto:${email}`}, name],\n *          date: (d) => new Date(d).toLocaleString()\n *        }\n *      ],\n *      title: (title) => [\"h1\", title]\n *    }\n * ];\n *\n * // build transformer & apply to src\n * deepTransform(spec)(src);\n *\n * // [ \"div\",\n * //   { class: \"article\" },\n * //   [ \"h1\", \"Hello world\" ],\n * //   [ \"div.meta\",\n * //     [ \"a\", { href: \"mailto:a@.b.com\" }, \"Alice\" ],\n * //     \"(1/2/2003, 12:34:56 PM)\" ],\n * //   \"Ratione necessitatibus doloremque itaque.\" ]\n * ```\n *\n * @param spec transformation spec\n */\nfunction deepTransform(spec) {\n    if (is_function_1.isFunction(spec)) {\n        return spec;\n    }\n    const mapfns = Object.keys(spec[1] || {}).reduce((acc, k) => (acc[k] = deepTransform(spec[1][k]), acc), {});\n    return (x) => {\n        const res = Object.assign({}, x);\n        for (let k in mapfns) {\n            res[k] = mapfns[k](res[k]);\n        }\n        return spec[0](res);\n    };\n}\nexports.deepTransform = deepTransform;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst deep_transform_1 = require(\"../func/deep-transform\");\nconst iterator_1 = require(\"../iterator\");\nconst map_1 = require(\"./map\");\nfunction mapDeep(spec, src) {\n    return src ?\n        iterator_1.iterator1(mapDeep(spec), src) :\n        map_1.map(deep_transform_1.deepTransform(spec));\n}\nexports.mapDeep = mapDeep;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst iterator_1 = require(\"../iterator\");\nconst map_1 = require(\"./map\");\nfunction mapKeys(...args) {\n    const iter = iterator_1.$iter(mapKeys, args);\n    if (iter) {\n        return iter;\n    }\n    const keys = args[0];\n    const copy = args[1] !== false;\n    return map_1.map((x) => {\n        const res = copy ? Object.assign({}, x) : x;\n        for (let k in keys) {\n            res[k] = keys[k](x[k]);\n        }\n        return res;\n    });\n}\nexports.mapKeys = mapKeys;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst compr_1 = require(\"../func/compr\");\nconst iterator_1 = require(\"../iterator\");\nfunction mapNth(...args) {\n    const iter = iterator_1.$iter(mapNth, args);\n    if (iter) {\n        return iter;\n    }\n    let n = args[0] - 1, offset, fn;\n    if (typeof args[1] === \"number\") {\n        offset = args[1];\n        fn = args[2];\n    }\n    else {\n        fn = args[1];\n        offset = 0;\n    }\n    return (rfn) => {\n        const r = rfn[2];\n        let skip = 0, off = offset;\n        return compr_1.compR(rfn, (acc, x) => {\n            if (off === 0) {\n                if (skip === 0) {\n                    skip = n;\n                    return r(acc, fn(x));\n                }\n                skip--;\n            }\n            else {\n                off--;\n            }\n            return r(acc, x);\n        });\n    };\n}\nexports.mapNth = mapNth;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst iterator_1 = require(\"../iterator\");\nconst map_1 = require(\"./map\");\nfunction mapVals(...args) {\n    const iter = iterator_1.$iter(mapVals, args);\n    if (iter) {\n        return iter;\n    }\n    const fn = args[0];\n    const copy = args[1] !== false;\n    return map_1.map((x) => {\n        const res = copy ? {} : x;\n        for (let k in x) {\n            res[k] = fn(x[k]);\n        }\n        return res;\n    });\n}\nexports.mapVals = mapVals;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst comp_1 = require(\"../func/comp\");\nconst iterator_1 = require(\"../iterator\");\nconst cat_1 = require(\"./cat\");\nconst map_1 = require(\"./map\");\nfunction mapcat(fn, src) {\n    return src ?\n        iterator_1.iterator(mapcat(fn), src) :\n        comp_1.comp(map_1.map(fn), cat_1.cat());\n}\nexports.mapcat = mapcat;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst compr_1 = require(\"../func/compr\");\nconst iterator_1 = require(\"../iterator\");\nconst reduced_1 = require(\"../reduced\");\nfunction take(n, src) {\n    return src ?\n        iterator_1.iterator(take(n), src) :\n        (rfn) => {\n            const r = rfn[2];\n            let m = n;\n            return compr_1.compR(rfn, (acc, x) => --m > 0 ? r(acc, x) :\n                m === 0 ? reduced_1.ensureReduced(r(acc, x)) :\n                    reduced_1.reduced(acc));\n        };\n}\nexports.take = take;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst comp_1 = require(\"../func/comp\");\nconst iterator_1 = require(\"../iterator\");\nconst filter_1 = require(\"./filter\");\nconst take_1 = require(\"./take\");\nfunction matchFirst(pred, src) {\n    return src ?\n        [...iterator_1.iterator1(matchFirst(pred), src)][0] :\n        comp_1.comp(filter_1.filter(pred), take_1.take(1));\n}\nexports.matchFirst = matchFirst;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst iterator_1 = require(\"../iterator\");\nconst reduced_1 = require(\"../reduced\");\nfunction takeLast(n, src) {\n    return src ?\n        iterator_1.iterator(takeLast(n), src) :\n        ([init, complete, reduce]) => {\n            const buf = [];\n            return [\n                init,\n                (acc) => {\n                    while (buf.length && !reduced_1.isReduced(acc)) {\n                        acc = reduce(acc, buf.shift());\n                    }\n                    return complete(acc);\n                },\n                (acc, x) => {\n                    if (buf.length === n) {\n                        buf.shift();\n                    }\n                    buf.push(x);\n                    return acc;\n                }\n            ];\n        };\n}\nexports.takeLast = takeLast;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst comp_1 = require(\"../func/comp\");\nconst iterator_1 = require(\"../iterator\");\nconst filter_1 = require(\"./filter\");\nconst take_last_1 = require(\"./take-last\");\nfunction matchLast(pred, src) {\n    return src ?\n        [...iterator_1.iterator(matchLast(pred), src)][0] :\n        comp_1.comp(filter_1.filter(pred), take_last_1.takeLast(1));\n}\nexports.matchLast = matchLast;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst illegal_arguments_1 = require(\"@thi.ng/errors/illegal-arguments\");\nconst compr_1 = require(\"../func/compr\");\nconst iterator_1 = require(\"../iterator\");\nfunction movingAverage(period, src) {\n    return src ?\n        iterator_1.iterator1(movingAverage(period), src) :\n        (rfn) => {\n            period |= 0;\n            period < 2 && illegal_arguments_1.illegalArgs(\"period must be >= 2\");\n            const reduce = rfn[2];\n            const window = [];\n            let sum = 0;\n            return compr_1.compR(rfn, (acc, x) => {\n                const n = window.push(x);\n                sum += x;\n                n > period && (sum -= window.shift());\n                return n >= period ? reduce(acc, sum / period) : acc;\n            });\n        };\n}\nexports.movingAverage = movingAverage;\n;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst compare_1 = require(\"@thi.ng/compare\");\nconst comp_1 = require(\"../func/comp\");\nconst identity_1 = require(\"../func/identity\");\nconst iterator_1 = require(\"../iterator\");\nconst map_1 = require(\"./map\");\nconst partition_1 = require(\"./partition\");\nfunction movingMedian(...args) {\n    const iter = iterator_1.$iter(movingMedian, args);\n    if (iter) {\n        return iter;\n    }\n    const { key, compare } = Object.assign({ key: identity_1.identity, compare: compare_1.compare }, args[1]);\n    const n = args[0];\n    const m = n >> 1;\n    return comp_1.comp(partition_1.partition(n, 1, true), map_1.map((window) => window.slice().sort((a, b) => compare(key(a), key(b)))[m]));\n}\nexports.movingMedian = movingMedian;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst juxt_1 = require(\"../func/juxt\");\nconst step_1 = require(\"../step\");\nconst map_1 = require(\"./map\");\nfunction multiplex(...args) {\n    return map_1.map(juxt_1.juxt.apply(null, args.map(step_1.step)));\n}\nexports.multiplex = multiplex;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction renamer(kmap) {\n    const ks = Object.keys(kmap);\n    const [a2, b2, c2] = ks;\n    const [a1, b1, c1] = ks.map((k) => kmap[k]);\n    switch (ks.length) {\n        case 3:\n            return (x) => {\n                const res = {};\n                let v;\n                v = x[c1], v !== undefined && (res[c2] = v);\n                v = x[b1], v !== undefined && (res[b2] = v);\n                v = x[a1], v !== undefined && (res[a2] = v);\n                return res;\n            };\n        case 2:\n            return (x) => {\n                const res = {};\n                let v;\n                v = x[b1], v !== undefined && (res[b2] = v);\n                v = x[a1], v !== undefined && (res[a2] = v);\n                return res;\n            };\n        case 1:\n            return (x) => {\n                const res = {};\n                let v = x[a1];\n                v !== undefined && (res[a2] = v);\n                return res;\n            };\n        default:\n            return (x) => {\n                let k, v;\n                const res = {};\n                for (let i = ks.length - 1; i >= 0; i--) {\n                    k = ks[i], v = x[kmap[k]], v !== undefined && (res[k] = v);\n                }\n                return res;\n            };\n    }\n}\nexports.renamer = renamer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst is_array_1 = require(\"@thi.ng/checks/is-array\");\nconst comp_1 = require(\"../func/comp\");\nconst renamer_1 = require(\"../func/renamer\");\nconst iterator_1 = require(\"../iterator\");\nconst transduce_1 = require(\"../transduce\");\nconst filter_1 = require(\"./filter\");\nconst map_1 = require(\"./map\");\nfunction rename(...args) {\n    const iter = args.length > 2 && iterator_1.$iter(rename, args);\n    if (iter) {\n        return iter;\n    }\n    let kmap = args[0];\n    if (is_array_1.isArray(kmap)) {\n        kmap = kmap.reduce((acc, k, i) => (acc[k] = i, acc), {});\n    }\n    if (args[1]) {\n        const ks = Object.keys(kmap);\n        return map_1.map((y) => transduce_1.transduce(comp_1.comp(map_1.map((k) => [k, y[kmap[k]]]), filter_1.filter(x => x[1] !== undefined)), args[1], ks));\n    }\n    else {\n        return map_1.map(renamer_1.renamer(kmap));\n    }\n}\nexports.rename = rename;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst comp_1 = require(\"../func/comp\");\nconst iterator_1 = require(\"../iterator\");\nconst multiplex_1 = require(\"./multiplex\");\nconst rename_1 = require(\"./rename\");\nfunction multiplexObj(...args) {\n    const iter = iterator_1.$iter(multiplexObj, args);\n    if (iter) {\n        return iter;\n    }\n    const [xforms, rfn] = args;\n    const ks = Object.keys(xforms);\n    return comp_1.comp(multiplex_1.multiplex.apply(null, ks.map((k) => xforms[k])), rename_1.rename(ks, rfn));\n}\nexports.multiplexObj = multiplexObj;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * No-op / pass-through transducer, essentially the same as:\n * `map(identity)`, but faster. Useful for testing and / or to keep\n * existing values in a `multiplex()` tuple lane.\n */\nfunction noop() {\n    return (rfn) => rfn;\n}\nexports.noop = noop;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst comp_1 = require(\"../func/comp\");\nconst iterator_1 = require(\"../iterator\");\nconst drop_1 = require(\"./drop\");\nconst take_1 = require(\"./take\");\nfunction page(...args) {\n    return iterator_1.$iter(page, args) ||\n        comp_1.comp(drop_1.drop(args[0] * (args[1] || 10)), take_1.take(args[1] || 10));\n}\nexports.page = page;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst iterator_1 = require(\"../iterator\");\nconst reduced_1 = require(\"../reduced\");\nfunction partitionBits(...args) {\n    return iterator_1.$iter(partitionBits, args, iterator_1.iterator) ||\n        ((rfn) => {\n            const destSize = args[0];\n            const srcSize = args[1] || 8;\n            return destSize < srcSize ?\n                small(rfn, destSize, srcSize) :\n                destSize > srcSize ?\n                    large(rfn, destSize, srcSize) :\n                    rfn;\n        });\n}\nexports.partitionBits = partitionBits;\nconst small = ([init, complete, reduce], n, wordSize) => {\n    const maxb = wordSize - n;\n    const m1 = (1 << wordSize) - 1;\n    const m2 = (1 << n) - 1;\n    let r = 0;\n    let y = 0;\n    return [\n        init,\n        (acc) => complete(r > 0 ? reduce(acc, y) : acc),\n        (acc, x) => {\n            let b = 0;\n            do {\n                acc = reduce(acc, y + ((x >>> (maxb + r)) & m2));\n                b += n - r;\n                x = (x << (n - r)) & m1;\n                y = 0;\n                r = 0;\n            } while (b <= maxb && !reduced_1.isReduced(acc));\n            r = wordSize - b;\n            y = r > 0 ? (x >>> maxb) & m2 : 0;\n            return acc;\n        }\n    ];\n};\nconst large = ([init, complete, reduce], n, wordSize) => {\n    const m1 = (1 << wordSize) - 1;\n    let r = 0;\n    let y = 0;\n    return [\n        init,\n        (acc) => complete(r > 0 ? reduce(acc, y) : acc),\n        (acc, x) => {\n            if (r + wordSize <= n) {\n                y |= (x & m1) << (n - wordSize - r);\n                r += wordSize;\n                if (r === n) {\n                    acc = reduce(acc, y);\n                    y = 0;\n                    r = 0;\n                }\n            }\n            else {\n                const k = n - r;\n                r = wordSize - k;\n                acc = reduce(acc, y | ((x >>> r) & ((1 << k) - 1)));\n                y = (x & ((1 << r) - 1)) << (n - r);\n            }\n            return acc;\n        }\n    ];\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst api_1 = require(\"@thi.ng/api/api\");\nconst iterator_1 = require(\"../iterator\");\nconst reduced_1 = require(\"../reduced\");\nfunction partitionBy(...args) {\n    return iterator_1.$iter(partitionBy, args, iterator_1.iterator) ||\n        (([init, complete, reduce]) => {\n            const fn = args[0];\n            const f = args[1] === true ? fn() : fn;\n            let prev = api_1.SEMAPHORE, chunk;\n            return [\n                init,\n                (acc) => {\n                    if (chunk && chunk.length) {\n                        acc = reduce(acc, chunk);\n                        chunk = null;\n                    }\n                    return complete(acc);\n                },\n                (acc, x) => {\n                    const curr = f(x);\n                    if (prev === api_1.SEMAPHORE) {\n                        prev = curr;\n                        chunk = [x];\n                    }\n                    else if (curr === prev) {\n                        chunk.push(x);\n                    }\n                    else {\n                        chunk && (acc = reduce(acc, chunk));\n                        chunk = reduced_1.isReduced(acc) ? null : [x];\n                        prev = curr;\n                    }\n                    return acc;\n                }\n            ];\n        });\n}\nexports.partitionBy = partitionBy;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst iterator_1 = require(\"../iterator\");\nconst partition_by_1 = require(\"./partition-by\");\nfunction partitionOf(sizes, src) {\n    return src ?\n        iterator_1.iterator(partitionOf(sizes), src) :\n        partition_by_1.partitionBy(() => {\n            let i = 0, j = 0;\n            return () => {\n                if (i++ === sizes[j]) {\n                    i = 1;\n                    j = (j + 1) % sizes.length;\n                }\n                return j;\n            };\n        }, true);\n}\nexports.partitionOf = partitionOf;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst compare_1 = require(\"@thi.ng/compare\");\nconst comp_1 = require(\"../func/comp\");\nconst identity_1 = require(\"../func/identity\");\nconst iterator_1 = require(\"../iterator\");\nconst mapcat_1 = require(\"./mapcat\");\nconst partition_1 = require(\"./partition\");\nfunction partitionSort(...args) {\n    const iter = iterator_1.$iter(partitionSort, args, iterator_1.iterator);\n    if (iter) {\n        return iter;\n    }\n    const { key, compare } = Object.assign({ key: identity_1.identity, compare: compare_1.compare }, args[1]);\n    return comp_1.comp(partition_1.partition(args[0], true), mapcat_1.mapcat((window) => window.slice().sort((a, b) => compare(key(a), key(b)))));\n}\nexports.partitionSort = partitionSort;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst is_array_1 = require(\"@thi.ng/checks/is-array\");\nconst identity_1 = require(\"../func/identity\");\nconst iterator_1 = require(\"../iterator\");\nfunction partitionSync(...args) {\n    return iterator_1.$iter(partitionSync, args, iterator_1.iterator) ||\n        (([init, complete, reduce]) => {\n            let curr = {};\n            let first = true;\n            const currKeys = new Set();\n            const { key, mergeOnly, reset, all } = Object.assign({ key: identity_1.identity, mergeOnly: false, reset: true, all: true }, args[1]);\n            const ks = is_array_1.isArray(args[0]) ? new Set(args[0]) : args[0];\n            return [\n                init,\n                (acc) => {\n                    if ((reset && all && currKeys.size > 0) || (!reset && first)) {\n                        acc = reduce(acc, curr);\n                        curr = undefined;\n                        currKeys.clear();\n                        first = false;\n                    }\n                    return complete(acc);\n                },\n                (acc, x) => {\n                    const k = key(x);\n                    if (ks.has(k)) {\n                        curr[k] = x;\n                        currKeys.add(k);\n                        if (mergeOnly || currKeys.size >= ks.size) {\n                            acc = reduce(acc, curr);\n                            first = false;\n                            if (reset) {\n                                curr = {};\n                                currKeys.clear();\n                            }\n                            else {\n                                curr = Object.assign({}, curr);\n                            }\n                        }\n                    }\n                    return acc;\n                }\n            ];\n        });\n}\nexports.partitionSync = partitionSync;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst iterator_1 = require(\"../iterator\");\nconst map_1 = require(\"./map\");\nfunction pluck(key, src) {\n    return src ?\n        iterator_1.iterator1(pluck(key), src) :\n        map_1.map((x) => x[key]);\n}\nexports.pluck = pluck;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst compr_1 = require(\"../func/compr\");\nconst iterator_1 = require(\"../iterator\");\nfunction sample(prob, src) {\n    return src ?\n        iterator_1.iterator1(sample(prob), src) :\n        (rfn) => {\n            const r = rfn[2];\n            return compr_1.compR(rfn, (acc, x) => Math.random() < prob ? r(acc, x) : acc);\n        };\n}\nexports.sample = sample;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst iterator_1 = require(\"../iterator\");\nconst reduced_1 = require(\"../reduced\");\nfunction scan(...args) {\n    return (args.length > 2 && iterator_1.$iter(scan, args, iterator_1.iterator)) ||\n        (([inito, completeo, reduceo]) => {\n            const [initi, completei, reducei] = args[0];\n            let acc = args.length > 1 && args[1] != null ? args[1] : initi();\n            return [\n                inito,\n                (_acc) => {\n                    let a = completei(acc);\n                    if (a !== acc) {\n                        _acc = reduced_1.unreduced(reduceo(_acc, a));\n                    }\n                    acc = a;\n                    return completeo(_acc);\n                },\n                (_acc, x) => {\n                    acc = reducei(acc, x);\n                    if (reduced_1.isReduced(acc)) {\n                        return reduced_1.ensureReduced(reduceo(_acc, acc.deref()));\n                    }\n                    return reduceo(_acc, acc);\n                }\n            ];\n        });\n}\nexports.scan = scan;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst renamer_1 = require(\"./renamer\");\nfunction keySelector(keys) {\n    return renamer_1.renamer(keys.reduce((acc, x) => (acc[x] = x, acc), {}));\n}\nexports.keySelector = keySelector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst key_selector_1 = require(\"../func/key-selector\");\nconst iterator_1 = require(\"../iterator\");\nconst map_1 = require(\"./map\");\nfunction selectKeys(keys, src) {\n    return src ?\n        iterator_1.iterator1(selectKeys(keys), src) :\n        map_1.map(key_selector_1.keySelector(keys));\n}\nexports.selectKeys = selectKeys;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst map_1 = require(\"./map\");\n/**\n * Helper transducer. Applies given `fn` to each input value, presumably\n * for side effects. Discards function's result and yields original\n * inputs.\n *\n * @param fn side effect\n */\nfunction sideEffect(fn) {\n    return map_1.map((x) => (fn(x), x));\n}\nexports.sideEffect = sideEffect;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst compr_1 = require(\"../func/compr\");\nconst iterator_1 = require(\"../iterator\");\nfunction slidingWindow(...args) {\n    const iter = iterator_1.$iter(slidingWindow, args);\n    if (iter) {\n        return iter;\n    }\n    const size = args[0];\n    const partial = args[1] !== false;\n    return (rfn) => {\n        const reduce = rfn[2];\n        let buf = [];\n        return compr_1.compR(rfn, (acc, x) => {\n            buf.push(x);\n            if (partial || buf.length === size) {\n                acc = reduce(acc, buf);\n                buf = buf.slice(buf.length === size ? 1 : 0);\n            }\n            return acc;\n        });\n    };\n}\nexports.slidingWindow = slidingWindow;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction shuffleN(buf, n) {\n    const l = buf.length;\n    n = n < l ? n : l;\n    while (--n >= 0) {\n        const a = (Math.random() * l) | 0;\n        const b = (Math.random() * l) | 0;\n        const t = buf[a];\n        buf[a] = buf[b];\n        buf[b] = t;\n    }\n}\nexports.shuffleN = shuffleN;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst shuffle_1 = require(\"../func/shuffle\");\nconst iterator_1 = require(\"../iterator\");\nconst reduced_1 = require(\"../reduced\");\nfunction streamShuffle(...args) {\n    return iterator_1.$iter(streamShuffle, args, iterator_1.iterator) ||\n        (([init, complete, reduce]) => {\n            const n = args[0];\n            const maxSwaps = args[1] || n;\n            const buf = [];\n            return [\n                init,\n                (acc) => {\n                    while (buf.length && !reduced_1.isReduced(acc)) {\n                        shuffle_1.shuffleN(buf, maxSwaps);\n                        acc = reduce(acc, buf.shift());\n                    }\n                    acc = complete(acc);\n                    return acc;\n                },\n                (acc, x) => {\n                    buf.push(x);\n                    shuffle_1.shuffleN(buf, maxSwaps);\n                    if (buf.length === n) {\n                        acc = reduce(acc, buf.shift());\n                    }\n                    return acc;\n                }\n            ];\n        });\n}\nexports.streamShuffle = streamShuffle;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Returns the supposed index of `x` in pre-sorted array-like collection\n * `arr`. The `key` function first is used to obtain the actual sort\n * value of `x` and each array item. The `cmp` comparator is then used to\n * identify the index of `x`.\n *\n * @param arr\n * @param key\n * @param cmp\n * @param x\n * @returns index of `x`, else `-index` if item could not be found\n */\nfunction binarySearch(arr, key, cmp, x) {\n    const kx = key(x);\n    let low = 0;\n    let high = arr.length - 1;\n    while (low <= high) {\n        const mid = (low + high) >>> 1;\n        const c = cmp(key(arr[mid]), kx);\n        if (c < 0) {\n            low = mid + 1;\n        }\n        else if (c > 0) {\n            high = mid - 1;\n        }\n        else {\n            return mid;\n        }\n    }\n    return -low;\n}\nexports.binarySearch = binarySearch;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst compare_1 = require(\"@thi.ng/compare\");\nconst binary_search_1 = require(\"../func/binary-search\");\nconst identity_1 = require(\"../func/identity\");\nconst iterator_1 = require(\"../iterator\");\nconst reduced_1 = require(\"../reduced\");\nfunction streamSort(...args) {\n    const iter = iterator_1.$iter(streamSort, args, iterator_1.iterator);\n    if (iter) {\n        return iter;\n    }\n    const { key, compare } = Object.assign({ key: identity_1.identity, compare: compare_1.compare }, args[1]);\n    const n = args[0];\n    return ([init, complete, reduce]) => {\n        const buf = [];\n        return [\n            init,\n            (acc) => {\n                while (buf.length && !reduced_1.isReduced(acc)) {\n                    acc = reduce(acc, buf.shift());\n                }\n                return complete(acc);\n            },\n            (acc, x) => {\n                const idx = binary_search_1.binarySearch(buf, key, compare, x);\n                buf.splice(Math.abs(idx), 0, x);\n                if (buf.length === n) {\n                    acc = reduce(acc, buf.shift());\n                }\n                return acc;\n            }\n        ];\n    };\n}\nexports.streamSort = streamSort;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst comp_1 = require(\"../func/comp\");\nconst iterator_1 = require(\"../iterator\");\nconst map_keys_1 = require(\"./map-keys\");\nconst partition_1 = require(\"./partition\");\nconst partition_of_1 = require(\"./partition-of\");\nconst rename_1 = require(\"./rename\");\nfunction struct(fields, src) {\n    return src ?\n        iterator_1.iterator(struct(fields), src) :\n        comp_1.comp(partition_of_1.partitionOf(fields.map((f) => f[1])), partition_1.partition(fields.length), rename_1.rename(fields.map((f) => f[0])), map_keys_1.mapKeys(fields.reduce((acc, f) => (f[2] ? (acc[f[0]] = f[2], acc) : acc), {}), false));\n}\nexports.struct = struct;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Returns optimized function to select, repeat, reshape and / or\n * reorder array/object values in the specified index order. The\n * returned function can be used directly or as mapping function for the\n * `map` transducer. Fast paths for up to 8 indices are provided, before\n * a loop based approach is used.\n *\n * ```\n * swizzler([0, 0, 0])([1, 2, 3, 4])    // [ 1, 1, 1 ]\n * swizzler([1, 1, 3, 3])([1, 2, 3, 4]) // [ 2, 2, 4, 4 ]\n * swizzler([2, 0])([1, 2, 3])          // [ 3, 1 ]\n * ```\n *\n * Even though, objects can be used as input to the generated function,\n * the returned values will always be in array form.\n *\n * ```\n * swizzler([\"a\", \"c\", \"b\"])({a: 1, b: 2, c: 3}) // [ 1, 3, 2 ]\n * ```\n *\n * @param order indices\n */\nfunction swizzler(order) {\n    const [a, b, c, d, e, f, g, h] = order;\n    switch (order.length) {\n        case 0:\n            return () => [];\n        case 1:\n            return (x) => [x[a]];\n        case 2:\n            return (x) => [x[a], x[b]];\n        case 3:\n            return (x) => [x[a], x[b], x[c]];\n        case 4:\n            return (x) => [x[a], x[b], x[c], x[d]];\n        case 5:\n            return (x) => [x[a], x[b], x[c], x[d], x[e]];\n        case 6:\n            return (x) => [x[a], x[b], x[c], x[d], x[e], x[f]];\n        case 7:\n            return (x) => [x[a], x[b], x[c], x[d], x[e], x[f], x[g]];\n        case 8:\n            return (x) => [x[a], x[b], x[c], x[d], x[e], x[f], x[g], x[h]];\n        default:\n            return (x) => {\n                const res = [];\n                for (let i = order.length - 1; i >= 0; i--) {\n                    res[i] = x[order[i]];\n                }\n                return res;\n            };\n    }\n}\nexports.swizzler = swizzler;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst swizzler_1 = require(\"../func/swizzler\");\nconst iterator_1 = require(\"../iterator\");\nconst map_1 = require(\"./map\");\nfunction swizzle(order, src) {\n    return src ?\n        iterator_1.iterator1(swizzle(order), src) :\n        map_1.map(swizzler_1.swizzler(order));\n}\nexports.swizzle = swizzle;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst iterator_1 = require(\"../iterator\");\nconst throttle_1 = require(\"./throttle\");\nfunction takeNth(n, src) {\n    if (src) {\n        return iterator_1.iterator1(takeNth(n), src);\n    }\n    n = Math.max(0, n - 1);\n    return throttle_1.throttle(() => {\n        let skip = 0;\n        return () => (skip === 0 ? (skip = n, true) : (skip--, false));\n    });\n}\nexports.takeNth = takeNth;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst compr_1 = require(\"../func/compr\");\nconst iterator_1 = require(\"../iterator\");\nconst reduced_1 = require(\"../reduced\");\nfunction takeWhile(...args) {\n    return iterator_1.$iter(takeWhile, args) ||\n        ((rfn) => {\n            const r = rfn[2];\n            const pred = args[0];\n            let ok = true;\n            return compr_1.compR(rfn, (acc, x) => (ok = ok && pred(x)) ? r(acc, x) : reduced_1.reduced(acc));\n        });\n}\nexports.takeWhile = takeWhile;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst iterator_1 = require(\"../iterator\");\nconst throttle_1 = require(\"./throttle\");\nfunction throttleTime(delay, src) {\n    return src ?\n        iterator_1.iterator1(throttleTime(delay), src) :\n        throttle_1.throttle(() => {\n            let last = 0;\n            return () => {\n                const t = Date.now();\n                return t - last >= delay ? (last = t, true) : false;\n            };\n        });\n}\nexports.throttleTime = throttleTime;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst side_effect_1 = require(\"./side-effect\");\nfunction trace(prefix = \"\") {\n    return side_effect_1.sideEffect((x) => console.log(prefix, x));\n}\nexports.trace = trace;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst compr_1 = require(\"../func/compr\");\nconst iterator_1 = require(\"../iterator\");\nconst reduced_1 = require(\"../reduced\");\nfunction utf8Decode(src) {\n    return src ?\n        [...iterator_1.iterator1(utf8Decode(), src)].join(\"\") :\n        (rfn) => {\n            const r = rfn[2];\n            let state = 0, u0, u1, u2, u3, u4;\n            return compr_1.compR(rfn, (acc, x) => {\n                switch (state) {\n                    case 0:\n                    default:\n                        if (x < 0x80) {\n                            return r(acc, String.fromCharCode(x));\n                        }\n                        u0 = x;\n                        state = 1;\n                        break;\n                    case 1:\n                        u1 = x & 0x3f;\n                        if ((u0 & 0xe0) === 0xc0) {\n                            state = 0;\n                            return r(acc, String.fromCharCode(((u0 & 0x1f) << 6) | u1));\n                        }\n                        state = 2;\n                        break;\n                    case 2:\n                        u2 = x & 0x3f;\n                        if ((u0 & 0xf0) === 0xe0) {\n                            state = 0;\n                            return r(acc, String.fromCharCode(((u0 & 0x0f) << 12) | (u1 << 6) | u2));\n                        }\n                        state = 3;\n                        break;\n                    case 3:\n                        u3 = x & 0x3f;\n                        if ((u0 & 0xf8) === 0xf0) {\n                            state = 0;\n                            return r(acc, codePoint(((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | u3));\n                        }\n                        state = 4;\n                        break;\n                    case 4:\n                        u4 = x & 0x3f;\n                        if ((u0 & 0xfc) === 0xf8) {\n                            state = 0;\n                            return r(acc, codePoint(((u0 & 3) << 24) | (u1 << 18) | (u2 << 12) | (u3 << 6) | u4));\n                        }\n                        state = 5;\n                        break;\n                    case 5:\n                        state = 0;\n                        return r(acc, codePoint(((u0 & 1) << 30) | (u1 << 24) | (u2 << 18) | (u3 << 12) | (u4 << 6) | (x & 0x3f)));\n                }\n                return acc;\n            });\n        };\n}\nexports.utf8Decode = utf8Decode;\nfunction utf8Encode(src) {\n    return src != null ?\n        iterator_1.iterator(utf8Encode(), src) :\n        (rfn) => {\n            const r = rfn[2];\n            return compr_1.compR(rfn, (acc, x) => {\n                let u = x.charCodeAt(0), buf;\n                if (u >= 0xd800 && u <= 0xdfff) {\n                    u = 0x10000 + ((u & 0x3ff) << 10) | (x.charCodeAt(1) & 0x3ff);\n                }\n                if (u < 0x80) {\n                    return r(acc, u);\n                }\n                else if (u < 0x800) {\n                    buf = [\n                        0xc0 | (u >> 6),\n                        0x80 | (u & 0x3f)\n                    ];\n                }\n                else if (u < 0x10000) {\n                    buf = [\n                        0xe0 | (u >> 12),\n                        0x80 | ((u >> 6) & 0x3f),\n                        0x80 | (u & 0x3f)\n                    ];\n                }\n                else if (u < 0x200000) {\n                    buf = [\n                        0xf0 | (u >> 18),\n                        0x80 | ((u >> 12) & 0x3f),\n                        0x80 | ((u >> 6) & 0x3f),\n                        0x80 | (u & 0x3f)\n                    ];\n                }\n                else if (u < 0x4000000) {\n                    buf = [\n                        0xf8 | (u >> 24),\n                        0x80 | ((u >> 18) & 0x3f),\n                        0x80 | ((u >> 12) & 0x3f),\n                        0x80 | ((u >> 6) & 0x3f),\n                        0x80 | (u & 0x3f)\n                    ];\n                }\n                else {\n                    buf = [\n                        0xfc | (u >> 30),\n                        0x80 | ((u >> 24) & 0x3f),\n                        0x80 | ((u >> 18) & 0x3f),\n                        0x80 | ((u >> 12) & 0x3f),\n                        0x80 | ((u >> 6) & 0x3f),\n                        0x80 | (u & 0x3f)\n                    ];\n                }\n                for (let i = 0, n = buf.length; i < n; i++) {\n                    acc = r(acc, buf[i]);\n                    if (reduced_1.isReduced(acc)) {\n                        break;\n                    }\n                }\n                return acc;\n            });\n        };\n}\nexports.utf8Encode = utf8Encode;\nconst codePoint = (x) => x < 0x10000 ?\n    String.fromCharCode(x) :\n    (x -= 0x10000, String.fromCharCode(0xd800 | (x >> 10), 0xdc00 | (x & 0x3ff)));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst iterator_1 = require(\"../iterator\");\nconst partition_by_1 = require(\"./partition-by\");\nfunction wordWrap(...args) {\n    const iter = iterator_1.$iter(wordWrap, args, iterator_1.iterator);\n    if (iter) {\n        return iter;\n    }\n    const lineLength = args[0];\n    const { delim, always } = Object.assign({ delim: 1, always: true }, args[1]);\n    return partition_by_1.partitionBy(() => {\n        let n = 0;\n        let flag = false;\n        return (w) => {\n            n += w.length + delim;\n            if (n > lineLength + (always ? 0 : delim)) {\n                flag = !flag;\n                n = w.length + delim;\n            }\n            return flag;\n        };\n    }, true);\n}\nexports.wordWrap = wordWrap;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction constantly(x) {\n    return () => x;\n}\nexports.constantly = constantly;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar is_even_1 = require(\"@thi.ng/checks/is-even\");\nexports.even = is_even_1.isEven;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst radix_1 = require(\"@thi.ng/strings/radix\");\n/**\n * @deprecated use thi.ng/strings `radix()` instead\n *\n * @param digits\n * @param prefix\n */\nexports.hex = (digits = 2, prefix = \"\") => radix_1.radix(16, digits, prefix);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst reduced_1 = require(\"../reduced\");\nfunction juxtR(...rs) {\n    let [a, b, c] = rs;\n    const n = rs.length;\n    switch (n) {\n        case 1: {\n            const r = a[2];\n            return [\n                () => [a[0]()],\n                (acc) => [a[1](acc[0])],\n                (acc, x) => {\n                    const aa1 = r(acc[0], x);\n                    if (reduced_1.isReduced(aa1)) {\n                        return reduced_1.reduced([reduced_1.unreduced(aa1)]);\n                    }\n                    return [aa1];\n                }\n            ];\n        }\n        case 2: {\n            const ra = a[2];\n            const rb = b[2];\n            return [\n                () => [a[0](), b[0]()],\n                (acc) => [a[1](acc[0]), b[1](acc[1])],\n                (acc, x) => {\n                    const aa1 = ra(acc[0], x);\n                    const aa2 = rb(acc[1], x);\n                    if (reduced_1.isReduced(aa1) || reduced_1.isReduced(aa2)) {\n                        return reduced_1.reduced([reduced_1.unreduced(aa1), reduced_1.unreduced(aa2)]);\n                    }\n                    return [aa1, aa2];\n                }\n            ];\n        }\n        case 3: {\n            const ra = a[2];\n            const rb = b[2];\n            const rc = c[2];\n            return [\n                () => [a[0](), b[0](), c[0]()],\n                (acc) => [a[1](acc[0]), b[1](acc[1]), c[1](acc[2])],\n                (acc, x) => {\n                    const aa1 = ra(acc[0], x);\n                    const aa2 = rb(acc[1], x);\n                    const aa3 = rc(acc[2], x);\n                    if (reduced_1.isReduced(aa1) || reduced_1.isReduced(aa2) || reduced_1.isReduced(aa3)) {\n                        return reduced_1.reduced([reduced_1.unreduced(aa1), reduced_1.unreduced(aa2), reduced_1.unreduced(aa3)]);\n                    }\n                    return [aa1, aa2, aa3];\n                }\n            ];\n        }\n        default:\n            return [\n                () => rs.map((r) => r[0]()),\n                (acc) => rs.map((r, i) => r[1](acc[i])),\n                (acc, x) => {\n                    let done = false;\n                    const res = [];\n                    for (let i = 0; i < n; i++) {\n                        let a = rs[i][2](acc[i], x);\n                        if (reduced_1.isReduced(a)) {\n                            done = true;\n                            a = reduced_1.unreduced(a);\n                        }\n                        res[i] = a;\n                    }\n                    return done ? reduced_1.reduced(res) : res;\n                }\n            ];\n    }\n}\nexports.juxtR = juxtR;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Returns function accepting a single index arg used to\n * lookup value in given array. No bounds checks are done.\n *\n * ```\n * [...map(lookup1d([10, 20, 30]), [2,0,1])]\n * // [ 30, 10, 20 ]\n * ```\n *\n * @param src source data\n */\nfunction lookup1d(src) {\n    return (i) => src[i];\n}\nexports.lookup1d = lookup1d;\n/**\n * Returns function accepting a single `[x, y]` index tuple,\n * used to lookup value in given array. Useful for transducers\n * processing 2D data. **Note**: The source data MUST be in\n * row major linearized format, i.e. 1D representation of 2D data\n * (pixel buffer). No bounds checks are done.\n *\n * ```\n * [...map(lookup2d([...range(9)], 3), range2d(2, -1, 0, 3))]\n * // [ 2, 1, 0, 5, 4, 3, 8, 7, 6 ]\n * ```\n *\n * @param src source data\n * @param width number of items along X (columns)\n */\nfunction lookup2d(src, width) {\n    return (i) => src[i[0] + i[1] * width];\n}\nexports.lookup2d = lookup2d;\n/**\n * Same as `lookup2d()`, but for 3D data. The index ordering of the\n * source data MUST be in Z, Y, X order (i.e. a stack of row major 2D slices).\n * No bounds checks are done.\n *\n * @param src source data\n * @param width number of items along X (columns)\n * @param height number of items along Y (rows)\n */\nfunction lookup3d(src, width, height) {\n    const stridez = width * height;\n    return (i) => src[i[0] + i[1] * width + i[2] * stridez];\n}\nexports.lookup3d = lookup3d;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar is_odd_1 = require(\"@thi.ng/checks/is-odd\");\nexports.odd = is_odd_1.isOdd;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Returns last element of given array.\n *\n * @param x\n */\nfunction peek(x) {\n    return x[x.length - 1];\n}\nexports.peek = peek;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction* repeat(x, n = Infinity) {\n    while (n-- > 0) {\n        yield x;\n    }\n}\nexports.repeat = repeat;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst repeat_1 = require(\"../iter/repeat\");\nconst tuples_1 = require(\"../iter/tuples\");\n/**\n * If `weights` are given, it must be the same size as `choices`. If omitted,\n * each choice will have same probability.\n *\n * https://www.electricmonk.nl/log/2009/12/23/weighted-random-distribution/\n *\n * @param choices\n * @param weights\n */\nfunction weightedRandom(choices, weights) {\n    const n = choices.length;\n    const opts = [...tuples_1.tuples(choices, weights || repeat_1.repeat(1))].sort((a, b) => b[1] - a[1]);\n    let total = 0, i, r, sum;\n    for (i = 0; i < n; i++) {\n        total += weights[i];\n    }\n    return () => {\n        r = Math.random() * total;\n        sum = total;\n        for (i = 0; i < n; i++) {\n            sum -= opts[i][1];\n            if (sum <= r) {\n                return opts[i][0];\n            }\n        }\n    };\n}\nexports.weightedRandom = weightedRandom;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction* repeatedly(fn, n = Infinity) {\n    while (n-- > 0) {\n        yield fn();\n    }\n}\nexports.repeatedly = repeatedly;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst weighted_random_1 = require(\"../func/weighted-random\");\nconst repeatedly_1 = require(\"./repeatedly\");\n/**\n * Returns an infinite iterator of random choices and their (optional)\n * weights. If `weights` is given, it must have at least the same size\n * as `choices`. If omitted, each choice will have same probability.\n *\n * See: `weightedRandom()`\n *\n * ```\n * transduce(take(1000), frequencies(), choices(\"abcd\", [1, 0.5, 0.25, 0.125]))\n * // Map { 'c' => 132, 'a' => 545, 'b' => 251, 'd' => 72 }\n * ```\n *\n * @param choices\n * @param weights\n */\nfunction choices(choices, weights) {\n    return repeatedly_1.repeatedly(weights ?\n        weighted_random_1.weightedRandom(choices, weights) :\n        () => choices[(Math.random() * choices.length) | 0]);\n}\nexports.choices = choices;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst choices_1 = require(\"../iter/choices\");\nconst take_1 = require(\"../xform/take\");\n/**\n * Generates and returns a random string of `len` characters (default\n * 4), plus optional given `prefix` and using only provided `syms`\n * characters (default lowercase a-z).\n *\n * ```\n * randomID()\n * \"qgdt\"\n *\n * randomID(8, \"id-\", \"0123456789ABCDEF\")\n * \"id-94EF6E1A\"\n * ```\n *\n * @param len\n * @param prefix\n * @param syms\n */\nexports.randomID = (len = 4, prefix = \"\", syms = \"abcdefghijklmnopqrstuvwxyz\") => [prefix, ...take_1.take(len, choices_1.choices(syms))].join(\"\");\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Helper function to (re)provide given iterable in iterator form.\n *\n * @param src\n */\nfunction* asIterable(src) {\n    yield* src;\n}\nexports.asIterable = asIterable;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ensure_iterable_1 = require(\"../func/ensure-iterable\");\n/**\n * Yields iterator producing concatenation of given iterables.\n * Undefined & null inputs are silently ignored, however any\n * such values produced or contained in an input will remain.\n *\n * ```\n * [...concat([1, 2, 3], null, [4, 5])]\n * // [ 1, 2, 3, 4, 5 ]\n *\n * [...concat([1, 2, 3, undefined], null, [4, 5])]\n * // [ 1, 2, 3, undefined, 4, 5 ]\n * ```\n *\n * @param xs\n */\nfunction* concat(...xs) {\n    for (let x of xs) {\n        x != null && (yield* ensure_iterable_1.ensureIterable(x));\n    }\n}\nexports.concat = concat;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction* cycle(input) {\n    let cache = [];\n    for (let i of input) {\n        cache.push(i);\n        yield i;\n    }\n    if (cache.length > 0) {\n        while (true) {\n            yield* cache;\n        }\n    }\n}\nexports.cycle = cycle;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction* iterate(fn, seed) {\n    while (true) {\n        yield seed;\n        seed = fn(seed);\n    }\n}\nexports.iterate = iterate;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction* keys(x) {\n    for (let k in x) {\n        if (x.hasOwnProperty(k)) {\n            yield k;\n        }\n    }\n}\nexports.keys = keys;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Yields sequence of `n+1` monotonically increasing numbers in the\n * closed interval (0.0 .. 1.0). If `n <= 0`, yields nothing.\n *\n * ```\n * [...normRange(4)]\n * // [0, 0.25, 0.5, 0.75, 1.0]\n * ```\n *\n * @param n number of steps\n * @param inclLast include last value (i.e. `1.0`)\n */\nfunction* normRange(n, inclLast = true) {\n    if (n > 0) {\n        for (let i = 0, m = inclLast ? n + 1 : n; i < m; i++) {\n            yield i / n;\n        }\n    }\n}\nexports.normRange = normRange;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction* pairs(x) {\n    for (let k in x) {\n        if (x.hasOwnProperty(k)) {\n            yield [k, x[k]];\n        }\n    }\n}\nexports.pairs = pairs;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst illegal_arguments_1 = require(\"@thi.ng/errors/illegal-arguments\");\nconst ensure_array_1 = require(\"../func/ensure-array\");\nconst range_1 = require(\"./range\");\nfunction* permutations(...src) {\n    const n = src.length - 1;\n    if (n < 0) {\n        return;\n    }\n    const step = new Array(n + 1).fill(0);\n    const realized = src.map(ensure_array_1.ensureArrayLike);\n    const total = realized.reduce((acc, x) => acc * x.length, 1);\n    for (let i = 0; i < total; i++) {\n        const tuple = [];\n        for (let j = n; j >= 0; j--) {\n            const r = realized[j];\n            let s = step[j];\n            if (s === r.length) {\n                step[j] = s = 0;\n                j > 0 && (step[j - 1]++);\n            }\n            tuple[j] = r[s];\n        }\n        step[n]++;\n        yield tuple;\n    }\n}\nexports.permutations = permutations;\n/**\n * Iterator yielding the Cartesian Product for `n` items of `m` values\n * each. If `m` is not given, defaults to value of `n`. The range of `m`\n * is `0..m-1`. The optional `offsets` array can be used to define start\n * values for each dimension.\n *\n * ```\n * [...permutationsN(2)]\n * // [ [0, 0], [0, 1], [1, 0], [1, 1] ]\n *\n * [...permutationsN(2, 3)]\n * // [ [0, 0], [0, 1], [0, 2],\n * //   [1, 0], [1, 1], [1, 2],\n * //   [2, 0], [2, 1], [2, 2] ]\n *\n * [...permutationsN(2, 3, [10, 20])]\n * // [ [ 10, 20 ], [ 10, 21 ], [ 11, 20 ], [ 11, 21 ] ]\n * ```\n *\n * @param n\n * @param m\n * @param offsets\n */\nfunction permutationsN(n, m = n, offsets) {\n    if (offsets && offsets.length < n) {\n        illegal_arguments_1.illegalArgs(`insufficient offsets, got ${offsets.length}, needed ${n}`);\n    }\n    const seqs = [];\n    while (--n >= 0) {\n        const o = offsets ? offsets[n] : 0;\n        seqs[n] = range_1.range(o, o + m);\n    }\n    return permutations.apply(null, seqs);\n}\nexports.permutationsN = permutationsN;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst illegal_arity_1 = require(\"@thi.ng/errors/illegal-arity\");\nconst range_1 = require(\"./range\");\nfunction* range3d(...args) {\n    let fromX, toX, fromY, toY, fromZ, toZ, stepX, stepY, stepZ;\n    switch (args.length) {\n        case 9:\n            stepX = args[6];\n            stepY = args[7];\n            stepZ = args[8];\n        case 6:\n            [fromX, toX, fromY, toY, fromZ, toZ] = args;\n            break;\n        case 3:\n            [toX, toY, toZ] = args;\n            fromX = fromY = fromZ = 0;\n            break;\n        default:\n            illegal_arity_1.illegalArity(args.length);\n    }\n    const rx = range_1.range(fromX, toX, stepX);\n    const ry = range_1.range(fromY, toY, stepY);\n    for (let z of range_1.range(fromZ, toZ, stepZ)) {\n        for (let y of ry) {\n            for (let x of rx) {\n                yield [x, y, z];\n            }\n        }\n    }\n}\nexports.range3d = range3d;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ensure_array_1 = require(\"../func/ensure-array\");\n/**\n * Yields iterator which consumes input and yield its values in reverse\n * order. Important: Input MUST be finite.\n *\n * ```\n * [...tx.reverse(\"hello world\")]\n * // [ \"d\", \"l\", \"r\", \"o\", \"w\", \" \", \"o\", \"l\", \"l\", \"e\", \"h\" ]\n * ```\n *\n * @param input\n */\nfunction* reverse(input) {\n    const _input = ensure_array_1.ensureArray(input);\n    let n = _input.length;\n    while (--n >= 0) {\n        yield _input[n];\n    }\n}\nexports.reverse = reverse;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction* vals(x) {\n    for (let k in x) {\n        if (x.hasOwnProperty(k)) {\n            yield x[k];\n        }\n    }\n}\nexports.vals = vals;\n","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./iterator\"));\n__export(require(\"./reduce\"));\n__export(require(\"./reduced\"));\n__export(require(\"./run\"));\n__export(require(\"./step\"));\n__export(require(\"./transduce\"));\n__export(require(\"./rfn/add\"));\n__export(require(\"./rfn/assoc-map\"));\n__export(require(\"./rfn/assoc-obj\"));\n__export(require(\"./rfn/conj\"));\n__export(require(\"./rfn/count\"));\n__export(require(\"./rfn/div\"));\n__export(require(\"./rfn/every\"));\n__export(require(\"./rfn/fill\"));\n__export(require(\"./rfn/frequencies\"));\n__export(require(\"./rfn/group-binary\"));\n__export(require(\"./rfn/group-by-map\"));\n__export(require(\"./rfn/group-by-obj\"));\n__export(require(\"./rfn/last\"));\n__export(require(\"./rfn/max-compare\"));\n__export(require(\"./rfn/max\"));\n__export(require(\"./rfn/mean\"));\n__export(require(\"./rfn/min-compare\"));\n__export(require(\"./rfn/min\"));\n__export(require(\"./rfn/mul\"));\n__export(require(\"./rfn/push-copy\"));\n__export(require(\"./rfn/push\"));\n__export(require(\"./rfn/reductions\"));\n__export(require(\"./rfn/some\"));\n__export(require(\"./rfn/str\"));\n__export(require(\"./rfn/sub\"));\n__export(require(\"./xform/base64\"));\n__export(require(\"./xform/benchmark\"));\n__export(require(\"./xform/bits\"));\n__export(require(\"./xform/cat\"));\n__export(require(\"./xform/convolve\"));\n__export(require(\"./xform/dedupe\"));\n__export(require(\"./xform/delayed\"));\n__export(require(\"./xform/distinct\"));\n__export(require(\"./xform/drop-nth\"));\n__export(require(\"./xform/drop-while\"));\n__export(require(\"./xform/drop\"));\n__export(require(\"./xform/duplicate\"));\n__export(require(\"./xform/filter\"));\n__export(require(\"./xform/filter-fuzzy\"));\n__export(require(\"./xform/flatten-with\"));\n__export(require(\"./xform/flatten\"));\n__export(require(\"./xform/hex-dump\"));\n__export(require(\"./xform/indexed\"));\n__export(require(\"./xform/interleave\"));\n__export(require(\"./xform/interpose\"));\n__export(require(\"./xform/keep\"));\n__export(require(\"./xform/labeled\"));\n__export(require(\"./xform/map-deep\"));\n__export(require(\"./xform/map-indexed\"));\n__export(require(\"./xform/map-keys\"));\n__export(require(\"./xform/map-nth\"));\n__export(require(\"./xform/map-vals\"));\n__export(require(\"./xform/map\"));\n__export(require(\"./xform/mapcat\"));\n__export(require(\"./xform/match-first\"));\n__export(require(\"./xform/match-last\"));\n__export(require(\"./xform/moving-average\"));\n__export(require(\"./xform/moving-median\"));\n__export(require(\"./xform/multiplex\"));\n__export(require(\"./xform/multiplex-obj\"));\n__export(require(\"./xform/noop\"));\n__export(require(\"./xform/pad-last\"));\n__export(require(\"./xform/page\"));\n__export(require(\"./xform/partition-bits\"));\n__export(require(\"./xform/partition-by\"));\n__export(require(\"./xform/partition-of\"));\n__export(require(\"./xform/partition-sort\"));\n__export(require(\"./xform/partition-sync\"));\n__export(require(\"./xform/partition\"));\n__export(require(\"./xform/pluck\"));\n__export(require(\"./xform/rename\"));\n__export(require(\"./xform/sample\"));\n__export(require(\"./xform/scan\"));\n__export(require(\"./xform/select-keys\"));\n__export(require(\"./xform/side-effect\"));\n__export(require(\"./xform/sliding-window\"));\n__export(require(\"./xform/stream-shuffle\"));\n__export(require(\"./xform/stream-sort\"));\n__export(require(\"./xform/struct\"));\n__export(require(\"./xform/swizzle\"));\n__export(require(\"./xform/take-nth\"));\n__export(require(\"./xform/take-last\"));\n__export(require(\"./xform/take-while\"));\n__export(require(\"./xform/take\"));\n__export(require(\"./xform/throttle\"));\n__export(require(\"./xform/throttle-time\"));\n__export(require(\"./xform/trace\"));\n__export(require(\"./xform/utf8\"));\n__export(require(\"./xform/word-wrap\"));\n__export(require(\"./func/binary-search\"));\n__export(require(\"./func/comp\"));\n__export(require(\"./func/compr\"));\n__export(require(\"./func/constantly\"));\n__export(require(\"./func/deep-transform\"));\n__export(require(\"./func/delay\"));\n__export(require(\"./func/ensure-array\"));\n__export(require(\"./func/ensure-iterable\"));\n__export(require(\"./func/even\"));\n__export(require(\"./func/fuzzy-match\"));\n__export(require(\"./func/hex\"));\n__export(require(\"./func/identity\"));\n__export(require(\"./func/juxt\"));\n__export(require(\"./func/juxtr\"));\n__export(require(\"./func/key-selector\"));\n__export(require(\"./func/lookup\"));\n__export(require(\"./func/odd\"));\n__export(require(\"./func/peek\"));\n__export(require(\"./func/random-id\"));\n__export(require(\"./func/renamer\"));\n__export(require(\"./func/swizzler\"));\n__export(require(\"./func/weighted-random\"));\n__export(require(\"./iter/as-iterable\"));\n__export(require(\"./iter/choices\"));\n__export(require(\"./iter/concat\"));\n__export(require(\"./iter/cycle\"));\n__export(require(\"./iter/iterate\"));\n__export(require(\"./iter/keys\"));\n__export(require(\"./iter/norm-range\"));\n__export(require(\"./iter/pairs\"));\n__export(require(\"./iter/permutations\"));\n__export(require(\"./iter/range\"));\n__export(require(\"./iter/range2d\"));\n__export(require(\"./iter/range3d\"));\n__export(require(\"./iter/repeat\"));\n__export(require(\"./iter/repeatedly\"));\n__export(require(\"./iter/reverse\"));\n__export(require(\"./iter/tuples\"));\n__export(require(\"./iter/vals\"));\n__export(require(\"./iter/wrap\"));\n","// import * as tx from '@thi.ng/transducers'\nimport earcut from 'earcut'\nimport { Vec3, Vec2 } from '@tstackgl/types'\nimport { getCentroid } from '../get-centroid'\nimport { polygonToSegments } from '../../edge'\nimport { scaleAroundCenter3 } from '../pivot'\nimport {\n  mapcat,\n  map,\n  tuples,\n  partition,\n  wrap,\n  concat,\n  repeat,\n  take,\n  takeLast,\n  range,\n} from '@thi.ng/transducers'\n\nfunction triangulate(vertices: ArrayLike<number>, holes: ArrayLike<number>, dimensions = 2) {\n  return earcut(vertices, holes, dimensions)\n}\n\nconst identity = (x: Vec3[]) => x\n\nexport function getSideCells(\n  segmentsTopCells: IterableIterator<[number, number]>,\n  segmentsBottomCells: IterableIterator<[number, number]>,\n) {\n  return [\n    ...mapcat(\n      identity,\n      map(\n        ([segment1, segment2]) =>\n          [\n            [segment2[1], segment2[0], segment1[0]],\n            [segment2[1], segment1[0], segment1[1]],\n          ] as Vec3[],\n        tuples(segmentsTopCells, segmentsBottomCells),\n      ),\n    ),\n  ]\n}\n\nexport function extrude(\n  inputPolygons: Array<Array<Vec2>>,\n  opts = {\n    depthTop: 2,\n    depthBottom: -1,\n    bevelTop: 0.2,\n    bevelBottom: 0.9,\n  },\n) {\n  const newPolygon = inputPolygons\n  const hasHoles = newPolygon.length > 1\n\n  const { vertices, holes, dimensions } = earcut.flatten(newPolygon)\n\n  if (dimensions !== 2) {\n    throw new Error('Only 2D polygon points are supported')\n  }\n\n  // convertToClockwise(vertices, holes) // TODO: does not seems to work well, actually\n  const indices = triangulate(vertices, holes, dimensions)\n\n  const { depthTop, depthBottom, bevelTop, bevelBottom } = opts\n\n  const center = getCentroid(inputPolygons[0])\n  const centers: Vec3[] = [[...center, depthTop] as Vec3, [...center, depthBottom] as Vec3]\n\n  // positions is an array of the faces extruded:\n  // once with z = depthTop, once with z = depthBottom\n  const nPos = vertices.length\n  const xy = partition(2, wrap(vertices, nPos, false))\n  const offsetsDepth = concat(repeat(depthTop, nPos / 2), repeat(depthBottom, nPos / 2))\n  const positions: Vec3[] = [...map(([[x, y], z]) => [x, y, z] as Vec3, tuples(xy, offsetsDepth))]\n\n  // TODO: bevel should be done on 2d polygon actually, and triangulate twice for bottom and top, shit!\n  // apply bevelTop to top external polygon and bevelBottom to bottom external polygon\n  for (let i = 0; i < inputPolygons[0].length; i++) {\n    positions[i] = scaleAroundCenter3(positions[i], positions[i], centers[0], bevelTop)\n  }\n  for (let i = positions.length / 2; i < positions.length / 2 + inputPolygons[0].length; i++) {\n    positions[i] = scaleAroundCenter3(positions[i], positions[i], centers[1], bevelBottom)\n  }\n\n  const nCell = indices.length / 3\n  const facesTop = [...partition(3, indices)]\n  // notice that for normals directions the bottom face index has to be reversed: that's why `.slice().reverse()`\n  const facesBottom = map(face => face.slice().reverse(), facesTop)\n  const facesTopBottom = concat(facesTop, facesBottom)\n  const offsetsIndex = concat(repeat(0, nCell), repeat(nPos / 2, nCell))\n  const cells: Vec3[] = [\n    ...map(([face, n]) => face.map(f => f + n) as Vec3, tuples(facesTopBottom, offsetsIndex)),\n  ]\n\n  let sideCells: Vec3[] = []\n  if (!hasHoles) {\n    const len = inputPolygons[0].length * 2\n    const flatCells = [...range(len)]\n    const segmentsTopCells = polygonToSegments(take(len / 2, flatCells))\n    const segmentsBottomCells = polygonToSegments(takeLast(len / 2, flatCells))\n\n    sideCells = getSideCells(segmentsTopCells, segmentsBottomCells)\n  } else {\n    const polygonsIdx = [\n      range(0, inputPolygons[0].length), //top\n      range(\n        positions.length / 2,\n        positions.length / 2 + inputPolygons[0].length,\n      ), // bottom\n    ]\n\n    const segmentsTopCells = polygonToSegments(polygonsIdx[0])\n    const segmentsBottomCells = polygonToSegments(polygonsIdx[1])\n    sideCells = getSideCells(segmentsTopCells, segmentsBottomCells)\n\n    // TODO: refactor with transducers\n    let cursor = inputPolygons[0].length\n    const holesIdx = inputPolygons.slice(1).map(hole => {\n      const ret = [\n        range(cursor, cursor + hole.length), //top\n        range(\n          positions.length / 2 + cursor,\n          positions.length / 2 + cursor + hole.length,\n        ), // bottom\n      ]\n      cursor += hole.length\n      return ret\n    })\n\n    const holesSideCells = holesIdx.reduce((acc: Vec3[], holeIdx) => {\n      const segmentsTopCells = polygonToSegments(holeIdx[0])\n      const segmentsBottomCells = polygonToSegments(holeIdx[1])\n      const holeSideCells = getSideCells(segmentsTopCells, segmentsBottomCells)\n      acc.push(...holeSideCells)\n      return acc\n    }, [])\n\n    sideCells.push(...holesSideCells)\n  }\n\n  cells.push(...sideCells)\n\n  return {\n    positions,\n    cells: cells,\n  }\n}\n","import { Vec2 } from '@tstackgl/types'\nimport vec2 from 'gl-vec2'\n\nexport function angleBetweenSegments(v1: [Vec2, Vec2], v2: [Vec2, Vec2]) {\n  const dir1: Vec2 = vec2.set(vec2.create(), v1[1][0] - v1[0][0], v1[1][1] - v1[0][1])\n  vec2.normalize(dir1, dir1)\n  const dir2: Vec2 = vec2.set(vec2.create(), v2[1][0] - v2[0][0], v2[1][1] - v2[0][1])\n  vec2.normalize(dir2, dir2)\n  return Math.acos(vec2.dot(dir1, dir2))\n}\n\nexport function angleBetween(dir1: Vec2, dir2: Vec2) {\n  return Math.acos(vec2.dot(dir1, dir2))\n}\n\nexport function angleBetweenPoints(p1: Vec2, p2: Vec2) {\n  return Math.atan2(p2[1] - p1[1], p2[0] - p1[0])\n}\n","import { Vec2 } from '@tstackgl/types'\nimport * as tr from '@thi.ng/transducers'\n\nexport function pointInCircle(t: number, radius: number, center: Vec2 = [0, 0]) {\n  return [Math.cos(t) * radius + center[0], Math.sin(t) * radius + center[1]]\n}\n\nexport function circleShape(radius: number, center: Vec2 = [0, 0], density: number = 10) {\n  return [\n    ...tr.map((i: number) => {\n      const delta = (i / density) * Math.PI * 2\n      return pointInCircle(delta, radius, center) as Vec2\n    }, tr.range(density)),\n  ]\n}\n","import { Vec3 } from '@tstackgl/types'\nimport vec3 from 'gl-vec3'\n\n// https://vorg.github.io/pex/docs/pex-gen/Icosahedron.html\n// http://paulbourke.net/geometry/platonic/\n\nexport function createIcosahedron(r: number = 0.5) {\n  const phi = (1 + Math.sqrt(5)) / 2\n  const a = 1 / 2\n  const b = 1 / (2 * phi)\n\n  const positions: Array<Vec3> = ([\n    [0, b, -a],\n    [b, a, 0],\n    [-b, a, 0],\n    [0, b, a],\n    [0, -b, a],\n    [-a, 0, b],\n    [a, 0, b],\n    [0, -b, -a],\n    [a, 0, -b],\n    [-a, 0, -b],\n    [b, -a, 0],\n    [-b, -a, 0],\n  ] as Array<Vec3>).map(point => {\n    vec3.normalize(point, point)\n    vec3.scale(point, point, r)\n    return point\n  })\n\n  const cells: Array<Vec3> = [\n    [1, 0, 2],\n    [2, 3, 1],\n    [4, 3, 5],\n    [6, 3, 4],\n    [7, 0, 8],\n    [9, 0, 7],\n    [10, 4, 11],\n    [11, 7, 10],\n    [5, 2, 9],\n    [9, 11, 5],\n    [8, 1, 6],\n    [6, 10, 8],\n    [5, 3, 2],\n    [1, 3, 6],\n    [2, 0, 9],\n    [8, 0, 1],\n    [9, 7, 11],\n    [10, 7, 8],\n    [11, 4, 5],\n    [6, 4, 10],\n  ]\n\n  const edges = [\n    [0, 1],\n    [0, 2],\n    [0, 7],\n    [0, 8],\n    [0, 9],\n    [1, 2],\n    [1, 3],\n    [1, 6],\n    [1, 8],\n    [2, 3],\n    [2, 5],\n    [2, 9],\n    [3, 4],\n    [3, 5],\n    [3, 6],\n    [4, 5],\n    [4, 6],\n    [4, 10],\n    [4, 11],\n    [5, 9],\n    [5, 11],\n    [6, 8],\n    [6, 10],\n    [7, 8],\n    [7, 9],\n    [7, 10],\n    [7, 11],\n    [8, 10],\n    [9, 11],\n    [10, 11],\n  ]\n  return {\n    positions,\n    cells,\n    edges,\n  }\n}\n","import { QuadMesh } from '@tstackgl/types'\n\n// from https://github.com/ataber/primitive-cylinder/blob/master/index.js\n// but also with lateral quad\n\nexport function createCylinder(\n  radiusTop: number,\n  radiusBottom: number,\n  height: number,\n  radialSegments: number,\n  heightSegments: number,\n): QuadMesh {\n  let index = 0\n  let indexOffset = 0\n  const indexArray = []\n\n  const vertexCount = (radialSegments + 1) * (heightSegments + 1)\n  const cellCount = radialSegments * heightSegments * 2\n\n  const normals = new Array(vertexCount)\n  const vertices = new Array(vertexCount)\n  const uvs = new Array(vertexCount)\n  const cells = new Array(cellCount)\n  const quadCells = new Array(cellCount / 2)\n\n  const slope = (radiusBottom - radiusTop) / height\n  const thetaLength = 2.0 * Math.PI\n\n  for (let y = 0; y <= heightSegments; y++) {\n    const indexRow = []\n    const v = y / heightSegments\n    const radius = v * (radiusBottom - radiusTop) + radiusTop\n\n    for (let x = 0; x <= radialSegments; x++) {\n      const u = x / radialSegments\n      const theta = u * thetaLength\n      const sinTheta = Math.sin(theta)\n      const cosTheta = Math.cos(theta)\n      vertices[index] = [radius * sinTheta, -v * height + height / 2, radius * cosTheta]\n      normals[index] = [sinTheta, slope, cosTheta]\n      uvs[index] = [u, 1 - v]\n\n      indexRow.push(index)\n      index++\n    }\n\n    indexArray.push(indexRow)\n  }\n\n  for (let x = 0; x < radialSegments; x++) {\n    for (let y = 0; y < heightSegments; y++) {\n      const i1 = indexArray[y][x]\n      const i2 = indexArray[y + 1][x]\n      const i3 = indexArray[y + 1][x + 1]\n      const i4 = indexArray[y][x + 1]\n\n      quadCells[indexOffset / 2] = [i1, i2, i3, i4]\n\n      // face one\n      cells[indexOffset] = [i1, i2, i4]\n      indexOffset++\n\n      // face two\n      cells[indexOffset] = [i2, i3, i4]\n      indexOffset++\n    }\n  }\n\n  function generateCap(top: boolean) {\n    const vertex = new Array(3).fill(0)\n\n    const radius = top === true ? radiusTop : radiusBottom\n    const sign = top === true ? 1 : -1\n\n    const centerIndexStart = index\n\n    for (let x = 1; x <= radialSegments; x++) {\n      vertices[index] = [0, (height * sign) / 2, 0]\n      normals[index] = [0, sign, 0]\n      uvs[index] = [0.5, 0.5]\n      index++\n    }\n\n    const centerIndexEnd = index\n\n    for (let x = 0; x <= radialSegments; x++) {\n      const u = x / radialSegments\n      const theta = u * thetaLength\n      const cosTheta = Math.cos(theta)\n      const sinTheta = Math.sin(theta)\n      vertices[index] = [radius * sinTheta, (height * sign) / 2, radius * cosTheta]\n      normals[index] = [0, sign, 0]\n      uvs[index] = [cosTheta * 0.5 + 0.5, sinTheta * 0.5 * sign + 0.5]\n      index++\n    }\n\n    for (let x = 0; x < radialSegments; x++) {\n      const c = centerIndexStart + x\n      const i = centerIndexEnd + x\n\n      if (top === true) {\n        // face top\n        cells[indexOffset] = [i, i + 1, c]\n        indexOffset++\n      } else {\n        // face bottom\n        cells[indexOffset] = [i + 1, i, c]\n        indexOffset++\n      }\n    }\n  }\n\n  if (radiusTop > 0) {\n    generateCap(true)\n  }\n\n  if (radiusBottom > 0) {\n    generateCap(false)\n  }\n\n  return {\n    positions: vertices,\n    uvs,\n    cells,\n    normals,\n    quadCells,\n  }\n}\n","import { Vec3, Vec2 } from '@tstackgl/types'\nimport vec3 from 'gl-vec3'\n\n// https://vorg.github.io/pex/docs/pex-gen/Octahedron.html\n// http://paulbourke.net/geometry/platonic/\n\nexport function createOctahedron(r: number = 0.5) {\n  const a = 1 / (2 * Math.sqrt(2))\n  const b = 1 / 2\n\n  const s3 = Math.sqrt(3)\n  const s6 = Math.sqrt(6)\n\n  const positions: Array<Vec3> = ([\n    [-a, 0, a], //front left\n    [a, 0, a], //front right\n    [a, 0, -a], //back right\n    [-a, 0, -a], //back left\n    [0, b, 0], //top\n    [0, -b, 0], //bottom\n  ] as Array<Vec3>).map(point => {\n    vec3.normalize(point, point)\n    vec3.scale(point, point, r)\n    return point\n  })\n\n  const cells: Array<Vec3> = [\n    [3, 0, 4],\n    [2, 3, 4],\n    [1, 2, 4],\n    [0, 1, 4],\n    [3, 2, 5],\n    [0, 3, 5],\n    [2, 1, 5],\n    [1, 0, 5],\n  ] as Array<Vec3>\n\n  const edges: Array<Vec2> = [\n    [0, 1],\n    [1, 2],\n    [2, 3],\n    [3, 0],\n    [0, 4],\n    [1, 4],\n    [2, 4],\n    [3, 4],\n    [0, 5],\n    [1, 5],\n    [2, 5],\n    [3, 5],\n  ]\n  return {\n    positions,\n    cells,\n    edges,\n  }\n}\n","import slice = require('sliced')\nimport { Mesh } from '@tstackgl/types'\nimport { Vec3 } from '@tstackgl/types'\n\nexport function combine(meshes: Array<Mesh>): Mesh {\n  const hasNormals = meshes.every(\n    mesh => mesh.normals && mesh.positions.length === mesh.normals.length,\n  )\n  const hasColors = meshes.every(\n    mesh => mesh.colors && mesh.positions.length === mesh.colors.length,\n  )\n\n  const pos = []\n  const cel = []\n  const nor = []\n  const color = []\n  let p = 0\n  let c = 0\n  let k = 0\n  let j = 0\n\n  for (let i = 0; i < meshes.length; i++) {\n    const mpos = meshes[i].positions\n    const mcel = meshes[i].cells\n    const mnor = meshes[i].normals\n    const mcol = meshes[i].colors\n\n    for (j = 0; j < mpos.length; j++) {\n      pos[j + p] = slice(mpos[j])\n      if (hasNormals) nor[j + p] = slice(mnor[j])\n      if (hasColors) color[j + p] = slice(mcol[j])\n    }\n\n    for (j = 0; j < mcel.length; j++) {\n      cel[(k = j + c)] = slice(mcel[j])\n\n      for (let l = 0; l < cel[k].length; l++) {\n        cel[k][l] += p\n      }\n    }\n\n    p += mpos.length\n    c += mcel.length\n  }\n\n  return {\n    cells: cel as Array<Vec3>,\n    positions: pos as Array<Vec3>,\n    ...(hasNormals && { normals: nor as Array<Vec3> }),\n    ...(hasColors && { colors: color as Array<Vec3> }),\n  }\n}\n","import createRegl from 'regl'\nimport { start } from '@thi.ng/hdom'\nimport { canvasWebGL, adaptDPI } from '@thi.ng/hdom-components/canvas'\nimport { hasWebGL } from '@thi.ng/checks'\nimport { createFrameCatch } from '@tstackgl/regl-draw'\nimport qbqb from 'cube-cube'\nimport unindex from 'unindex-mesh'\nimport { combine } from '@tstackgl/geometry'\nimport clone from 'clone'\nimport mat4 from 'gl-mat4'\nimport quat from 'gl-quat'\nimport gradientMap from './gradient-map'\nimport { Mesh, Vec3, Vec2 } from '@tstackgl/types'\nimport normals from 'face-normals'\nimport createCamera from 'orbit-camera'\nimport { createDrawHeight } from './draw-height'\nimport { PropsVoxel, createDrawVoxel } from './draw-voxel'\n\nlet loop = { cancel: function() {} }\n\nconst SIZE = 16\nconst TIMESCALE = 0.5\nconst RES: Vec2 = [1 / SIZE, 1 / SIZE]\n\nfunction getCentroids(meshes: Array<Mesh & { centroid: Vec3 }>) {\n  return meshes.map(function(mesh) {\n    mesh = clone(mesh)\n\n    for (let i = 0; i < mesh.positions.length; i++) {\n      mesh.positions[i] = mesh.centroid\n    }\n\n    return mesh\n  })\n}\n\nfunction getEdges(meshes: Array<Mesh & { index: Vec3 }>) {\n  return meshes.map(function(mesh) {\n    mesh = clone(mesh)\n\n    var idx = mesh.index\n\n    for (let i = 0; i < mesh.positions.length; i++) {\n      var pos = mesh.positions[i]\n      mesh.positions[i] = mesh.positions[i].slice() as Vec3\n      mesh.positions[i][0] = (pos[0] * SIZE - idx[0] - 0.5) * 2\n      mesh.positions[i][2] = (pos[2] * SIZE - idx[2] - 0.5) * 2\n      mesh.positions[i][1] = (pos[1] - idx[1] - 0.5) * 2\n    }\n\n    return mesh\n  })\n}\n\nfunction createMesh() {\n  const voxels = qbqb(SIZE, 1, SIZE)\n  const positions = unindex(combine(voxels))\n  const edges = unindex(combine(getEdges(voxels)))\n  const centroids = unindex(combine(getCentroids(voxels)))\n\n  return {\n    positions: positions,\n    centroids: centroids,\n    normals: normals(positions),\n    edges: edges,\n  }\n}\n\nconst getTime =\n  window.performance && window.performance.now\n    ? function now() {\n        return performance.now()\n      }\n    : Date.now ||\n      function now() {\n        return +new Date()\n      }\n\nfunction createReglScene() {\n  // canvas init hook\n  const init = (canvas: HTMLCanvasElement, __: WebGLRenderingContext) => {\n    const width = canvas.parentElement ? canvas.parentElement.clientWidth : window.innerHeight\n    const height = canvas.parentElement ? canvas.parentElement.clientHeight : window.innerHeight\n\n    adaptDPI(canvas, width, height)\n\n    const regl = createRegl({ canvas, extensions: ['OES_standard_derivatives'] })\n    const frameCatch = createFrameCatch(regl)\n\n    const fboParams = {\n      depth: false, // this is really important. why?!?\n      cull: {\n        enable: false,\n      },\n    }\n    const heightmapTexture = regl.texture({\n      shape: [SIZE, SIZE],\n      wrap: 'clamp',\n      min: 'nearest',\n      mag: 'nearest',\n    })\n    const heightmap = regl.framebuffer({ color: heightmapTexture, ...fboParams })\n    // const heightmap = regl.framebuffer({\n    //   shape: [SIZE, SIZE],\n    //   ...fboParams,\n    //   stencil: false\n    // })\n\n    const gradient = regl.texture(gradientMap)\n    const projection = mat4.create()\n    const viewrot = mat4.create()\n    const view = mat4.create()\n    const camera = createCamera([0, 10, 30], [0, 0, 0], [0, 1, 0])\n    camera.distance = 1.5\n\n    const model = mat4.create()\n    mat4.translate(model, model, [-0.5, 0, -0.5])\n\n    const drawHeight = createDrawHeight(regl)\n\n    const voxels = createMesh()\n    const drawVoxel = createDrawVoxel(regl, voxels)\n\n    console.log('dude')\n    loop = frameCatch(function(context: createREGL.DefaultContext) {\n      const now = getTime() * TIMESCALE\n      const width = canvas.width\n      const height = canvas.height\n\n      regl.clear({ color: [1, 1, 1, 1] })\n\n      heightmap.use(() => {\n        drawHeight.draw({\n          uTime: now * 0.8,\n          uResolution: RES,\n        })\n      })\n\n      mat4.perspective(projection, Math.PI / 4, width / height, 0.001, 100)\n\n      quat.identity(camera.rotation)\n      quat.rotateY(camera.rotation, camera.rotation, now * 0.0002)\n      quat.rotateX(camera.rotation, camera.rotation, -0.5)\n      camera.view(view)\n\n      quat.identity(camera.rotation)\n      quat.rotateY(camera.rotation, camera.rotation, now * 0.0002)\n\n      const voxelProps: PropsVoxel = {\n        uResolution: RES,\n        uViewRotation: mat4.fromQuat(viewrot, camera.rotation),\n        uProjection: projection,\n        uModel: model,\n        uView: view,\n        tHeightmap: heightmap,\n        tGradient: gradient,\n      }\n      drawVoxel.draw(voxelProps)\n    })\n  }\n\n  const update = () => {}\n\n  return { init, update }\n}\n\nconst app = () => {\n  if (!hasWebGL()) {\n    return ['p', 'Your browser does not support WebGL :- (']\n  }\n\n  const canvas = canvasWebGL(createReglScene())\n\n  return [\n    'div.h-100.flex.flex-column',\n    ['p.ma0.pa2.code', 'stack.gl splash screen'],\n    ['div.h-100', [canvas]],\n  ]\n}\n\nstart(app())\n\nif ((module as any).hot) {\n  ;(module as any).hot.dispose(() => {\n    loop.cancel()\n  })\n}\n","import { Mesh, Vec3 } from '@tstackgl/types'\nimport { combine } from '@tstackgl/geometry/src/mesh-combine-normals'\nimport createRegl from 'regl'\nimport mat4 from 'gl-mat4'\nimport vec3 from 'gl-vec3'\nimport { createCylinder } from '@tstackgl/geometry'\n\nconst vert = `\n  precision mediump float;\n  uniform mat4 projection, view;\n  attribute vec3 position;\n  attribute vec3 colorAttribute;\n  varying vec3 color;\n  void main () {\n    color = colorAttribute;\n    gl_Position = projection * view * vec4(position, 1);\n  }\n`\n\nconst frag = `\n  precision mediump float;\n  varying vec3 color;\n  void main () {\n    gl_FragColor = vec4(color, 1.0);\n  }\n`\n\n// ----------------------------------------------------------------- lines\n\nfunction createAxesLines(regl: createRegl.Regl, scale: number) {\n  const mesh = {\n    positions: [[0, 0, 0], [scale, 0, 0], [0, 0, 0], [0, scale, 0], [0, 0, 0], [0, 0, scale]],\n    cells: [[0, 1], [2, 3], [4, 5]],\n    colors: [[1, 0, 0], [1, 0, 0], [0, 1, 0], [0, 1, 0], [0, 0, 1], [0, 0, 1]],\n  }\n\n  return regl({\n    vert,\n    frag,\n    attributes: {\n      position: mesh.positions,\n      colorAttribute: mesh.colors,\n    },\n    elements: mesh.cells,\n  })\n}\n\n// ----------------------------------------------------------------- arrows\n\nfunction createAxes(regl: createRegl.Regl, scale: number) {\n  function getAxis(translationVec: Vec3, colorVec: Vec3, rotationVec: Vec3) {\n    const arrow: Mesh = createCylinder(0, 0.1, 0.22, 4, 1)\n    arrow.positions = arrow.positions.map(position => {\n      const mat = mat4.create()\n      mat4.translate(mat, mat, translationVec)\n      mat4.rotate(mat, mat, Math.PI / 2, rotationVec)\n      return vec3.transformMat4(vec3.create(), position, mat)\n    })\n    arrow.colors = arrow.positions.map(p => colorVec)\n    return arrow\n  }\n\n  const xArrow = getAxis([scale, 0, 0], [1, 0, 0], [0, 0, -1])\n  const yArrow = getAxis([0, scale, 0], [0, 1, 0], [0, 1, 0])\n  const zArrow = getAxis([0, 0, scale], [0, 0, 1], [1, 0, 0])\n\n  const meshes = [xArrow, yArrow, zArrow]\n  const mesh: Mesh = combine(meshes)\n  mesh.colors = [].concat(meshes.map(x => x.colors))\n\n  return regl({\n    vert,\n    frag,\n    attributes: {\n      position: mesh.positions,\n      colorAttribute: mesh.colors,\n      createRegl,\n    },\n    elements: mesh.cells,\n  })\n}\n\nexport function createXYZ(regl: createRegl.Regl, scale = 1) {\n  const axes = createAxes(regl, scale)\n  const axesLines = createAxesLines(regl, scale)\n\n  function draw() {\n    axes()\n    axesLines()\n  }\n\n  return { draw }\n}\n","module.exports = normalize\n\nfunction normalize(vec) {\n  var mag = 0\n  for (var n = 0; n < vec.length; n++) {\n    mag += vec[n] * vec[n]\n  }\n  mag = Math.sqrt(mag)\n\n  // avoid dividing by zero\n  if (mag === 0) {\n    return Array.apply(null, new Array(vec.length)).map(Number.prototype.valueOf, 0)\n  }\n\n  for (var n = 0; n < vec.length; n++) {\n    vec[n] /= mag\n  }\n\n  return vec\n}\n","var normalize = require('vectors/normalize-nd')\n\nmodule.exports = icosphere\n\nfunction icosphere(subdivisions) {\n  subdivisions = +subdivisions|0\n\n  var positions = []\n  var faces = []\n  var t = 0.5 + Math.sqrt(5) / 2\n\n  positions.push([-1, +t,  0])\n  positions.push([+1, +t,  0])\n  positions.push([-1, -t,  0])\n  positions.push([+1, -t,  0])\n\n  positions.push([ 0, -1, +t])\n  positions.push([ 0, +1, +t])\n  positions.push([ 0, -1, -t])\n  positions.push([ 0, +1, -t])\n\n  positions.push([+t,  0, -1])\n  positions.push([+t,  0, +1])\n  positions.push([-t,  0, -1])\n  positions.push([-t,  0, +1])\n\n  faces.push([0, 11, 5])\n  faces.push([0, 5, 1])\n  faces.push([0, 1, 7])\n  faces.push([0, 7, 10])\n  faces.push([0, 10, 11])\n\n  faces.push([1, 5, 9])\n  faces.push([5, 11, 4])\n  faces.push([11, 10, 2])\n  faces.push([10, 7, 6])\n  faces.push([7, 1, 8])\n\n  faces.push([3, 9, 4])\n  faces.push([3, 4, 2])\n  faces.push([3, 2, 6])\n  faces.push([3, 6, 8])\n  faces.push([3, 8, 9])\n\n  faces.push([4, 9, 5])\n  faces.push([2, 4, 11])\n  faces.push([6, 2, 10])\n  faces.push([8, 6, 7])\n  faces.push([9, 8, 1])\n\n  var complex = {\n      cells: faces\n    , positions: positions\n  }\n\n  while (subdivisions-- > 0) {\n    complex = subdivide(complex)\n  }\n\n  positions = complex.positions\n  for (var i = 0; i < positions.length; i++) {\n    normalize(positions[i])\n  }\n\n  return complex\n}\n\n// TODO: work out the second half of loop subdivision\n// and extract this into its own module.\nfunction subdivide(complex) {\n  var positions = complex.positions\n  var cells = complex.cells\n\n  var newCells = []\n  var newPositions = []\n  var midpoints = {}\n  var f = [0, 1, 2]\n  var l = 0\n\n  for (var i = 0; i < cells.length; i++) {\n    var cell = cells[i]\n    var c0 = cell[0]\n    var c1 = cell[1]\n    var c2 = cell[2]\n    var v0 = positions[c0]\n    var v1 = positions[c1]\n    var v2 = positions[c2]\n\n    var a = getMidpoint(v0, v1)\n    var b = getMidpoint(v1, v2)\n    var c = getMidpoint(v2, v0)\n\n    var ai = newPositions.indexOf(a)\n    if (ai === -1) ai = l++, newPositions.push(a)\n    var bi = newPositions.indexOf(b)\n    if (bi === -1) bi = l++, newPositions.push(b)\n    var ci = newPositions.indexOf(c)\n    if (ci === -1) ci = l++, newPositions.push(c)\n\n    var v0i = newPositions.indexOf(v0)\n    if (v0i === -1) v0i = l++, newPositions.push(v0)\n    var v1i = newPositions.indexOf(v1)\n    if (v1i === -1) v1i = l++, newPositions.push(v1)\n    var v2i = newPositions.indexOf(v2)\n    if (v2i === -1) v2i = l++, newPositions.push(v2)\n\n    newCells.push([v0i, ai, ci])\n    newCells.push([v1i, bi, ai])\n    newCells.push([v2i, ci, bi])\n    newCells.push([ai, bi, ci])\n  }\n\n  return {\n      cells: newCells\n    , positions: newPositions\n  }\n\n  // reuse midpoint vertices between iterations.\n  // Otherwise, there'll be duplicate vertices in the final\n  // mesh, resulting in sharp edges.\n  function getMidpoint(a, b) {\n    var point = midpoint(a, b)\n    var pointKey = pointToKey(point)\n    var cachedPoint = midpoints[pointKey]\n    if (cachedPoint) {\n      return cachedPoint\n    } else {\n      return midpoints[pointKey] = point\n    }\n  }\n\n  function pointToKey(point) {\n    return point[0].toPrecision(6) + ','\n         + point[1].toPrecision(6) + ','\n         + point[2].toPrecision(6)\n  }\n\n  function midpoint(a, b) {\n    return [\n        (a[0] + b[0]) / 2\n      , (a[1] + b[1]) / 2\n      , (a[2] + b[2]) / 2\n    ]\n  }\n}\n","var cross2 = require('gl-vec2/cross')\nvar sub2 = require('gl-vec2/subtract')\n\nvar tmpX = [0, 0, 0]\nvar tmpY = [0, 0, 0]\n\nmodule.exports = function isUVBroken (uvs, a, b, c) {\n  var uvA = uvs[a]\n  var uvB = uvs[b]\n  var uvC = uvs[c]\n  sub2(tmpX, uvB, uvA)\n  sub2(tmpY, uvC, uvA)\n  cross2(tmpX, tmpX, tmpY)\n  return tmpX[2] < 0\n}\n","var isSeam = require('./is-uv-seam')\nvar MIN = 0.25\nvar MAX = 0.75\n\nmodule.exports = fixWrappedUVs\n\nfunction fixWrappedUVs (mesh) {\n  var positions = mesh.positions\n  var cells = mesh.cells\n  var uvs = mesh.uvs\n\n  var newVertices = positions.slice()\n  var newUvs = uvs.slice()\n  var visited = {}\n\n  for (var i = 0; i < cells.length; i++) {\n    var cell = cells[i]\n\n    var a = cell[0]\n    var b = cell[1]\n    var c = cell[2]\n\n    if (!isSeam(uvs, a, b, c)) {\n      continue\n    }\n\n    var p0 = positions[a]\n    var p1 = positions[b]\n    var p2 = positions[c]\n    var uv0 = uvs[a]\n    var uv1 = uvs[b]\n    var uv2 = uvs[c]\n\n    if (uv0[0] < MIN) {\n      a = revisit(visited, a, uv0, p0)\n    }\n    if (uv1[0] < MIN) {\n      b = revisit(visited, b, uv1, p1)\n    }\n    if (uv2[0] < MIN) {\n      c = revisit(visited, c, uv2, p2)\n    }\n\n    cell[0] = a\n    cell[1] = b\n    cell[2] = c\n  }\n\n  fixUVEdges(cells, newUvs)\n  // modify mesh in place with new lists\n  mesh.positions = newVertices\n  mesh.uvs = newUvs\n\n  function revisit (cache, face, uv, position) {\n    if (!(face in cache)) {\n      newVertices.push(position.slice())\n      newUvs.push(uv.slice())\n      var verticeIndex = newVertices.length - 1\n      cache[face] = verticeIndex\n      return verticeIndex\n    } else {\n      return cache[face]\n    }\n  }\n}\n\nfunction fixUVEdges (cells, uvs) {\n  for (var i = 0; i < cells.length; i++) {\n    var cell = cells[i]\n    var uv0 = uvs[cell[0]]\n    var uv1 = uvs[cell[1]]\n    var uv2 = uvs[cell[2]]\n\n    var max = Math.max(uv0[0], uv1[0], uv2[0])\n    var min = Math.min(uv0[0], uv1[0], uv2[0])\n    if (max > MAX && min < MIN) {\n      if (uv0[0] < MIN) uv0[0] += 1\n      if (uv1[0] < MIN) uv1[0] += 1\n      if (uv2[0] < MIN) uv2[0] += 1\n    }\n  }\n}\n","module.exports = fixPoleUVs\nfunction fixPoleUVs (mesh) {\n  var positions = mesh.positions\n  var cells = mesh.cells\n  var uvs = mesh.uvs\n\n  var northIndex = firstYIndex(positions, 1)\n  var southIndex = firstYIndex(positions, -1)\n  if (northIndex === -1 || southIndex === -1) {\n    // could not find any poles, bail early\n    return\n  }\n\n  var newVertices = positions.slice()\n  var newUvs = uvs.slice()\n  var verticeIndex = newVertices.length - 1\n\n  for (var i = 0; i < cells.length; i++) {\n    var cell = cells[i]\n    var a = cell[0]\n    var b = cell[1]\n    var c = cell[2]\n\n    if (a === northIndex) {\n      visit(cell, northIndex, b, c)\n    } else if (a === southIndex) {\n      visit(cell, southIndex, b, c)\n    }\n  }\n\n  mesh.positions = newVertices\n  mesh.uvs = newUvs\n\n  function visit (cell, poleIndex, b, c) {\n    var uv1 = uvs[b]\n    var uv2 = uvs[c]\n    uvs[poleIndex][0] = (uv1[0] + uv2[0]) / 2\n    verticeIndex++\n    newVertices.push(positions[poleIndex].slice())\n    newUvs.push(uvs[poleIndex].slice())\n    cell[0] = verticeIndex\n  }\n}\n\nfunction firstYIndex (list, value) {\n  for (var i = 0; i < list.length; i++) {\n    var vec = list[i]\n    if (Math.abs(vec[1] - value) <= 1e-4) {\n      return i\n    }\n  }\n  return -1\n}\n","var icosphere = require('icosphere')\nvar normalize = require('gl-vec3/normalize')\nvar scale = require('gl-vec3/scale')\nvar fixWrappedUVs = require('./lib/fix-wrapped-uvs')\nvar fixPoles = require('./lib/fix-pole-uvs')\n\nmodule.exports = function primitiveIcosphere (radius, opt) {\n  opt = opt || {}\n  radius = typeof radius !== 'undefined' ? radius : 1\n\n  var subdivisions = typeof opt.subdivisions !== 'undefined' ? opt.subdivisions : 2\n  var complex = icosphere(subdivisions)\n\n  var normals = []\n  var uvs = []\n  var i, position\n\n  for (i = 0; i < complex.positions.length; i++) {\n    position = complex.positions[i]\n\n    // get UV from unit icosphere\n    var u = 0.5 * (-(Math.atan2(position[2], -position[0]) / Math.PI) + 1.0)\n    var v = 0.5 + Math.asin(position[1]) / Math.PI\n    uvs.push([ 1 - u, 1 - v ])\n  }\n\n  var mesh = {\n    positions: complex.positions,\n    cells: complex.cells,\n    uvs: uvs,\n    normals: normals\n  }\n\n  // attempt to fix some of the glaring seam issues\n  fixPoles(mesh)\n  fixWrappedUVs(mesh)\n\n  // now determine normals\n  for (i = 0; i < mesh.positions.length; i++) {\n    position = mesh.positions[i]\n\n    // get normal\n    var normal = normalize([0, 0, 0], position)\n    normals.push(normal)\n\n    // and scale sphere to radius\n    scale(position, position, radius)\n  }\n\n  return mesh\n}\n","import createRegl from 'regl'\nimport createSphere from 'primitive-icosphere'\nimport { Vec3 } from '@tstackgl/types'\n\nconst vert = `\nprecision mediump float;\n\nuniform mat4 projection, view;\nuniform vec3 translate;\nattribute vec3 position, normal;\n\nvoid main () {\n  vec4 mpos = projection * view * vec4(position + translate, 1.0);\n  gl_Position = mpos;\n}`\n\nconst frag = `\nprecision mediump float;\n\nuniform vec3 color;\n\nvoid main () {\n  gl_FragColor = vec4(color, 1.0);\n}`\n\ninterface Attributes {\n  position: Array<Vec3>\n  normal: Array<Vec3>\n}\n\nexport interface Props {\n  color: Vec3\n  translate: Vec3\n}\n\ninterface Uniforms extends Props {}\n\nexport function createDrawPointDebug(regl: createRegl.Regl, radius = 0.3) {\n  const mesh = createSphere(radius, { subdivisions: 1 })\n  const draw = regl<Uniforms, Attributes, Props>({\n    frag,\n    vert,\n    attributes: {\n      position: () => mesh.positions,\n      normal: () => mesh.normals,\n    },\n    uniforms: {\n      color: regl.prop<Props, 'color'>('color'),\n      translate: regl.prop<Props, 'translate'>('translate'),\n    },\n    elements: () => mesh.cells,\n  })\n\n  return {\n    draw,\n  }\n}\n","import createRegl from 'regl'\nimport { Vec3 } from '@tstackgl/types'\n\nconst vert = `\nprecision mediump float;\nuniform mat4 projection, view;\nattribute vec3 position;\nvoid main () {\n  vec4 mpos = projection * view * vec4(position, 1.0);\n  gl_Position = mpos;\n}`\n\nconst frag = `\nprecision mediump float;\nuniform vec4 color;\nvoid main () {\n  gl_FragColor = color;\n}`\n\ninterface Attributes {\n  position: Array<Vec3>\n}\n\nexport interface PropsMeshUnicolor {\n  color: createRegl.Vec4\n}\n\ninterface Uniforms extends PropsMeshUnicolor {}\n\nexport function createDrawMeshUnicolor(\n  regl: createRegl.Regl,\n  mesh: { positions: Vec3[]; cells: Vec3[] },\n) {\n  const draw = regl<Uniforms, Attributes, PropsMeshUnicolor>({\n    frag,\n    vert,\n    attributes: {\n      position: () => mesh.positions,\n    },\n    uniforms: {\n      color: regl.prop<PropsMeshUnicolor, 'color'>('color'),\n    },\n    elements: () => mesh.cells,\n  })\n\n  return {\n    draw,\n  }\n}\n","import createRegl from 'regl'\nimport { Mesh, Vec3, Mat4 } from '@tstackgl/types'\nimport { partition, wrap, map } from '@thi.ng/transducers'\n\nconst vert = `\nprecision mediump float;\nuniform mat4 projection, view, model;\nattribute vec3 position;\nvoid main () {\n  vec4 mpos = projection * view * model * vec4(position, 1.0);\n  gl_Position = mpos;\n}`\n\nconst frag = `\nprecision mediump float;\nuniform vec3 color;\nvoid main () {\n  gl_FragColor = vec4(color, 1.0);\n}`\n\ninterface Attributes {\n  position: Array<Vec3>\n}\n\ninterface Props {\n  color: Vec3\n  model: Mat4\n}\n\ninterface Uniforms extends Props {}\n\nexport function createDrawMeshWireframe(regl: createRegl.Regl, mesh: Mesh) {\n  // const input: Vec3[] = [[1, 0, 3], [3, 2, 1], [5, 4, 7]]\n  // const expected = [[[1, 0], [0, 3], [3, 1]], [[3, 2], [2, 1], [1, 3]], [[5, 4], [4, 7], [7, 5]]]\n\n  const triangleToSegments = ([a, b, c]: Vec3) => [[a, b], [b, c], [c, a]]\n  const wireframeCells = [...map(triangleToSegments, mesh.cells)]\n\n  const draw = regl<Uniforms, Attributes, Props>({\n    frag,\n    vert,\n    attributes: {\n      position: () => mesh.positions,\n    },\n    uniforms: {\n      color: regl.prop<Props, 'color'>('color'),\n      model: regl.prop<Props, 'model'>('model'),\n    },\n    elements: wireframeCells,\n    primitive: 'lines',\n  })\n\n  return {\n    draw,\n  }\n}\n","import createRegl from 'regl'\nimport { Vec3, Mesh } from '@tstackgl/types'\nimport { Mat4 } from '@tstackgl/types/src'\n\nconst vert = `\nprecision mediump float;\n\nuniform mat4 projection, view, model;\nattribute vec3 position, normal;\nvarying vec3 vViewPos;\n\nvoid main () {\n  vec4 mpos = projection * view * model * vec4(position, 1.0);\n  vViewPos = -(projection * view * model * vec4(position, 1.0)).xyz;\n  gl_Position = mpos;\n}\n`\n\nconst frag = `\nprecision mediump float;\n#extension GL_OES_standard_derivatives: enable\n\nuniform vec3 diffuseColor, ambientColor, lightDirection;\nvarying vec3 vViewPos;\n\nvec3 faceNormal(vec3 pos) {\n  vec3 fdx = dFdx(pos);\n  vec3 fdy = dFdy(pos);\n  return normalize(cross(fdx, fdy));\n}\n\nvoid main () {\n  vec3 normal = faceNormal(vViewPos);\n\n  float brightness = max(\n    dot(\n      normalize(lightDirection),\n      normalize(normal)\n    ), 0.4);\n  vec3 lightColor = ambientColor + diffuseColor * brightness;\n  gl_FragColor = vec4(lightColor, 1.0);\n}\n`\n\ninterface PropsGeometry {\n  model: Mat4\n}\n\ninterface PropsLight {\n  diffuseColor: Vec3\n  ambientColor: Vec3\n  lightDirection: Vec3\n}\n\nexport type PropsBasicMaterial = PropsGeometry & PropsLight\n\ninterface Uniforms extends PropsBasicMaterial {}\ninterface Attributes {\n  position: Array<Vec3>\n}\n\nexport function createBasicMesh(regl: createRegl.Regl, mesh: Mesh) {\n  const draw = regl<Uniforms, Attributes, PropsBasicMaterial>({\n    vert,\n    frag,\n\n    attributes: {\n      position: mesh.positions,\n    },\n\n    uniforms: {\n      model: regl.prop<PropsGeometry, 'model'>('model'),\n\n      diffuseColor: regl.prop<PropsLight, 'diffuseColor'>('diffuseColor'),\n      ambientColor: regl.prop<PropsLight, 'ambientColor'>('ambientColor'),\n      lightDirection: regl.prop<PropsLight, 'lightDirection'>('lightDirection'),\n    },\n\n    elements: () => mesh.cells,\n  })\n\n  return { draw }\n}\n","var DEFAULT_NORMALS_EPSILON = 1e-6;\nvar DEFAULT_FACE_EPSILON = 1e-6;\n\n//Estimate the vertex normals of a mesh\nexports.vertexNormals = function(faces, positions, specifiedEpsilon) {\n\n  var N         = positions.length;\n  var normals   = new Array(N);\n  var epsilon   = specifiedEpsilon === void(0) ? DEFAULT_NORMALS_EPSILON : specifiedEpsilon;\n\n  //Initialize normal array\n  for(var i=0; i<N; ++i) {\n    normals[i] = [0.0, 0.0, 0.0];\n  }\n\n  //Walk over all the faces and add per-vertex contribution to normal weights\n  for(var i=0; i<faces.length; ++i) {\n    var f = faces[i];\n    var p = 0;\n    var c = f[f.length-1];\n    var n = f[0];\n    for(var j=0; j<f.length; ++j) {\n\n      //Shift indices back\n      p = c;\n      c = n;\n      n = f[(j+1) % f.length];\n\n      var v0 = positions[p];\n      var v1 = positions[c];\n      var v2 = positions[n];\n\n      //Compute infineteismal arcs\n      var d01 = new Array(3);\n      var m01 = 0.0;\n      var d21 = new Array(3);\n      var m21 = 0.0;\n      for(var k=0; k<3; ++k) {\n        d01[k] = v0[k]  - v1[k];\n        m01   += d01[k] * d01[k];\n        d21[k] = v2[k]  - v1[k];\n        m21   += d21[k] * d21[k];\n      }\n\n      //Accumulate values in normal\n      if(m01 * m21 > epsilon) {\n        var norm = normals[c];\n        var w = 1.0 / Math.sqrt(m01 * m21);\n        for(var k=0; k<3; ++k) {\n          var u = (k+1)%3;\n          var v = (k+2)%3;\n          norm[k] += w * (d21[u] * d01[v] - d21[v] * d01[u]);\n        }\n      }\n    }\n  }\n\n  //Scale all normals to unit length\n  for(var i=0; i<N; ++i) {\n    var norm = normals[i];\n    var m = 0.0;\n    for(var k=0; k<3; ++k) {\n      m += norm[k] * norm[k];\n    }\n    if(m > epsilon) {\n      var w = 1.0 / Math.sqrt(m);\n      for(var k=0; k<3; ++k) {\n        norm[k] *= w;\n      }\n    } else {\n      for(var k=0; k<3; ++k) {\n        norm[k] = 0.0;\n      }\n    }\n  }\n\n  //Return the resulting set of patches\n  return normals;\n}\n\n//Compute face normals of a mesh\nexports.faceNormals = function(faces, positions, specifiedEpsilon) {\n\n  var N         = faces.length;\n  var normals   = new Array(N);\n  var epsilon   = specifiedEpsilon === void(0) ? DEFAULT_FACE_EPSILON : specifiedEpsilon;\n\n  for(var i=0; i<N; ++i) {\n    var f = faces[i];\n    var pos = new Array(3);\n    for(var j=0; j<3; ++j) {\n      pos[j] = positions[f[j]];\n    }\n\n    var d01 = new Array(3);\n    var d21 = new Array(3);\n    for(var j=0; j<3; ++j) {\n      d01[j] = pos[1][j] - pos[0][j];\n      d21[j] = pos[2][j] - pos[0][j];\n    }\n\n    var n = new Array(3);\n    var l = 0.0;\n    for(var j=0; j<3; ++j) {\n      var u = (j+1)%3;\n      var v = (j+2)%3;\n      n[j] = d01[u] * d21[v] - d01[v] * d21[u];\n      l += n[j] * n[j];\n    }\n    if(l > epsilon) {\n      l = 1.0 / Math.sqrt(l);\n    } else {\n      l = 0.0;\n    }\n    for(var j=0; j<3; ++j) {\n      n[j] *= l;\n    }\n    normals[i] = n;\n  }\n  return normals;\n}\n\n\n","import createRegl from 'regl'\nimport { Mesh, Vec3 } from '@tstackgl/types'\nimport { faceNormals } from 'normals'\nimport { getCentroidFromCells } from '@tstackgl/geometry'\nimport vec3 from 'gl-vec3'\nimport { tuples, mapcat, partition, range, map } from '@thi.ng/transducers'\n\nconst vert = `\nprecision mediump float;\nuniform mat4 projection, view;\nattribute vec3 position, color;\nvarying vec3 vColor;\nvoid main () {\n  vec4 mpos = projection * view * vec4(position, 1.0);\n  gl_Position = mpos;\n  vColor = color;\n}`\n\nconst frag = `\nprecision mediump float;\nvarying vec3 vColor;\nvoid main () {\n  gl_FragColor = vec4(vColor, 1.0);\n}`\n\ninterface Uniforms {}\ninterface Props {}\n\ninterface Attributes {\n  position: Array<Vec3>\n  color: Array<Vec3>\n}\n\nexport function createFaceNormalLines(regl: createRegl.Regl, mesh: Mesh, len: number = 1) {\n  const faceNormalsArray = faceNormals(mesh.cells, mesh.positions)\n\n  const colors = [\n    ...map(\n      (x: Vec3) => [x[0] / 2 + 0.5, x[1] / 2 + 0.5, x[2] / 2 + 0.5] as Vec3,\n      mapcat(x => [x, x], faceNormalsArray),\n    ),\n  ]\n\n  console.log({ colors })\n\n  const centersArray = getCentroidFromCells(mesh.cells, mesh.positions)\n  const p1Array = centersArray.map((p0, i) => {\n    const out = vec3.create()\n    const normalScaled = vec3.scale(out, faceNormalsArray[i], len)\n    return vec3.add(out, p0, normalScaled)\n  })\n  const positions: Vec3[] = [...mapcat(x => x, tuples(centersArray, p1Array))]\n  const cellsLen = centersArray.length * 2\n  const cells = [...partition(2, [...range(cellsLen)])]\n\n  const draw = regl<Uniforms, Attributes, Props>({\n    frag,\n    vert,\n    attributes: {\n      position: positions,\n      color: colors,\n    },\n    uniforms: {},\n    elements: cells,\n  })\n\n  return {\n    draw,\n  }\n}\n","import createRegl from 'regl'\nimport { Vec3, Mesh } from '@tstackgl/types'\nimport { Mat4 } from '@tstackgl/types/src'\n\n// https://stackoverflow.com/questions/19728950/three-js-meshnormalmaterial-default-color\n// https://stackoverflow.com/questions/47710377/how-to-implement-meshnormalmaterial-in-three-js-by-glsl#47710795\n\nconst vert = `\nprecision mediump float;\n\nuniform mat4 projection, view, model;\nattribute vec3 position, normal;\nvarying vec3 vViewPos;\n\nvoid main () {\n  vec4 mpos = projection * view * model * vec4(position, 1.0);\n  vViewPos = -(projection * view * model * vec4(position, 1.0)).xyz;\n  gl_Position = mpos;\n}\n`\n\nconst frag = `\nprecision mediump float;\n\nvarying vec3 vViewPos;\n\n#extension GL_OES_standard_derivatives: enable\n\nvec3 faceNormal(vec3 pos) {\n  vec3 fdx = dFdx(pos);\n  vec3 fdy = dFdy(pos);\n  return normalize(cross(fdx, fdy));\n}\n\n\nvoid main () {\n\n  vec3 normal = faceNormal(vViewPos);\n  vec3 view_nv  = normal;\n  vec3 nv_color = view_nv * 0.5 + 0.5; \n   gl_FragColor  = vec4(nv_color, 1.0);\n}\n`\n\ninterface PropsGeometry {\n  model: Mat4\n}\n\nexport type PropsNormalMaterial = PropsGeometry\n\ninterface Uniforms extends PropsNormalMaterial {}\ninterface Attributes {\n  position: Array<Vec3>\n}\n\nexport function createNormalMesh(regl: createRegl.Regl, mesh: Mesh) {\n  const draw = regl<Uniforms, Attributes, PropsNormalMaterial>({\n    vert,\n    frag,\n\n    attributes: {\n      position: mesh.positions,\n    },\n\n    uniforms: {\n      model: regl.prop<PropsGeometry, 'model'>('model'),\n    },\n\n    elements: () => mesh.cells,\n  })\n\n  return { draw }\n}\n","module.exports = {\n  cells: [\n    [1, 0, 2],\n    [3, 1, 2],\n    [4, 5, 6],\n    [5, 7, 6],\n    [0, 1, 5],\n    [4, 0, 5],\n    [1, 3, 5],\n    [3, 7, 5],\n    [2, 0, 4],\n    [2, 4, 6],\n    [2, 6, 3],\n    [6, 7, 3]\n  ],\n  positions: [\n    [0, 0, 0],\n    [0, 0, 1],\n    [1, 0, 0],\n    [1, 0, 1],\n    [0, 1, 0],\n    [0, 1, 1],\n    [1, 1, 0],\n    [1, 1, 1]\n  ]\n}\n","var prism = require('./cube')\n\nmodule.exports = createPrism\n\nfunction createPrism(size, pos) {\n  pos  = pos || [0,0,0]\n  size = size || [1,1,1]\n\n  if (!Array.isArray(size)) {\n    size = [size, size, size]\n  }\n\n  var prism = clonePrism()\n\n  for (var i = 0; i < prism.positions.length; i++) {\n    prism.positions[i][0] *= size[0]\n    prism.positions[i][1] *= size[1]\n    prism.positions[i][2] *= size[2]\n    prism.positions[i][0] += pos[0]\n    prism.positions[i][1] += pos[1]\n    prism.positions[i][2] += pos[2]\n  }\n\n  return prism\n}\n\nfunction clonePrism() {\n  return {\n    cells: prism.cells.map(function(d) {\n      return d.slice()\n    }),\n    positions: prism.positions.map(function(d) {\n      return d.slice()\n    })\n  }\n}\n","var prism  = require('rectangular-prism')\nvar truthy = function() { return true }\n\nmodule.exports = cubecube\n\nfunction cubecube(w, h, d, filter) {\n  filter = filter || truthy\n\n  var size  = [1/w, 1/h, 1/d]\n  var cubes = []\n\n  for (var x = 0; x < w; x++)\n  for (var y = 0; y < h; y++)\n  for (var z = 0; z < d; z++) {\n    if (filter(x, y, z)) {\n      var cube = prism(size, [x/w, y/h, z/d])\n\n      cubes.push(cube)\n      cube.centroid = [(x+0.5)/w, (y+0.5)/h, (z+0.5)/d]\n      cube.index = [x, y, z]\n    }\n  }\n\n  return cubes\n}\n","module.exports = unindex\n\nfunction unindex(positions, cells, out) {\n  if (positions.positions && positions.cells) {\n    out = cells\n    cells = positions.cells\n    positions = positions.positions\n  }\n\n  var dims = positions.length ? positions[0].length : 0\n  var points = cells.length ? cells[0].length : 0\n\n  out = out || new Float32Array(cells.length * points * dims)\n\n  if (points === 3 && dims === 2) {\n    for (var i = 0, n = 0, l = cells.length; i < l; i += 1) {\n      var cell = cells[i]\n      out[n++] = positions[cell[0]][0]\n      out[n++] = positions[cell[0]][1]\n      out[n++] = positions[cell[1]][0]\n      out[n++] = positions[cell[1]][1]\n      out[n++] = positions[cell[2]][0]\n      out[n++] = positions[cell[2]][1]\n    }\n  } else\n  if (points === 3 && dims === 3) {\n    for (var i = 0, n = 0, l = cells.length; i < l; i += 1) {\n      var cell = cells[i]\n      out[n++] = positions[cell[0]][0]\n      out[n++] = positions[cell[0]][1]\n      out[n++] = positions[cell[0]][2]\n      out[n++] = positions[cell[1]][0]\n      out[n++] = positions[cell[1]][1]\n      out[n++] = positions[cell[1]][2]\n      out[n++] = positions[cell[2]][0]\n      out[n++] = positions[cell[2]][1]\n      out[n++] = positions[cell[2]][2]\n    }\n  } else {\n    for (var i = 0, n = 0, l = cells.length; i < l; i += 1) {\n      var cell = cells[i]\n      for (var c = 0; c < cell.length; c++) {\n        var C = cell[c]\n        for (var k = 0; k < dims; k++) {\n          out[n++] = positions[C][k]\n        }\n      }\n    }\n  }\n\n  return out\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","var clone = (function() {\n'use strict';\n\nfunction _instanceof(obj, type) {\n  return type != null && obj instanceof type;\n}\n\nvar nativeMap;\ntry {\n  nativeMap = Map;\n} catch(_) {\n  // maybe a reference error because no `Map`. Give it a dummy value that no\n  // value will ever be an instanceof.\n  nativeMap = function() {};\n}\n\nvar nativeSet;\ntry {\n  nativeSet = Set;\n} catch(_) {\n  nativeSet = function() {};\n}\n\nvar nativePromise;\ntry {\n  nativePromise = Promise;\n} catch(_) {\n  nativePromise = function() {};\n}\n\n/**\n * Clones (copies) an Object using deep copying.\n *\n * This function supports circular references by default, but if you are certain\n * there are no circular references in your object, you can save some CPU time\n * by calling clone(obj, false).\n *\n * Caution: if `circular` is false and `parent` contains circular references,\n * your program may enter an infinite loop and crash.\n *\n * @param `parent` - the object to be cloned\n * @param `circular` - set to true if the object to be cloned may contain\n *    circular references. (optional - true by default)\n * @param `depth` - set to a number if the object is only to be cloned to\n *    a particular depth. (optional - defaults to Infinity)\n * @param `prototype` - sets the prototype to be used when cloning an object.\n *    (optional - defaults to parent prototype).\n * @param `includeNonEnumerable` - set to true if the non-enumerable properties\n *    should be cloned as well. Non-enumerable properties on the prototype\n *    chain will be ignored. (optional - false by default)\n*/\nfunction clone(parent, circular, depth, prototype, includeNonEnumerable) {\n  if (typeof circular === 'object') {\n    depth = circular.depth;\n    prototype = circular.prototype;\n    includeNonEnumerable = circular.includeNonEnumerable;\n    circular = circular.circular;\n  }\n  // maintain two arrays for circular references, where corresponding parents\n  // and children have the same index\n  var allParents = [];\n  var allChildren = [];\n\n  var useBuffer = typeof Buffer != 'undefined';\n\n  if (typeof circular == 'undefined')\n    circular = true;\n\n  if (typeof depth == 'undefined')\n    depth = Infinity;\n\n  // recurse this function so we don't reset allParents and allChildren\n  function _clone(parent, depth) {\n    // cloning null always returns null\n    if (parent === null)\n      return null;\n\n    if (depth === 0)\n      return parent;\n\n    var child;\n    var proto;\n    if (typeof parent != 'object') {\n      return parent;\n    }\n\n    if (_instanceof(parent, nativeMap)) {\n      child = new nativeMap();\n    } else if (_instanceof(parent, nativeSet)) {\n      child = new nativeSet();\n    } else if (_instanceof(parent, nativePromise)) {\n      child = new nativePromise(function (resolve, reject) {\n        parent.then(function(value) {\n          resolve(_clone(value, depth - 1));\n        }, function(err) {\n          reject(_clone(err, depth - 1));\n        });\n      });\n    } else if (clone.__isArray(parent)) {\n      child = [];\n    } else if (clone.__isRegExp(parent)) {\n      child = new RegExp(parent.source, __getRegExpFlags(parent));\n      if (parent.lastIndex) child.lastIndex = parent.lastIndex;\n    } else if (clone.__isDate(parent)) {\n      child = new Date(parent.getTime());\n    } else if (useBuffer && Buffer.isBuffer(parent)) {\n      if (Buffer.allocUnsafe) {\n        // Node.js >= 4.5.0\n        child = Buffer.allocUnsafe(parent.length);\n      } else {\n        // Older Node.js versions\n        child = new Buffer(parent.length);\n      }\n      parent.copy(child);\n      return child;\n    } else if (_instanceof(parent, Error)) {\n      child = Object.create(parent);\n    } else {\n      if (typeof prototype == 'undefined') {\n        proto = Object.getPrototypeOf(parent);\n        child = Object.create(proto);\n      }\n      else {\n        child = Object.create(prototype);\n        proto = prototype;\n      }\n    }\n\n    if (circular) {\n      var index = allParents.indexOf(parent);\n\n      if (index != -1) {\n        return allChildren[index];\n      }\n      allParents.push(parent);\n      allChildren.push(child);\n    }\n\n    if (_instanceof(parent, nativeMap)) {\n      parent.forEach(function(value, key) {\n        var keyChild = _clone(key, depth - 1);\n        var valueChild = _clone(value, depth - 1);\n        child.set(keyChild, valueChild);\n      });\n    }\n    if (_instanceof(parent, nativeSet)) {\n      parent.forEach(function(value) {\n        var entryChild = _clone(value, depth - 1);\n        child.add(entryChild);\n      });\n    }\n\n    for (var i in parent) {\n      var attrs;\n      if (proto) {\n        attrs = Object.getOwnPropertyDescriptor(proto, i);\n      }\n\n      if (attrs && attrs.set == null) {\n        continue;\n      }\n      child[i] = _clone(parent[i], depth - 1);\n    }\n\n    if (Object.getOwnPropertySymbols) {\n      var symbols = Object.getOwnPropertySymbols(parent);\n      for (var i = 0; i < symbols.length; i++) {\n        // Don't need to worry about cloning a symbol because it is a primitive,\n        // like a number or string.\n        var symbol = symbols[i];\n        var descriptor = Object.getOwnPropertyDescriptor(parent, symbol);\n        if (descriptor && !descriptor.enumerable && !includeNonEnumerable) {\n          continue;\n        }\n        child[symbol] = _clone(parent[symbol], depth - 1);\n        if (!descriptor.enumerable) {\n          Object.defineProperty(child, symbol, {\n            enumerable: false\n          });\n        }\n      }\n    }\n\n    if (includeNonEnumerable) {\n      var allPropertyNames = Object.getOwnPropertyNames(parent);\n      for (var i = 0; i < allPropertyNames.length; i++) {\n        var propertyName = allPropertyNames[i];\n        var descriptor = Object.getOwnPropertyDescriptor(parent, propertyName);\n        if (descriptor && descriptor.enumerable) {\n          continue;\n        }\n        child[propertyName] = _clone(parent[propertyName], depth - 1);\n        Object.defineProperty(child, propertyName, {\n          enumerable: false\n        });\n      }\n    }\n\n    return child;\n  }\n\n  return _clone(parent, depth);\n}\n\n/**\n * Simple flat clone using prototype, accepts only objects, usefull for property\n * override on FLAT configuration object (no nested props).\n *\n * USE WITH CAUTION! This may not behave as you wish if you do not know how this\n * works.\n */\nclone.clonePrototype = function clonePrototype(parent) {\n  if (parent === null)\n    return null;\n\n  var c = function () {};\n  c.prototype = parent;\n  return new c();\n};\n\n// private utility functions\n\nfunction __objToStr(o) {\n  return Object.prototype.toString.call(o);\n}\nclone.__objToStr = __objToStr;\n\nfunction __isDate(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object Date]';\n}\nclone.__isDate = __isDate;\n\nfunction __isArray(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object Array]';\n}\nclone.__isArray = __isArray;\n\nfunction __isRegExp(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object RegExp]';\n}\nclone.__isRegExp = __isRegExp;\n\nfunction __getRegExpFlags(re) {\n  var flags = '';\n  if (re.global) flags += 'g';\n  if (re.ignoreCase) flags += 'i';\n  if (re.multiline) flags += 'm';\n  return flags;\n}\nclone.__getRegExpFlags = __getRegExpFlags;\n\nreturn clone;\n})();\n\nif (typeof module === 'object' && module.exports) {\n  module.exports = clone;\n}\n","module.exports = add\n\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nfunction add (out, a, b) {\n  out[0] = a[0] + b[0]\n  out[1] = a[1] + b[1]\n  out[2] = a[2] + b[2]\n  out[3] = a[3] + b[3]\n  return out\n}\n","/**\n * Adds two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n * @function\n */\nmodule.exports = require('gl-vec4/add')\n","module.exports = calculateW\n\n/**\n * Calculates the W component of a quat from the X, Y, and Z components.\n * Assumes that quaternion is 1 unit in length.\n * Any existing W component will be ignored.\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate W component of\n * @returns {quat} out\n */\nfunction calculateW (out, a) {\n  var x = a[0], y = a[1], z = a[2]\n\n  out[0] = x\n  out[1] = y\n  out[2] = z\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z))\n  return out\n}\n","module.exports = clone\n\n/**\n * Creates a new vec4 initialized with values from an existing vector\n *\n * @param {vec4} a vector to clone\n * @returns {vec4} a new 4D vector\n */\nfunction clone (a) {\n  var out = new Float32Array(4)\n  out[0] = a[0]\n  out[1] = a[1]\n  out[2] = a[2]\n  out[3] = a[3]\n  return out\n}\n","/**\n * Creates a new quat initialized with values from an existing quaternion\n *\n * @param {quat} a quaternion to clone\n * @returns {quat} a new quaternion\n * @function\n */\nmodule.exports = require('gl-vec4/clone')\n","module.exports = conjugate\n\n/**\n * Calculates the conjugate of a quat\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate conjugate of\n * @returns {quat} out\n */\nfunction conjugate (out, a) {\n  out[0] = -a[0]\n  out[1] = -a[1]\n  out[2] = -a[2]\n  out[3] = a[3]\n  return out\n}\n","module.exports = copy\n\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the source vector\n * @returns {vec4} out\n */\nfunction copy (out, a) {\n  out[0] = a[0]\n  out[1] = a[1]\n  out[2] = a[2]\n  out[3] = a[3]\n  return out\n}\n","/**\n * Copy the values from one quat to another\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the source quaternion\n * @returns {quat} out\n * @function\n */\nmodule.exports = require('gl-vec4/copy')\n","module.exports = create\n\n/**\n * Creates a new identity quat\n *\n * @returns {quat} a new quaternion\n */\nfunction create () {\n  var out = new Float32Array(4)\n  out[0] = 0\n  out[1] = 0\n  out[2] = 0\n  out[3] = 1\n  return out\n}\n","module.exports = dot\n\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} dot product of a and b\n */\nfunction dot (a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3]\n}\n","/**\n * Calculates the dot product of two quat's\n *\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\nmodule.exports = require('gl-vec4/dot')\n","module.exports = fromMat3\n\n/**\n * Creates a quaternion from the given 3x3 rotation matrix.\n *\n * NOTE: The resultant quaternion is not normalized, so you should be sure\n * to renormalize the quaternion yourself where necessary.\n *\n * @param {quat} out the receiving quaternion\n * @param {mat3} m rotation matrix\n * @returns {quat} out\n * @function\n */\nfunction fromMat3 (out, m) {\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n  // article \"Quaternion Calculus and Fast Animation\".\n  var fTrace = m[0] + m[4] + m[8]\n  var fRoot\n\n  if (fTrace > 0.0) {\n    // |w| > 1/2, may as well choose w > 1/2\n    fRoot = Math.sqrt(fTrace + 1.0)  // 2w\n    out[3] = 0.5 * fRoot\n    fRoot = 0.5 / fRoot  // 1/(4w)\n    out[0] = (m[5] - m[7]) * fRoot\n    out[1] = (m[6] - m[2]) * fRoot\n    out[2] = (m[1] - m[3]) * fRoot\n  } else {\n    // |w| <= 1/2\n    var i = 0\n    if (m[4] > m[0]) {\n      i = 1\n    }\n    if (m[8] > m[i * 3 + i]) {\n      i = 2\n    }\n    var j = (i + 1) % 3\n    var k = (i + 2) % 3\n\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0)\n    out[i] = 0.5 * fRoot\n    fRoot = 0.5 / fRoot\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot\n  }\n\n  return out\n}\n","module.exports = fromValues\n\n/**\n * Creates a new vec4 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} a new 4D vector\n */\nfunction fromValues (x, y, z, w) {\n  var out = new Float32Array(4)\n  out[0] = x\n  out[1] = y\n  out[2] = z\n  out[3] = w\n  return out\n}\n","/**\n * Creates a new quat initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} a new quaternion\n * @function\n */\nmodule.exports = require('gl-vec4/fromValues')\n","module.exports = identity\n\n/**\n * Set a quat to the identity quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\nfunction identity (out) {\n  out[0] = 0\n  out[1] = 0\n  out[2] = 0\n  out[3] = 1\n  return out\n}\n","module.exports = invert\n\n/**\n * Calculates the inverse of a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate inverse of\n * @returns {quat} out\n */\nfunction invert (out, a) {\n  var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3],\n    dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3,\n    invDot = dot ? 1.0 / dot : 0\n\n  // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n  out[0] = -a0 * invDot\n  out[1] = -a1 * invDot\n  out[2] = -a2 * invDot\n  out[3] = a3 * invDot\n  return out\n}\n","module.exports = length\n\n/**\n * Calculates the length of a vec4\n *\n * @param {vec4} a vector to calculate length of\n * @returns {Number} length of a\n */\nfunction length (a) {\n  var x = a[0],\n    y = a[1],\n    z = a[2],\n    w = a[3]\n  return Math.sqrt(x * x + y * y + z * z + w * w)\n}\n","/**\n * Calculates the length of a quat\n *\n * @param {quat} a vector to calculate length of\n * @returns {Number} length of a\n * @function\n */\nmodule.exports = require('gl-vec4/length')\n","module.exports = lerp\n\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec4} out\n */\nfunction lerp (out, a, b, t) {\n  var ax = a[0],\n    ay = a[1],\n    az = a[2],\n    aw = a[3]\n  out[0] = ax + t * (b[0] - ax)\n  out[1] = ay + t * (b[1] - ay)\n  out[2] = az + t * (b[2] - az)\n  out[3] = aw + t * (b[3] - aw)\n  return out\n}\n","/**\n * Performs a linear interpolation between two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {quat} out\n * @function\n */\nmodule.exports = require('gl-vec4/lerp')\n","module.exports = multiply\n\n/**\n * Multiplies two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n */\nfunction multiply (out, a, b) {\n  var ax = a[0], ay = a[1], az = a[2], aw = a[3],\n    bx = b[0], by = b[1], bz = b[2], bw = b[3]\n\n  out[0] = ax * bw + aw * bx + ay * bz - az * by\n  out[1] = ay * bw + aw * by + az * bx - ax * bz\n  out[2] = az * bw + aw * bz + ax * by - ay * bx\n  out[3] = aw * bw - ax * bx - ay * by - az * bz\n  return out\n}\n","module.exports = normalize\n\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to normalize\n * @returns {vec4} out\n */\nfunction normalize (out, a) {\n  var x = a[0],\n    y = a[1],\n    z = a[2],\n    w = a[3]\n  var len = x * x + y * y + z * z + w * w\n  if (len > 0) {\n    len = 1 / Math.sqrt(len)\n    out[0] = x * len\n    out[1] = y * len\n    out[2] = z * len\n    out[3] = w * len\n  }\n  return out\n}\n","/**\n * Normalize a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quaternion to normalize\n * @returns {quat} out\n * @function\n */\nmodule.exports = require('gl-vec4/normalize')\n","module.exports = rotateX\n\n/**\n * Rotates a quaternion by the given angle about the X axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nfunction rotateX (out, a, rad) {\n  rad *= 0.5\n\n  var ax = a[0], ay = a[1], az = a[2], aw = a[3],\n    bx = Math.sin(rad), bw = Math.cos(rad)\n\n  out[0] = ax * bw + aw * bx\n  out[1] = ay * bw + az * bx\n  out[2] = az * bw - ay * bx\n  out[3] = aw * bw - ax * bx\n  return out\n}\n","module.exports = rotateY\n\n/**\n * Rotates a quaternion by the given angle about the Y axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nfunction rotateY (out, a, rad) {\n  rad *= 0.5\n\n  var ax = a[0], ay = a[1], az = a[2], aw = a[3],\n    by = Math.sin(rad), bw = Math.cos(rad)\n\n  out[0] = ax * bw - az * by\n  out[1] = ay * bw + aw * by\n  out[2] = az * bw + ax * by\n  out[3] = aw * bw - ay * by\n  return out\n}\n","module.exports = rotateZ\n\n/**\n * Rotates a quaternion by the given angle about the Z axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nfunction rotateZ (out, a, rad) {\n  rad *= 0.5\n\n  var ax = a[0], ay = a[1], az = a[2], aw = a[3],\n    bz = Math.sin(rad), bw = Math.cos(rad)\n\n  out[0] = ax * bw + ay * bz\n  out[1] = ay * bw - ax * bz\n  out[2] = az * bw + aw * bz\n  out[3] = aw * bw - az * bz\n  return out\n}\n","module.exports = setAxisAngle\n\n/**\n * Sets a quat from the given angle and rotation axis,\n * then returns it.\n *\n * @param {quat} out the receiving quaternion\n * @param {vec3} axis the axis around which to rotate\n * @param {Number} rad the angle in radians\n * @returns {quat} out\n **/\nfunction setAxisAngle (out, axis, rad) {\n  rad = rad * 0.5\n  var s = Math.sin(rad)\n  out[0] = s * axis[0]\n  out[1] = s * axis[1]\n  out[2] = s * axis[2]\n  out[3] = Math.cos(rad)\n  return out\n}\n","var vecDot = require('gl-vec3/dot')\nvar vecCross = require('gl-vec3/cross')\nvar vecLength = require('gl-vec3/length')\nvar vecNormalize = require('gl-vec3/normalize')\n\nvar quatNormalize = require('./normalize')\nvar quatAxisAngle = require('./setAxisAngle')\n\nmodule.exports = rotationTo\n\nvar tmpvec3 = [0, 0, 0]\nvar xUnitVec3 = [1, 0, 0]\nvar yUnitVec3 = [0, 1, 0]\n\n/**\n * Sets a quaternion to represent the shortest rotation from one\n * vector to another.\n *\n * Both vectors are assumed to be unit length.\n *\n * @param {quat} out the receiving quaternion.\n * @param {vec3} a the initial vector\n * @param {vec3} b the destination vector\n * @returns {quat} out\n */\nfunction rotationTo (out, a, b) {\n  var dot = vecDot(a, b)\n  if (dot < -0.999999) {\n    vecCross(tmpvec3, xUnitVec3, a)\n    if (vecLength(tmpvec3) < 0.000001) {\n      vecCross(tmpvec3, yUnitVec3, a)\n    }\n    vecNormalize(tmpvec3, tmpvec3)\n    quatAxisAngle(out, tmpvec3, Math.PI)\n    return out\n  } else if (dot > 0.999999) {\n    out[0] = 0\n    out[1] = 0\n    out[2] = 0\n    out[3] = 1\n    return out\n  } else {\n    vecCross(tmpvec3, a, b)\n    out[0] = tmpvec3[0]\n    out[1] = tmpvec3[1]\n    out[2] = tmpvec3[2]\n    out[3] = 1 + dot\n    return quatNormalize(out, out)\n  }\n}\n","module.exports = scale\n\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\nfunction scale (out, a, b) {\n  out[0] = a[0] * b\n  out[1] = a[1] * b\n  out[2] = a[2] * b\n  out[3] = a[3] * b\n  return out\n}\n","/**\n * Scales a quat by a scalar number\n *\n * @param {quat} out the receiving vector\n * @param {quat} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {quat} out\n * @function\n */\nmodule.exports = require('gl-vec4/scale')\n","module.exports = set\n\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\nfunction set (out, x, y, z, w) {\n  out[0] = x\n  out[1] = y\n  out[2] = z\n  out[3] = w\n  return out\n}\n","/**\n * Set the components of a quat to the given values\n *\n * @param {quat} out the receiving quaternion\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} out\n * @function\n */\nmodule.exports = require('gl-vec4/set')\n","module.exports = create\n\n/**\n * Creates a new identity mat3\n *\n * @alias mat3.create\n * @returns {mat3} a new 3x3 matrix\n */\nfunction create() {\n  var out = new Float32Array(9)\n  out[0] = 1\n  out[1] = 0\n  out[2] = 0\n  out[3] = 0\n  out[4] = 1\n  out[5] = 0\n  out[6] = 0\n  out[7] = 0\n  out[8] = 1\n  return out\n}\n","var mat3create = require('gl-mat3/create')\nvar fromMat3 = require('./fromMat3')\nvar normalize = require('./normalize')\n\nmodule.exports = setAxes\n\nvar matr = mat3create()\n\n/**\n * Sets the specified quaternion with values corresponding to the given\n * axes. Each axis is a vec3 and is expected to be unit length and\n * perpendicular to all other specified axes.\n *\n * @param {vec3} view  the vector representing the viewing direction\n * @param {vec3} right the vector representing the local \"right\" direction\n * @param {vec3} up    the vector representing the local \"up\" direction\n * @returns {quat} out\n */\nfunction setAxes (out, view, right, up) {\n  matr[0] = right[0]\n  matr[3] = right[1]\n  matr[6] = right[2]\n\n  matr[1] = up[0]\n  matr[4] = up[1]\n  matr[7] = up[2]\n\n  matr[2] = -view[0]\n  matr[5] = -view[1]\n  matr[8] = -view[2]\n\n  return normalize(out, fromMat3(out, matr))\n}\n","module.exports = slerp\n\n/**\n * Performs a spherical linear interpolation between two quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {quat} out\n */\nfunction slerp (out, a, b, t) {\n  // benchmarks:\n  //    http://jsperf.com/quaternion-slerp-implementations\n\n  var ax = a[0], ay = a[1], az = a[2], aw = a[3],\n    bx = b[0], by = b[1], bz = b[2], bw = b[3]\n\n  var omega, cosom, sinom, scale0, scale1\n\n  // calc cosine\n  cosom = ax * bx + ay * by + az * bz + aw * bw\n  // adjust signs (if necessary)\n  if (cosom < 0.0) {\n    cosom = -cosom\n    bx = -bx\n    by = -by\n    bz = -bz\n    bw = -bw\n  }\n  // calculate coefficients\n  if ((1.0 - cosom) > 0.000001) {\n    // standard case (slerp)\n    omega = Math.acos(cosom)\n    sinom = Math.sin(omega)\n    scale0 = Math.sin((1.0 - t) * omega) / sinom\n    scale1 = Math.sin(t * omega) / sinom\n  } else {\n    // \"from\" and \"to\" quaternions are very close\n    //  ... so we can do a linear interpolation\n    scale0 = 1.0 - t\n    scale1 = t\n  }\n  // calculate final values\n  out[0] = scale0 * ax + scale1 * bx\n  out[1] = scale0 * ay + scale1 * by\n  out[2] = scale0 * az + scale1 * bz\n  out[3] = scale0 * aw + scale1 * bw\n\n  return out\n}\n","var slerp = require('./slerp')\n\nmodule.exports = sqlerp\n\nvar temp1 = [0, 0, 0, 1]\nvar temp2 = [0, 0, 0, 1]\n\n/**\n * Performs a spherical linear interpolation with two control points\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {quat} c the third operand\n * @param {quat} d the fourth operand\n * @param {Number} t interpolation amount\n * @returns {quat} out\n */\nfunction sqlerp (out, a, b, c, d, t) {\n  slerp(temp1, a, d, t)\n  slerp(temp2, b, c, t)\n  slerp(out, temp1, temp2, 2 * t * (1 - t))\n\n  return out\n}\n","module.exports = squaredLength\n\n/**\n * Calculates the squared length of a vec4\n *\n * @param {vec4} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nfunction squaredLength (a) {\n  var x = a[0],\n    y = a[1],\n    z = a[2],\n    w = a[3]\n  return x * x + y * y + z * z + w * w\n}\n","/**\n * Calculates the squared length of a quat\n *\n * @param {quat} a vector to calculate squared length of\n * @returns {Number} squared length of a\n * @function\n */\nmodule.exports = require('gl-vec4/squaredLength')\n","module.exports = {\n  add: require('./add'),\n  calculateW: require('./calculateW'),\n  clone: require('./clone'),\n  conjugate: require('./conjugate'),\n  copy: require('./copy'),\n  create: require('./create'),\n  dot: require('./dot'),\n  fromMat3: require('./fromMat3'),\n  fromValues: require('./fromValues'),\n  identity: require('./identity'),\n  invert: require('./invert'),\n  length: require('./length'),\n  lerp: require('./lerp'),\n  multiply: require('./multiply'),\n  normalize: require('./normalize'),\n  rotateX: require('./rotateX'),\n  rotateY: require('./rotateY'),\n  rotateZ: require('./rotateZ'),\n  rotationTo: require('./rotationTo'),\n  scale: require('./scale'),\n  set: require('./set'),\n  setAxes: require('./setAxes'),\n  setAxisAngle: require('./setAxisAngle'),\n  slerp: require('./slerp'),\n  sqlerp: require('./sqlerp'),\n  squaredLength: require('./squaredLength')\n}\n","import createRegl from \"regl\";\n\nconst image: createRegl.NDArrayLike = {\n  data: [0, 0, 0, 255,1,1,1,255,1,1,1,255,1,2,2,255,1,2,2,255,2,3,3,255,2,3,3,255,2,4,4,255,2,4,4,255,3,5,5,255,3,6,7,255,3,6,7,255,4,7,8,255,4,7,8,255,4,8,9,255,5,9,11,255,5,9,11,255,5,10,12,255,6,11,14,255,6,11,14,255,6,12,15,255,7,13,17,255,7,14,18,255,7,14,18,255,8,15,20,255,8,16,21,255,9,17,23,255,9,17,23,255,9,18,25,255,10,19,26,255,10,20,28,255,11,21,30,255,11,21,30,255,11,22,31,255,12,23,33,255,13,24,35,255,12,26,36,255,13,27,38,255,13,28,39,255,13,28,39,255,14,29,42,255,14,31,44,255,15,32,46,255,15,33,47,255,16,34,49,255,16,36,51,255,17,37,53,255,17,38,54,255,18,39,56,255,18,41,58,255,19,42,60,255,19,43,61,255,20,45,63,255,20,46,64,255,21,47,66,255,21,48,67,255,22,50,69,255,22,51,71,255,23,52,72,255,24,54,74,255,24,55,75,255,25,56,77,255,24,58,78,255,25,59,80,255,25,60,81,255,26,62,82,255,26,63,84,255,27,64,85,255,28,65,85,255,29,65,86,255,30,66,87,255,31,67,88,255,32,68,89,255,34,70,90,255,35,71,91,255,38,71,92,255,39,72,93,255,40,73,93,255,41,74,94,255,42,75,95,255,43,76,96,255,46,77,97,255,47,78,98,255,48,79,99,255,50,80,99,255,51,81,100,255,52,82,101,255,54,83,102,255,56,84,103,255,57,85,104,255,59,86,105,255,60,87,105,255,61,88,106,255,64,90,108,255,66,91,109,255,67,92,109,255,68,92,110,255,70,93,111,255,73,95,112,255,74,96,113,255,76,97,114,255,77,98,114,255,79,99,115,255,82,101,116,255,83,101,117,255,85,102,118,255,86,103,118,255,88,104,120,255,92,106,121,255,93,107,121,255,95,108,122,255,96,109,123,255,100,111,124,255,101,112,125,255,103,112,125,255,104,113,126,255,108,115,126,255,109,116,128,255,111,117,128,255,112,118,128,255,116,120,130,255,117,121,130,255,119,122,131,255,120,123,132,255,123,124,134,255,125,125,134,255,126,126,135,255,128,127,136,255,131,129,137,255,133,130,138,255,134,131,138,255,136,132,139,255,138,133,140,255,141,134,141,255,142,135,142,255,144,136,142,255,146,137,143,255,149,139,144,255,150,140,145,255,152,141,146,255,153,142,146,255,156,144,148,255,157,145,148,255,159,146,149,255,160,147,150,255,163,149,151,255,165,150,152,255,166,150,152,255,168,151,153,255,171,153,154,255,172,154,155,255,174,155,156,255,175,156,157,255,177,157,158,255,179,159,159,255,182,159,160,255,183,160,160,255,184,161,161,255,186,162,162,255,188,164,163,255,190,165,164,255,191,166,165,255,192,167,165,255,193,167,166,255,196,169,168,255,197,170,168,255,198,171,169,255,199,172,170,255,200,173,171,255,203,174,172,255,204,175,173,255,205,176,173,255,206,177,173,255,207,178,175,255,208,179,175,255,209,180,177,255,211,181,177,255,213,183,178,255,214,184,179,255,215,185,180,255,216,186,181,255,218,187,182,255,219,188,184,255,220,190,185,255,222,192,187,255,223,193,188,255,224,194,189,255,225,195,190,255,226,197,191,255,227,198,193,255,228,199,194,255,228,200,195,255,229,201,196,255,229,203,197,255,230,204,199,255,230,205,201,255,231,206,202,255,231,207,203,255,232,208,204,255,233,210,206,255,233,211,207,255,234,212,208,255,234,213,209,255,235,214,211,255,234,215,212,255,235,216,213,255,235,217,214,255,236,218,215,255,236,219,217,255,237,220,218,255,237,222,219,255,238,223,220,255,238,224,222,255,239,225,223,255,239,226,224,255,240,227,225,255,240,228,226,255,241,229,228,255,241,229,228,255,241,230,229,255,242,231,230,255,242,232,231,255,243,234,232,255,244,235,233,255,244,236,234,255,244,236,234,255,245,237,235,255,245,238,236,255,246,239,237,255,246,240,238,255,246,240,238,255,247,241,240,255,247,242,241,255,248,242,242,255,248,242,242,255,248,243,243,255,249,244,244,255,249,245,245,255,249,245,245,255,250,246,246,255,250,247,247,255,250,247,247,255,251,248,248,255,251,249,249,255,251,249,249,255,252,250,250,255,252,250,250,255,252,251,250,255,253,252,251,255,253,252,251,255,253,252,252,255,253,252,252,255,254,253,253,255,254,253,253,255,254,254,254,255,254,254,254,255],\n  shape: [ 1, 256, 4 ],\n  stride: [ 4, 4, 1 ],\n  offset: 0 }\nexport default image\n","module.exports = faceNormals\n\nfunction faceNormals(verts, output) {\n  var l = verts.length\n  if (!output) output = new Float32Array(l)\n\n  for (var i = 0; i < l; i += 9) {\n    var p1x = verts[i+3] - verts[i]\n    var p1y = verts[i+4] - verts[i+1]\n    var p1z = verts[i+5] - verts[i+2]\n\n    var p2x = verts[i+6] - verts[i]\n    var p2y = verts[i+7] - verts[i+1]\n    var p2z = verts[i+8] - verts[i+2]\n\n    var p3x = p1y * p2z - p1z * p2y\n    var p3y = p1z * p2x - p1x * p2z\n    var p3z = p1x * p2y - p1y * p2x\n\n    var mag = Math.sqrt(p3x * p3x + p3y * p3y + p3z * p3z)\n    if (mag === 0) {\n      output[i  ] = 0\n      output[i+1] = 0\n      output[i+2] = 0\n\n      output[i+3] = 0\n      output[i+4] = 0\n      output[i+5] = 0\n\n      output[i+6] = 0\n      output[i+7] = 0\n      output[i+8] = 0\n    } else {\n      p3x = p3x / mag\n      p3y = p3y / mag\n      p3z = p3z / mag\n\n      output[i  ] = p3x\n      output[i+1] = p3y\n      output[i+2] = p3z\n\n      output[i+3] = p3x\n      output[i+4] = p3y\n      output[i+5] = p3z\n\n      output[i+6] = p3x\n      output[i+7] = p3y\n      output[i+8] = p3z\n    }\n  }\n\n  return output\n}\n","/**\r\n * Common utilities\r\n * @module glMatrix\r\n */\r\n\r\n// Configuration Constants\r\nexport var EPSILON = 0.000001;\r\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\r\nexport var RANDOM = Math.random;\r\n\r\n/**\r\n * Sets the type of array used when creating new vectors and matrices\r\n *\r\n * @param {Type} type Array type, such as Float32Array or Array\r\n */\r\nexport function setMatrixArrayType(type) {\r\n  ARRAY_TYPE = type;\r\n}\r\n\r\nvar degree = Math.PI / 180;\r\n\r\n/**\r\n * Convert Degree To Radian\r\n *\r\n * @param {Number} a Angle in Degrees\r\n */\r\nexport function toRadian(a) {\r\n  return a * degree;\r\n}\r\n\r\n/**\r\n * Tests whether or not the arguments have approximately the same value, within an absolute\r\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\r\n * than or equal to 1.0, and a relative tolerance is used for larger values)\r\n *\r\n * @param {Number} a The first number to test.\r\n * @param {Number} b The second number to test.\r\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\r\n}","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 2x2 Matrix\r\n * @module mat2\r\n */\r\n\r\n/**\r\n * Creates a new identity mat2\r\n *\r\n * @returns {mat2} a new 2x2 matrix\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n  }\r\n  out[0] = 1;\r\n  out[3] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new mat2 initialized with values from an existing matrix\r\n *\r\n * @param {mat2} a matrix to clone\r\n * @returns {mat2} a new 2x2 matrix\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one mat2 to another\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set a mat2 to the identity matrix\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @returns {mat2} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Create a new mat2 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\r\n * @returns {mat2} out A new 2x2 matrix\r\n */\r\nexport function fromValues(m00, m01, m10, m11) {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m10;\r\n  out[3] = m11;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a mat2 to the given values\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\r\n * @returns {mat2} out\r\n */\r\nexport function set(out, m00, m01, m10, m11) {\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m10;\r\n  out[3] = m11;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transpose the values of a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\r\nexport function transpose(out, a) {\r\n  // If we are transposing ourselves we can skip a few steps but have to cache\r\n  // some values\r\n  if (out === a) {\r\n    var a1 = a[1];\r\n    out[1] = a[2];\r\n    out[2] = a1;\r\n  } else {\r\n    out[0] = a[0];\r\n    out[1] = a[2];\r\n    out[2] = a[1];\r\n    out[3] = a[3];\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Inverts a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\r\nexport function invert(out, a) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n\r\n  // Calculate the determinant\r\n  var det = a0 * a3 - a2 * a1;\r\n\r\n  if (!det) {\r\n    return null;\r\n  }\r\n  det = 1.0 / det;\r\n\r\n  out[0] = a3 * det;\r\n  out[1] = -a1 * det;\r\n  out[2] = -a2 * det;\r\n  out[3] = a0 * det;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the adjugate of a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\r\nexport function adjoint(out, a) {\r\n  // Caching this value is nessecary if out == a\r\n  var a0 = a[0];\r\n  out[0] = a[3];\r\n  out[1] = -a[1];\r\n  out[2] = -a[2];\r\n  out[3] = a0;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the determinant of a mat2\r\n *\r\n * @param {mat2} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\r\nexport function determinant(a) {\r\n  return a[0] * a[3] - a[2] * a[1];\r\n}\r\n\r\n/**\r\n * Multiplies two mat2's\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @returns {mat2} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3];\r\n  out[0] = a0 * b0 + a2 * b1;\r\n  out[1] = a1 * b0 + a3 * b1;\r\n  out[2] = a0 * b2 + a2 * b3;\r\n  out[3] = a1 * b2 + a3 * b3;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a mat2 by the given angle\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2} out\r\n */\r\nexport function rotate(out, a, rad) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  out[0] = a0 * c + a2 * s;\r\n  out[1] = a1 * c + a3 * s;\r\n  out[2] = a0 * -s + a2 * c;\r\n  out[3] = a1 * -s + a3 * c;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales the mat2 by the dimensions in the given vec2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the matrix to rotate\r\n * @param {vec2} v the vec2 to scale the matrix by\r\n * @returns {mat2} out\r\n **/\r\nexport function scale(out, a, v) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var v0 = v[0],\r\n      v1 = v[1];\r\n  out[0] = a0 * v0;\r\n  out[1] = a1 * v0;\r\n  out[2] = a2 * v1;\r\n  out[3] = a3 * v1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2.identity(dest);\r\n *     mat2.rotate(dest, dest, rad);\r\n *\r\n * @param {mat2} out mat2 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2} out\r\n */\r\nexport function fromRotation(out, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  out[0] = c;\r\n  out[1] = s;\r\n  out[2] = -s;\r\n  out[3] = c;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2.identity(dest);\r\n *     mat2.scale(dest, dest, vec);\r\n *\r\n * @param {mat2} out mat2 receiving operation result\r\n * @param {vec2} v Scaling vector\r\n * @returns {mat2} out\r\n */\r\nexport function fromScaling(out, v) {\r\n  out[0] = v[0];\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = v[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a mat2\r\n *\r\n * @param {mat2} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\r\nexport function str(a) {\r\n  return 'mat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\r\n}\r\n\r\n/**\r\n * Returns Frobenius norm of a mat2\r\n *\r\n * @param {mat2} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\r\nexport function frob(a) {\r\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2));\r\n}\r\n\r\n/**\r\n * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix\r\n * @param {mat2} L the lower triangular matrix\r\n * @param {mat2} D the diagonal matrix\r\n * @param {mat2} U the upper triangular matrix\r\n * @param {mat2} a the input matrix to factorize\r\n */\r\n\r\nexport function LDU(L, D, U, a) {\r\n  L[2] = a[2] / a[0];\r\n  U[0] = a[0];\r\n  U[1] = a[1];\r\n  U[3] = a[3] - L[2] * U[1];\r\n  return [L, D, U];\r\n}\r\n\r\n/**\r\n * Adds two mat2's\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @returns {mat2} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @returns {mat2} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  out[3] = a[3] - b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat2} a The first matrix.\r\n * @param {mat2} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat2} a The first matrix.\r\n * @param {mat2} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\r\n}\r\n\r\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat2} out\r\n */\r\nexport function multiplyScalar(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two mat2's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat2} out the receiving vector\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat2} out\r\n */\r\nexport function multiplyScalarAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  out[3] = a[3] + b[3] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Alias for {@link mat2.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link mat2.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 2x3 Matrix\r\n * @module mat2d\r\n *\r\n * @description\r\n * A mat2d contains six elements defined as:\r\n * <pre>\r\n * [a, c, tx,\r\n *  b, d, ty]\r\n * </pre>\r\n * This is a short form for the 3x3 matrix:\r\n * <pre>\r\n * [a, c, tx,\r\n *  b, d, ty,\r\n *  0, 0, 1]\r\n * </pre>\r\n * The last row is ignored so the array is shorter and operations are faster.\r\n */\r\n\r\n/**\r\n * Creates a new identity mat2d\r\n *\r\n * @returns {mat2d} a new 2x3 matrix\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(6);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n    out[4] = 0;\r\n    out[5] = 0;\r\n  }\r\n  out[0] = 1;\r\n  out[3] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new mat2d initialized with values from an existing matrix\r\n *\r\n * @param {mat2d} a matrix to clone\r\n * @returns {mat2d} a new 2x3 matrix\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(6);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one mat2d to another\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the source matrix\r\n * @returns {mat2d} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set a mat2d to the identity matrix\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @returns {mat2d} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 1;\r\n  out[4] = 0;\r\n  out[5] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Create a new mat2d with the given values\r\n *\r\n * @param {Number} a Component A (index 0)\r\n * @param {Number} b Component B (index 1)\r\n * @param {Number} c Component C (index 2)\r\n * @param {Number} d Component D (index 3)\r\n * @param {Number} tx Component TX (index 4)\r\n * @param {Number} ty Component TY (index 5)\r\n * @returns {mat2d} A new mat2d\r\n */\r\nexport function fromValues(a, b, c, d, tx, ty) {\r\n  var out = new glMatrix.ARRAY_TYPE(6);\r\n  out[0] = a;\r\n  out[1] = b;\r\n  out[2] = c;\r\n  out[3] = d;\r\n  out[4] = tx;\r\n  out[5] = ty;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a mat2d to the given values\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {Number} a Component A (index 0)\r\n * @param {Number} b Component B (index 1)\r\n * @param {Number} c Component C (index 2)\r\n * @param {Number} d Component D (index 3)\r\n * @param {Number} tx Component TX (index 4)\r\n * @param {Number} ty Component TY (index 5)\r\n * @returns {mat2d} out\r\n */\r\nexport function set(out, a, b, c, d, tx, ty) {\r\n  out[0] = a;\r\n  out[1] = b;\r\n  out[2] = c;\r\n  out[3] = d;\r\n  out[4] = tx;\r\n  out[5] = ty;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Inverts a mat2d\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the source matrix\r\n * @returns {mat2d} out\r\n */\r\nexport function invert(out, a) {\r\n  var aa = a[0],\r\n      ab = a[1],\r\n      ac = a[2],\r\n      ad = a[3];\r\n  var atx = a[4],\r\n      aty = a[5];\r\n\r\n  var det = aa * ad - ab * ac;\r\n  if (!det) {\r\n    return null;\r\n  }\r\n  det = 1.0 / det;\r\n\r\n  out[0] = ad * det;\r\n  out[1] = -ab * det;\r\n  out[2] = -ac * det;\r\n  out[3] = aa * det;\r\n  out[4] = (ac * aty - ad * atx) * det;\r\n  out[5] = (ab * atx - aa * aty) * det;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the determinant of a mat2d\r\n *\r\n * @param {mat2d} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\r\nexport function determinant(a) {\r\n  return a[0] * a[3] - a[1] * a[2];\r\n}\r\n\r\n/**\r\n * Multiplies two mat2d's\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3],\r\n      b4 = b[4],\r\n      b5 = b[5];\r\n  out[0] = a0 * b0 + a2 * b1;\r\n  out[1] = a1 * b0 + a3 * b1;\r\n  out[2] = a0 * b2 + a2 * b3;\r\n  out[3] = a1 * b2 + a3 * b3;\r\n  out[4] = a0 * b4 + a2 * b5 + a4;\r\n  out[5] = a1 * b4 + a3 * b5 + a5;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a mat2d by the given angle\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2d} out\r\n */\r\nexport function rotate(out, a, rad) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5];\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  out[0] = a0 * c + a2 * s;\r\n  out[1] = a1 * c + a3 * s;\r\n  out[2] = a0 * -s + a2 * c;\r\n  out[3] = a1 * -s + a3 * c;\r\n  out[4] = a4;\r\n  out[5] = a5;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales the mat2d by the dimensions in the given vec2\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to translate\r\n * @param {vec2} v the vec2 to scale the matrix by\r\n * @returns {mat2d} out\r\n **/\r\nexport function scale(out, a, v) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5];\r\n  var v0 = v[0],\r\n      v1 = v[1];\r\n  out[0] = a0 * v0;\r\n  out[1] = a1 * v0;\r\n  out[2] = a2 * v1;\r\n  out[3] = a3 * v1;\r\n  out[4] = a4;\r\n  out[5] = a5;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Translates the mat2d by the dimensions in the given vec2\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to translate\r\n * @param {vec2} v the vec2 to translate the matrix by\r\n * @returns {mat2d} out\r\n **/\r\nexport function translate(out, a, v) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5];\r\n  var v0 = v[0],\r\n      v1 = v[1];\r\n  out[0] = a0;\r\n  out[1] = a1;\r\n  out[2] = a2;\r\n  out[3] = a3;\r\n  out[4] = a0 * v0 + a2 * v1 + a4;\r\n  out[5] = a1 * v0 + a3 * v1 + a5;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.rotate(dest, dest, rad);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2d} out\r\n */\r\nexport function fromRotation(out, rad) {\r\n  var s = Math.sin(rad),\r\n      c = Math.cos(rad);\r\n  out[0] = c;\r\n  out[1] = s;\r\n  out[2] = -s;\r\n  out[3] = c;\r\n  out[4] = 0;\r\n  out[5] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.scale(dest, dest, vec);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {vec2} v Scaling vector\r\n * @returns {mat2d} out\r\n */\r\nexport function fromScaling(out, v) {\r\n  out[0] = v[0];\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = v[1];\r\n  out[4] = 0;\r\n  out[5] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.translate(dest, dest, vec);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {vec2} v Translation vector\r\n * @returns {mat2d} out\r\n */\r\nexport function fromTranslation(out, v) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 1;\r\n  out[4] = v[0];\r\n  out[5] = v[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a mat2d\r\n *\r\n * @param {mat2d} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\r\nexport function str(a) {\r\n  return 'mat2d(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ')';\r\n}\r\n\r\n/**\r\n * Returns Frobenius norm of a mat2d\r\n *\r\n * @param {mat2d} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\r\nexport function frob(a) {\r\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + 1);\r\n}\r\n\r\n/**\r\n * Adds two mat2d's\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  out[4] = a[4] + b[4];\r\n  out[5] = a[5] + b[5];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  out[3] = a[3] - b[3];\r\n  out[4] = a[4] - b[4];\r\n  out[5] = a[5] - b[5];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat2d} out\r\n */\r\nexport function multiplyScalar(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  out[4] = a[4] * b;\r\n  out[5] = a[5] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two mat2d's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat2d} out the receiving vector\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat2d} out\r\n */\r\nexport function multiplyScalarAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  out[3] = a[3] + b[3] * scale;\r\n  out[4] = a[4] + b[4] * scale;\r\n  out[5] = a[5] + b[5] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat2d} a The first matrix.\r\n * @param {mat2d} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5];\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat2d} a The first matrix.\r\n * @param {mat2d} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3],\r\n      b4 = b[4],\r\n      b5 = b[5];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5));\r\n}\r\n\r\n/**\r\n * Alias for {@link mat2d.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link mat2d.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 3x3 Matrix\r\n * @module mat3\r\n */\r\n\r\n/**\r\n * Creates a new identity mat3\r\n *\r\n * @returns {mat3} a new 3x3 matrix\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(9);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n    out[3] = 0;\r\n    out[5] = 0;\r\n    out[6] = 0;\r\n    out[7] = 0;\r\n  }\r\n  out[0] = 1;\r\n  out[4] = 1;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copies the upper-left 3x3 values into the given mat3.\r\n *\r\n * @param {mat3} out the receiving 3x3 matrix\r\n * @param {mat4} a   the source 4x4 matrix\r\n * @returns {mat3} out\r\n */\r\nexport function fromMat4(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[4];\r\n  out[4] = a[5];\r\n  out[5] = a[6];\r\n  out[6] = a[8];\r\n  out[7] = a[9];\r\n  out[8] = a[10];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new mat3 initialized with values from an existing matrix\r\n *\r\n * @param {mat3} a matrix to clone\r\n * @returns {mat3} a new 3x3 matrix\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(9);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one mat3 to another\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Create a new mat3 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} A new mat3\r\n */\r\nexport function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\r\n  var out = new glMatrix.ARRAY_TYPE(9);\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m02;\r\n  out[3] = m10;\r\n  out[4] = m11;\r\n  out[5] = m12;\r\n  out[6] = m20;\r\n  out[7] = m21;\r\n  out[8] = m22;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a mat3 to the given values\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} out\r\n */\r\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m02;\r\n  out[3] = m10;\r\n  out[4] = m11;\r\n  out[5] = m12;\r\n  out[6] = m20;\r\n  out[7] = m21;\r\n  out[8] = m22;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set a mat3 to the identity matrix\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @returns {mat3} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 1;\r\n  out[5] = 0;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transpose the values of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\r\nexport function transpose(out, a) {\r\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\r\n  if (out === a) {\r\n    var a01 = a[1],\r\n        a02 = a[2],\r\n        a12 = a[5];\r\n    out[1] = a[3];\r\n    out[2] = a[6];\r\n    out[3] = a01;\r\n    out[5] = a[7];\r\n    out[6] = a02;\r\n    out[7] = a12;\r\n  } else {\r\n    out[0] = a[0];\r\n    out[1] = a[3];\r\n    out[2] = a[6];\r\n    out[3] = a[1];\r\n    out[4] = a[4];\r\n    out[5] = a[7];\r\n    out[6] = a[2];\r\n    out[7] = a[5];\r\n    out[8] = a[8];\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Inverts a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\r\nexport function invert(out, a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2];\r\n  var a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5];\r\n  var a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8];\r\n\r\n  var b01 = a22 * a11 - a12 * a21;\r\n  var b11 = -a22 * a10 + a12 * a20;\r\n  var b21 = a21 * a10 - a11 * a20;\r\n\r\n  // Calculate the determinant\r\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\r\n\r\n  if (!det) {\r\n    return null;\r\n  }\r\n  det = 1.0 / det;\r\n\r\n  out[0] = b01 * det;\r\n  out[1] = (-a22 * a01 + a02 * a21) * det;\r\n  out[2] = (a12 * a01 - a02 * a11) * det;\r\n  out[3] = b11 * det;\r\n  out[4] = (a22 * a00 - a02 * a20) * det;\r\n  out[5] = (-a12 * a00 + a02 * a10) * det;\r\n  out[6] = b21 * det;\r\n  out[7] = (-a21 * a00 + a01 * a20) * det;\r\n  out[8] = (a11 * a00 - a01 * a10) * det;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the adjugate of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\r\nexport function adjoint(out, a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2];\r\n  var a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5];\r\n  var a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8];\r\n\r\n  out[0] = a11 * a22 - a12 * a21;\r\n  out[1] = a02 * a21 - a01 * a22;\r\n  out[2] = a01 * a12 - a02 * a11;\r\n  out[3] = a12 * a20 - a10 * a22;\r\n  out[4] = a00 * a22 - a02 * a20;\r\n  out[5] = a02 * a10 - a00 * a12;\r\n  out[6] = a10 * a21 - a11 * a20;\r\n  out[7] = a01 * a20 - a00 * a21;\r\n  out[8] = a00 * a11 - a01 * a10;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the determinant of a mat3\r\n *\r\n * @param {mat3} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\r\nexport function determinant(a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2];\r\n  var a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5];\r\n  var a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8];\r\n\r\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\r\n}\r\n\r\n/**\r\n * Multiplies two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2];\r\n  var a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5];\r\n  var a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8];\r\n\r\n  var b00 = b[0],\r\n      b01 = b[1],\r\n      b02 = b[2];\r\n  var b10 = b[3],\r\n      b11 = b[4],\r\n      b12 = b[5];\r\n  var b20 = b[6],\r\n      b21 = b[7],\r\n      b22 = b[8];\r\n\r\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\r\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\r\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\r\n\r\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\r\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\r\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\r\n\r\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\r\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\r\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Translate a mat3 by the given vector\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to translate\r\n * @param {vec2} v vector to translate by\r\n * @returns {mat3} out\r\n */\r\nexport function translate(out, a, v) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5],\r\n      a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8],\r\n      x = v[0],\r\n      y = v[1];\r\n\r\n  out[0] = a00;\r\n  out[1] = a01;\r\n  out[2] = a02;\r\n\r\n  out[3] = a10;\r\n  out[4] = a11;\r\n  out[5] = a12;\r\n\r\n  out[6] = x * a00 + y * a10 + a20;\r\n  out[7] = x * a01 + y * a11 + a21;\r\n  out[8] = x * a02 + y * a12 + a22;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a mat3 by the given angle\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\r\nexport function rotate(out, a, rad) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5],\r\n      a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8],\r\n      s = Math.sin(rad),\r\n      c = Math.cos(rad);\r\n\r\n  out[0] = c * a00 + s * a10;\r\n  out[1] = c * a01 + s * a11;\r\n  out[2] = c * a02 + s * a12;\r\n\r\n  out[3] = c * a10 - s * a00;\r\n  out[4] = c * a11 - s * a01;\r\n  out[5] = c * a12 - s * a02;\r\n\r\n  out[6] = a20;\r\n  out[7] = a21;\r\n  out[8] = a22;\r\n  return out;\r\n};\r\n\r\n/**\r\n * Scales the mat3 by the dimensions in the given vec2\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to rotate\r\n * @param {vec2} v the vec2 to scale the matrix by\r\n * @returns {mat3} out\r\n **/\r\nexport function scale(out, a, v) {\r\n  var x = v[0],\r\n      y = v[1];\r\n\r\n  out[0] = x * a[0];\r\n  out[1] = x * a[1];\r\n  out[2] = x * a[2];\r\n\r\n  out[3] = y * a[3];\r\n  out[4] = y * a[4];\r\n  out[5] = y * a[5];\r\n\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.translate(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {vec2} v Translation vector\r\n * @returns {mat3} out\r\n */\r\nexport function fromTranslation(out, v) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 1;\r\n  out[5] = 0;\r\n  out[6] = v[0];\r\n  out[7] = v[1];\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.rotate(dest, dest, rad);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\r\nexport function fromRotation(out, rad) {\r\n  var s = Math.sin(rad),\r\n      c = Math.cos(rad);\r\n\r\n  out[0] = c;\r\n  out[1] = s;\r\n  out[2] = 0;\r\n\r\n  out[3] = -s;\r\n  out[4] = c;\r\n  out[5] = 0;\r\n\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.scale(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {vec2} v Scaling vector\r\n * @returns {mat3} out\r\n */\r\nexport function fromScaling(out, v) {\r\n  out[0] = v[0];\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n\r\n  out[3] = 0;\r\n  out[4] = v[1];\r\n  out[5] = 0;\r\n\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copies the values from a mat2d into a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat2d} a the matrix to copy\r\n * @returns {mat3} out\r\n **/\r\nexport function fromMat2d(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = 0;\r\n\r\n  out[3] = a[2];\r\n  out[4] = a[3];\r\n  out[5] = 0;\r\n\r\n  out[6] = a[4];\r\n  out[7] = a[5];\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n* Calculates a 3x3 matrix from the given quaternion\r\n*\r\n* @param {mat3} out mat3 receiving operation result\r\n* @param {quat} q Quaternion to create matrix from\r\n*\r\n* @returns {mat3} out\r\n*/\r\nexport function fromQuat(out, q) {\r\n  var x = q[0],\r\n      y = q[1],\r\n      z = q[2],\r\n      w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n\r\n  var xx = x * x2;\r\n  var yx = y * x2;\r\n  var yy = y * y2;\r\n  var zx = z * x2;\r\n  var zy = z * y2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n\r\n  out[0] = 1 - yy - zz;\r\n  out[3] = yx - wz;\r\n  out[6] = zx + wy;\r\n\r\n  out[1] = yx + wz;\r\n  out[4] = 1 - xx - zz;\r\n  out[7] = zy - wx;\r\n\r\n  out[2] = zx - wy;\r\n  out[5] = zy + wx;\r\n  out[8] = 1 - xx - yy;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n* Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\r\n*\r\n* @param {mat3} out mat3 receiving operation result\r\n* @param {mat4} a Mat4 to derive the normal matrix from\r\n*\r\n* @returns {mat3} out\r\n*/\r\nexport function normalFromMat4(out, a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a03 = a[3];\r\n  var a10 = a[4],\r\n      a11 = a[5],\r\n      a12 = a[6],\r\n      a13 = a[7];\r\n  var a20 = a[8],\r\n      a21 = a[9],\r\n      a22 = a[10],\r\n      a23 = a[11];\r\n  var a30 = a[12],\r\n      a31 = a[13],\r\n      a32 = a[14],\r\n      a33 = a[15];\r\n\r\n  var b00 = a00 * a11 - a01 * a10;\r\n  var b01 = a00 * a12 - a02 * a10;\r\n  var b02 = a00 * a13 - a03 * a10;\r\n  var b03 = a01 * a12 - a02 * a11;\r\n  var b04 = a01 * a13 - a03 * a11;\r\n  var b05 = a02 * a13 - a03 * a12;\r\n  var b06 = a20 * a31 - a21 * a30;\r\n  var b07 = a20 * a32 - a22 * a30;\r\n  var b08 = a20 * a33 - a23 * a30;\r\n  var b09 = a21 * a32 - a22 * a31;\r\n  var b10 = a21 * a33 - a23 * a31;\r\n  var b11 = a22 * a33 - a23 * a32;\r\n\r\n  // Calculate the determinant\r\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n\r\n  if (!det) {\r\n    return null;\r\n  }\r\n  det = 1.0 / det;\r\n\r\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\r\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\r\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\r\n\r\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\r\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\r\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\r\n\r\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\r\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\r\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a 2D projection matrix with the given bounds\r\n *\r\n * @param {mat3} out mat3 frustum matrix will be written into\r\n * @param {number} width Width of your gl context\r\n * @param {number} height Height of gl context\r\n * @returns {mat3} out\r\n */\r\nexport function projection(out, width, height) {\r\n  out[0] = 2 / width;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = -2 / height;\r\n  out[5] = 0;\r\n  out[6] = -1;\r\n  out[7] = 1;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a mat3\r\n *\r\n * @param {mat3} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\r\nexport function str(a) {\r\n  return 'mat3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' + a[8] + ')';\r\n}\r\n\r\n/**\r\n * Returns Frobenius norm of a mat3\r\n *\r\n * @param {mat3} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\r\nexport function frob(a) {\r\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2));\r\n}\r\n\r\n/**\r\n * Adds two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  out[4] = a[4] + b[4];\r\n  out[5] = a[5] + b[5];\r\n  out[6] = a[6] + b[6];\r\n  out[7] = a[7] + b[7];\r\n  out[8] = a[8] + b[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  out[3] = a[3] - b[3];\r\n  out[4] = a[4] - b[4];\r\n  out[5] = a[5] - b[5];\r\n  out[6] = a[6] - b[6];\r\n  out[7] = a[7] - b[7];\r\n  out[8] = a[8] - b[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat3} out\r\n */\r\nexport function multiplyScalar(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  out[4] = a[4] * b;\r\n  out[5] = a[5] * b;\r\n  out[6] = a[6] * b;\r\n  out[7] = a[7] * b;\r\n  out[8] = a[8] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat3} out the receiving vector\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat3} out\r\n */\r\nexport function multiplyScalarAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  out[3] = a[3] + b[3] * scale;\r\n  out[4] = a[4] + b[4] * scale;\r\n  out[5] = a[5] + b[5] * scale;\r\n  out[6] = a[6] + b[6] * scale;\r\n  out[7] = a[7] + b[7] * scale;\r\n  out[8] = a[8] + b[8] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat3} a The first matrix.\r\n * @param {mat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat3} a The first matrix.\r\n * @param {mat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5],\r\n      a6 = a[6],\r\n      a7 = a[7],\r\n      a8 = a[8];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3],\r\n      b4 = b[4],\r\n      b5 = b[5],\r\n      b6 = b[6],\r\n      b7 = b[7],\r\n      b8 = b[8];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\r\n}\r\n\r\n/**\r\n * Alias for {@link mat3.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link mat3.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\r\n * @module mat4\r\n */\r\n\r\n/**\r\n * Creates a new identity mat4\r\n *\r\n * @returns {mat4} a new 4x4 matrix\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(16);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n    out[3] = 0;\r\n    out[4] = 0;\r\n    out[6] = 0;\r\n    out[7] = 0;\r\n    out[8] = 0;\r\n    out[9] = 0;\r\n    out[11] = 0;\r\n    out[12] = 0;\r\n    out[13] = 0;\r\n    out[14] = 0;\r\n  }\r\n  out[0] = 1;\r\n  out[5] = 1;\r\n  out[10] = 1;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new mat4 initialized with values from an existing matrix\r\n *\r\n * @param {mat4} a matrix to clone\r\n * @returns {mat4} a new 4x4 matrix\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(16);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  out[9] = a[9];\r\n  out[10] = a[10];\r\n  out[11] = a[11];\r\n  out[12] = a[12];\r\n  out[13] = a[13];\r\n  out[14] = a[14];\r\n  out[15] = a[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one mat4 to another\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  out[9] = a[9];\r\n  out[10] = a[10];\r\n  out[11] = a[11];\r\n  out[12] = a[12];\r\n  out[13] = a[13];\r\n  out[14] = a[14];\r\n  out[15] = a[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Create a new mat4 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} A new mat4\r\n */\r\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\r\n  var out = new glMatrix.ARRAY_TYPE(16);\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m02;\r\n  out[3] = m03;\r\n  out[4] = m10;\r\n  out[5] = m11;\r\n  out[6] = m12;\r\n  out[7] = m13;\r\n  out[8] = m20;\r\n  out[9] = m21;\r\n  out[10] = m22;\r\n  out[11] = m23;\r\n  out[12] = m30;\r\n  out[13] = m31;\r\n  out[14] = m32;\r\n  out[15] = m33;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a mat4 to the given values\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} out\r\n */\r\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m02;\r\n  out[3] = m03;\r\n  out[4] = m10;\r\n  out[5] = m11;\r\n  out[6] = m12;\r\n  out[7] = m13;\r\n  out[8] = m20;\r\n  out[9] = m21;\r\n  out[10] = m22;\r\n  out[11] = m23;\r\n  out[12] = m30;\r\n  out[13] = m31;\r\n  out[14] = m32;\r\n  out[15] = m33;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set a mat4 to the identity matrix\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @returns {mat4} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = 1;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = 1;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transpose the values of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\r\nexport function transpose(out, a) {\r\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\r\n  if (out === a) {\r\n    var a01 = a[1],\r\n        a02 = a[2],\r\n        a03 = a[3];\r\n    var a12 = a[6],\r\n        a13 = a[7];\r\n    var a23 = a[11];\r\n\r\n    out[1] = a[4];\r\n    out[2] = a[8];\r\n    out[3] = a[12];\r\n    out[4] = a01;\r\n    out[6] = a[9];\r\n    out[7] = a[13];\r\n    out[8] = a02;\r\n    out[9] = a12;\r\n    out[11] = a[14];\r\n    out[12] = a03;\r\n    out[13] = a13;\r\n    out[14] = a23;\r\n  } else {\r\n    out[0] = a[0];\r\n    out[1] = a[4];\r\n    out[2] = a[8];\r\n    out[3] = a[12];\r\n    out[4] = a[1];\r\n    out[5] = a[5];\r\n    out[6] = a[9];\r\n    out[7] = a[13];\r\n    out[8] = a[2];\r\n    out[9] = a[6];\r\n    out[10] = a[10];\r\n    out[11] = a[14];\r\n    out[12] = a[3];\r\n    out[13] = a[7];\r\n    out[14] = a[11];\r\n    out[15] = a[15];\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Inverts a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\r\nexport function invert(out, a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a03 = a[3];\r\n  var a10 = a[4],\r\n      a11 = a[5],\r\n      a12 = a[6],\r\n      a13 = a[7];\r\n  var a20 = a[8],\r\n      a21 = a[9],\r\n      a22 = a[10],\r\n      a23 = a[11];\r\n  var a30 = a[12],\r\n      a31 = a[13],\r\n      a32 = a[14],\r\n      a33 = a[15];\r\n\r\n  var b00 = a00 * a11 - a01 * a10;\r\n  var b01 = a00 * a12 - a02 * a10;\r\n  var b02 = a00 * a13 - a03 * a10;\r\n  var b03 = a01 * a12 - a02 * a11;\r\n  var b04 = a01 * a13 - a03 * a11;\r\n  var b05 = a02 * a13 - a03 * a12;\r\n  var b06 = a20 * a31 - a21 * a30;\r\n  var b07 = a20 * a32 - a22 * a30;\r\n  var b08 = a20 * a33 - a23 * a30;\r\n  var b09 = a21 * a32 - a22 * a31;\r\n  var b10 = a21 * a33 - a23 * a31;\r\n  var b11 = a22 * a33 - a23 * a32;\r\n\r\n  // Calculate the determinant\r\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n\r\n  if (!det) {\r\n    return null;\r\n  }\r\n  det = 1.0 / det;\r\n\r\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\r\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\r\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\r\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\r\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\r\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\r\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\r\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\r\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\r\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\r\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\r\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\r\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\r\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\r\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\r\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the adjugate of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\r\nexport function adjoint(out, a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a03 = a[3];\r\n  var a10 = a[4],\r\n      a11 = a[5],\r\n      a12 = a[6],\r\n      a13 = a[7];\r\n  var a20 = a[8],\r\n      a21 = a[9],\r\n      a22 = a[10],\r\n      a23 = a[11];\r\n  var a30 = a[12],\r\n      a31 = a[13],\r\n      a32 = a[14],\r\n      a33 = a[15];\r\n\r\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\r\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\r\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\r\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\r\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\r\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\r\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\r\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\r\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\r\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\r\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\r\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\r\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\r\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\r\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\r\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the determinant of a mat4\r\n *\r\n * @param {mat4} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\r\nexport function determinant(a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a03 = a[3];\r\n  var a10 = a[4],\r\n      a11 = a[5],\r\n      a12 = a[6],\r\n      a13 = a[7];\r\n  var a20 = a[8],\r\n      a21 = a[9],\r\n      a22 = a[10],\r\n      a23 = a[11];\r\n  var a30 = a[12],\r\n      a31 = a[13],\r\n      a32 = a[14],\r\n      a33 = a[15];\r\n\r\n  var b00 = a00 * a11 - a01 * a10;\r\n  var b01 = a00 * a12 - a02 * a10;\r\n  var b02 = a00 * a13 - a03 * a10;\r\n  var b03 = a01 * a12 - a02 * a11;\r\n  var b04 = a01 * a13 - a03 * a11;\r\n  var b05 = a02 * a13 - a03 * a12;\r\n  var b06 = a20 * a31 - a21 * a30;\r\n  var b07 = a20 * a32 - a22 * a30;\r\n  var b08 = a20 * a33 - a23 * a30;\r\n  var b09 = a21 * a32 - a22 * a31;\r\n  var b10 = a21 * a33 - a23 * a31;\r\n  var b11 = a22 * a33 - a23 * a32;\r\n\r\n  // Calculate the determinant\r\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n}\r\n\r\n/**\r\n * Multiplies two mat4s\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a03 = a[3];\r\n  var a10 = a[4],\r\n      a11 = a[5],\r\n      a12 = a[6],\r\n      a13 = a[7];\r\n  var a20 = a[8],\r\n      a21 = a[9],\r\n      a22 = a[10],\r\n      a23 = a[11];\r\n  var a30 = a[12],\r\n      a31 = a[13],\r\n      a32 = a[14],\r\n      a33 = a[15];\r\n\r\n  // Cache only the current line of the second matrix\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3];\r\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n  b0 = b[4];b1 = b[5];b2 = b[6];b3 = b[7];\r\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n  b0 = b[8];b1 = b[9];b2 = b[10];b3 = b[11];\r\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n  b0 = b[12];b1 = b[13];b2 = b[14];b3 = b[15];\r\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Translate a mat4 by the given vector\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to translate\r\n * @param {vec3} v vector to translate by\r\n * @returns {mat4} out\r\n */\r\nexport function translate(out, a, v) {\r\n  var x = v[0],\r\n      y = v[1],\r\n      z = v[2];\r\n  var a00 = void 0,\r\n      a01 = void 0,\r\n      a02 = void 0,\r\n      a03 = void 0;\r\n  var a10 = void 0,\r\n      a11 = void 0,\r\n      a12 = void 0,\r\n      a13 = void 0;\r\n  var a20 = void 0,\r\n      a21 = void 0,\r\n      a22 = void 0,\r\n      a23 = void 0;\r\n\r\n  if (a === out) {\r\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\r\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\r\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\r\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\r\n  } else {\r\n    a00 = a[0];a01 = a[1];a02 = a[2];a03 = a[3];\r\n    a10 = a[4];a11 = a[5];a12 = a[6];a13 = a[7];\r\n    a20 = a[8];a21 = a[9];a22 = a[10];a23 = a[11];\r\n\r\n    out[0] = a00;out[1] = a01;out[2] = a02;out[3] = a03;\r\n    out[4] = a10;out[5] = a11;out[6] = a12;out[7] = a13;\r\n    out[8] = a20;out[9] = a21;out[10] = a22;out[11] = a23;\r\n\r\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\r\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\r\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\r\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to scale\r\n * @param {vec3} v the vec3 to scale the matrix by\r\n * @returns {mat4} out\r\n **/\r\nexport function scale(out, a, v) {\r\n  var x = v[0],\r\n      y = v[1],\r\n      z = v[2];\r\n\r\n  out[0] = a[0] * x;\r\n  out[1] = a[1] * x;\r\n  out[2] = a[2] * x;\r\n  out[3] = a[3] * x;\r\n  out[4] = a[4] * y;\r\n  out[5] = a[5] * y;\r\n  out[6] = a[6] * y;\r\n  out[7] = a[7] * y;\r\n  out[8] = a[8] * z;\r\n  out[9] = a[9] * z;\r\n  out[10] = a[10] * z;\r\n  out[11] = a[11] * z;\r\n  out[12] = a[12];\r\n  out[13] = a[13];\r\n  out[14] = a[14];\r\n  out[15] = a[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a mat4 by the given angle around the given axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {vec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\r\nexport function rotate(out, a, rad, axis) {\r\n  var x = axis[0],\r\n      y = axis[1],\r\n      z = axis[2];\r\n  var len = Math.sqrt(x * x + y * y + z * z);\r\n  var s = void 0,\r\n      c = void 0,\r\n      t = void 0;\r\n  var a00 = void 0,\r\n      a01 = void 0,\r\n      a02 = void 0,\r\n      a03 = void 0;\r\n  var a10 = void 0,\r\n      a11 = void 0,\r\n      a12 = void 0,\r\n      a13 = void 0;\r\n  var a20 = void 0,\r\n      a21 = void 0,\r\n      a22 = void 0,\r\n      a23 = void 0;\r\n  var b00 = void 0,\r\n      b01 = void 0,\r\n      b02 = void 0;\r\n  var b10 = void 0,\r\n      b11 = void 0,\r\n      b12 = void 0;\r\n  var b20 = void 0,\r\n      b21 = void 0,\r\n      b22 = void 0;\r\n\r\n  if (len < glMatrix.EPSILON) {\r\n    return null;\r\n  }\r\n\r\n  len = 1 / len;\r\n  x *= len;\r\n  y *= len;\r\n  z *= len;\r\n\r\n  s = Math.sin(rad);\r\n  c = Math.cos(rad);\r\n  t = 1 - c;\r\n\r\n  a00 = a[0];a01 = a[1];a02 = a[2];a03 = a[3];\r\n  a10 = a[4];a11 = a[5];a12 = a[6];a13 = a[7];\r\n  a20 = a[8];a21 = a[9];a22 = a[10];a23 = a[11];\r\n\r\n  // Construct the elements of the rotation matrix\r\n  b00 = x * x * t + c;b01 = y * x * t + z * s;b02 = z * x * t - y * s;\r\n  b10 = x * y * t - z * s;b11 = y * y * t + c;b12 = z * y * t + x * s;\r\n  b20 = x * z * t + y * s;b21 = y * z * t - x * s;b22 = z * z * t + c;\r\n\r\n  // Perform rotation-specific matrix multiplication\r\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\r\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\r\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\r\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\r\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\r\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\r\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\r\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\r\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\r\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\r\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\r\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\r\n\r\n  if (a !== out) {\r\n    // If the source and destination differ, copy the unchanged last row\r\n    out[12] = a[12];\r\n    out[13] = a[13];\r\n    out[14] = a[14];\r\n    out[15] = a[15];\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a matrix by the given angle around the X axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function rotateX(out, a, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  var a10 = a[4];\r\n  var a11 = a[5];\r\n  var a12 = a[6];\r\n  var a13 = a[7];\r\n  var a20 = a[8];\r\n  var a21 = a[9];\r\n  var a22 = a[10];\r\n  var a23 = a[11];\r\n\r\n  if (a !== out) {\r\n    // If the source and destination differ, copy the unchanged rows\r\n    out[0] = a[0];\r\n    out[1] = a[1];\r\n    out[2] = a[2];\r\n    out[3] = a[3];\r\n    out[12] = a[12];\r\n    out[13] = a[13];\r\n    out[14] = a[14];\r\n    out[15] = a[15];\r\n  }\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[4] = a10 * c + a20 * s;\r\n  out[5] = a11 * c + a21 * s;\r\n  out[6] = a12 * c + a22 * s;\r\n  out[7] = a13 * c + a23 * s;\r\n  out[8] = a20 * c - a10 * s;\r\n  out[9] = a21 * c - a11 * s;\r\n  out[10] = a22 * c - a12 * s;\r\n  out[11] = a23 * c - a13 * s;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a matrix by the given angle around the Y axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function rotateY(out, a, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  var a00 = a[0];\r\n  var a01 = a[1];\r\n  var a02 = a[2];\r\n  var a03 = a[3];\r\n  var a20 = a[8];\r\n  var a21 = a[9];\r\n  var a22 = a[10];\r\n  var a23 = a[11];\r\n\r\n  if (a !== out) {\r\n    // If the source and destination differ, copy the unchanged rows\r\n    out[4] = a[4];\r\n    out[5] = a[5];\r\n    out[6] = a[6];\r\n    out[7] = a[7];\r\n    out[12] = a[12];\r\n    out[13] = a[13];\r\n    out[14] = a[14];\r\n    out[15] = a[15];\r\n  }\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0] = a00 * c - a20 * s;\r\n  out[1] = a01 * c - a21 * s;\r\n  out[2] = a02 * c - a22 * s;\r\n  out[3] = a03 * c - a23 * s;\r\n  out[8] = a00 * s + a20 * c;\r\n  out[9] = a01 * s + a21 * c;\r\n  out[10] = a02 * s + a22 * c;\r\n  out[11] = a03 * s + a23 * c;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a matrix by the given angle around the Z axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function rotateZ(out, a, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  var a00 = a[0];\r\n  var a01 = a[1];\r\n  var a02 = a[2];\r\n  var a03 = a[3];\r\n  var a10 = a[4];\r\n  var a11 = a[5];\r\n  var a12 = a[6];\r\n  var a13 = a[7];\r\n\r\n  if (a !== out) {\r\n    // If the source and destination differ, copy the unchanged last row\r\n    out[8] = a[8];\r\n    out[9] = a[9];\r\n    out[10] = a[10];\r\n    out[11] = a[11];\r\n    out[12] = a[12];\r\n    out[13] = a[13];\r\n    out[14] = a[14];\r\n    out[15] = a[15];\r\n  }\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0] = a00 * c + a10 * s;\r\n  out[1] = a01 * c + a11 * s;\r\n  out[2] = a02 * c + a12 * s;\r\n  out[3] = a03 * c + a13 * s;\r\n  out[4] = a10 * c - a00 * s;\r\n  out[5] = a11 * c - a01 * s;\r\n  out[6] = a12 * c - a02 * s;\r\n  out[7] = a13 * c - a03 * s;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {vec3} v Translation vector\r\n * @returns {mat4} out\r\n */\r\nexport function fromTranslation(out, v) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = 1;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = 1;\r\n  out[11] = 0;\r\n  out[12] = v[0];\r\n  out[13] = v[1];\r\n  out[14] = v[2];\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.scale(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {vec3} v Scaling vector\r\n * @returns {mat4} out\r\n */\r\nexport function fromScaling(out, v) {\r\n  out[0] = v[0];\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = v[1];\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = v[2];\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a given angle around a given axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotate(dest, dest, rad, axis);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {vec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\r\nexport function fromRotation(out, rad, axis) {\r\n  var x = axis[0],\r\n      y = axis[1],\r\n      z = axis[2];\r\n  var len = Math.sqrt(x * x + y * y + z * z);\r\n  var s = void 0,\r\n      c = void 0,\r\n      t = void 0;\r\n\r\n  if (len < glMatrix.EPSILON) {\r\n    return null;\r\n  }\r\n\r\n  len = 1 / len;\r\n  x *= len;\r\n  y *= len;\r\n  z *= len;\r\n\r\n  s = Math.sin(rad);\r\n  c = Math.cos(rad);\r\n  t = 1 - c;\r\n\r\n  // Perform rotation-specific matrix multiplication\r\n  out[0] = x * x * t + c;\r\n  out[1] = y * x * t + z * s;\r\n  out[2] = z * x * t - y * s;\r\n  out[3] = 0;\r\n  out[4] = x * y * t - z * s;\r\n  out[5] = y * y * t + c;\r\n  out[6] = z * y * t + x * s;\r\n  out[7] = 0;\r\n  out[8] = x * z * t + y * s;\r\n  out[9] = y * z * t - x * s;\r\n  out[10] = z * z * t + c;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from the given angle around the X axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateX(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function fromXRotation(out, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = c;\r\n  out[6] = s;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = -s;\r\n  out[10] = c;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from the given angle around the Y axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateY(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function fromYRotation(out, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0] = c;\r\n  out[1] = 0;\r\n  out[2] = -s;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = 1;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = s;\r\n  out[9] = 0;\r\n  out[10] = c;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from the given angle around the Z axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateZ(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function fromZRotation(out, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0] = c;\r\n  out[1] = s;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = -s;\r\n  out[5] = c;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = 1;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a quaternion rotation and vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @returns {mat4} out\r\n */\r\nexport function fromRotationTranslation(out, q, v) {\r\n  // Quaternion math\r\n  var x = q[0],\r\n      y = q[1],\r\n      z = q[2],\r\n      w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n\r\n  var xx = x * x2;\r\n  var xy = x * y2;\r\n  var xz = x * z2;\r\n  var yy = y * y2;\r\n  var yz = y * z2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n\r\n  out[0] = 1 - (yy + zz);\r\n  out[1] = xy + wz;\r\n  out[2] = xz - wy;\r\n  out[3] = 0;\r\n  out[4] = xy - wz;\r\n  out[5] = 1 - (xx + zz);\r\n  out[6] = yz + wx;\r\n  out[7] = 0;\r\n  out[8] = xz + wy;\r\n  out[9] = yz - wx;\r\n  out[10] = 1 - (xx + yy);\r\n  out[11] = 0;\r\n  out[12] = v[0];\r\n  out[13] = v[1];\r\n  out[14] = v[2];\r\n  out[15] = 1;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new mat4 from a dual quat.\r\n *\r\n * @param {mat4} out Matrix\r\n * @param {quat2} a Dual Quaternion\r\n * @returns {mat4} mat4 receiving operation result\r\n */\r\nexport function fromQuat2(out, a) {\r\n  var translation = new glMatrix.ARRAY_TYPE(3);\r\n  var bx = -a[0],\r\n      by = -a[1],\r\n      bz = -a[2],\r\n      bw = a[3],\r\n      ax = a[4],\r\n      ay = a[5],\r\n      az = a[6],\r\n      aw = a[7];\r\n\r\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw;\r\n  //Only scale if it makes sense\r\n  if (magnitude > 0) {\r\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\r\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\r\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\r\n  } else {\r\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\r\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\r\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\r\n  }\r\n  fromRotationTranslation(out, a, translation);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the translation vector component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslation,\r\n *  the returned vector will be the same as the translation vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive translation component\r\n * @param  {mat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\r\nexport function getTranslation(out, mat) {\r\n  out[0] = mat[12];\r\n  out[1] = mat[13];\r\n  out[2] = mat[14];\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the scaling factor component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslationScale\r\n *  with a normalized Quaternion paramter, the returned vector will be\r\n *  the same as the scaling vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive scaling factor component\r\n * @param  {mat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\r\nexport function getScaling(out, mat) {\r\n  var m11 = mat[0];\r\n  var m12 = mat[1];\r\n  var m13 = mat[2];\r\n  var m21 = mat[4];\r\n  var m22 = mat[5];\r\n  var m23 = mat[6];\r\n  var m31 = mat[8];\r\n  var m32 = mat[9];\r\n  var m33 = mat[10];\r\n\r\n  out[0] = Math.sqrt(m11 * m11 + m12 * m12 + m13 * m13);\r\n  out[1] = Math.sqrt(m21 * m21 + m22 * m22 + m23 * m23);\r\n  out[2] = Math.sqrt(m31 * m31 + m32 * m32 + m33 * m33);\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a quaternion representing the rotational component\r\n *  of a transformation matrix. If a matrix is built with\r\n *  fromRotationTranslation, the returned quaternion will be the\r\n *  same as the quaternion originally supplied.\r\n * @param {quat} out Quaternion to receive the rotation component\r\n * @param {mat4} mat Matrix to be decomposed (input)\r\n * @return {quat} out\r\n */\r\nexport function getRotation(out, mat) {\r\n  // Algorithm taken from http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\r\n  var trace = mat[0] + mat[5] + mat[10];\r\n  var S = 0;\r\n\r\n  if (trace > 0) {\r\n    S = Math.sqrt(trace + 1.0) * 2;\r\n    out[3] = 0.25 * S;\r\n    out[0] = (mat[6] - mat[9]) / S;\r\n    out[1] = (mat[8] - mat[2]) / S;\r\n    out[2] = (mat[1] - mat[4]) / S;\r\n  } else if (mat[0] > mat[5] && mat[0] > mat[10]) {\r\n    S = Math.sqrt(1.0 + mat[0] - mat[5] - mat[10]) * 2;\r\n    out[3] = (mat[6] - mat[9]) / S;\r\n    out[0] = 0.25 * S;\r\n    out[1] = (mat[1] + mat[4]) / S;\r\n    out[2] = (mat[8] + mat[2]) / S;\r\n  } else if (mat[5] > mat[10]) {\r\n    S = Math.sqrt(1.0 + mat[5] - mat[0] - mat[10]) * 2;\r\n    out[3] = (mat[8] - mat[2]) / S;\r\n    out[0] = (mat[1] + mat[4]) / S;\r\n    out[1] = 0.25 * S;\r\n    out[2] = (mat[6] + mat[9]) / S;\r\n  } else {\r\n    S = Math.sqrt(1.0 + mat[10] - mat[0] - mat[5]) * 2;\r\n    out[3] = (mat[1] - mat[4]) / S;\r\n    out[0] = (mat[8] + mat[2]) / S;\r\n    out[1] = (mat[6] + mat[9]) / S;\r\n    out[2] = 0.25 * S;\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @param {vec3} s Scaling vector\r\n * @returns {mat4} out\r\n */\r\nexport function fromRotationTranslationScale(out, q, v, s) {\r\n  // Quaternion math\r\n  var x = q[0],\r\n      y = q[1],\r\n      z = q[2],\r\n      w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n\r\n  var xx = x * x2;\r\n  var xy = x * y2;\r\n  var xz = x * z2;\r\n  var yy = y * y2;\r\n  var yz = y * z2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n  var sx = s[0];\r\n  var sy = s[1];\r\n  var sz = s[2];\r\n\r\n  out[0] = (1 - (yy + zz)) * sx;\r\n  out[1] = (xy + wz) * sx;\r\n  out[2] = (xz - wy) * sx;\r\n  out[3] = 0;\r\n  out[4] = (xy - wz) * sy;\r\n  out[5] = (1 - (xx + zz)) * sy;\r\n  out[6] = (yz + wx) * sy;\r\n  out[7] = 0;\r\n  out[8] = (xz + wy) * sz;\r\n  out[9] = (yz - wx) * sz;\r\n  out[10] = (1 - (xx + yy)) * sz;\r\n  out[11] = 0;\r\n  out[12] = v[0];\r\n  out[13] = v[1];\r\n  out[14] = v[2];\r\n  out[15] = 1;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     mat4.translate(dest, origin);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *     mat4.translate(dest, negativeOrigin);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @param {vec3} s Scaling vector\r\n * @param {vec3} o The origin vector around which to scale and rotate\r\n * @returns {mat4} out\r\n */\r\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\r\n  // Quaternion math\r\n  var x = q[0],\r\n      y = q[1],\r\n      z = q[2],\r\n      w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n\r\n  var xx = x * x2;\r\n  var xy = x * y2;\r\n  var xz = x * z2;\r\n  var yy = y * y2;\r\n  var yz = y * z2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n\r\n  var sx = s[0];\r\n  var sy = s[1];\r\n  var sz = s[2];\r\n\r\n  var ox = o[0];\r\n  var oy = o[1];\r\n  var oz = o[2];\r\n\r\n  var out0 = (1 - (yy + zz)) * sx;\r\n  var out1 = (xy + wz) * sx;\r\n  var out2 = (xz - wy) * sx;\r\n  var out4 = (xy - wz) * sy;\r\n  var out5 = (1 - (xx + zz)) * sy;\r\n  var out6 = (yz + wx) * sy;\r\n  var out8 = (xz + wy) * sz;\r\n  var out9 = (yz - wx) * sz;\r\n  var out10 = (1 - (xx + yy)) * sz;\r\n\r\n  out[0] = out0;\r\n  out[1] = out1;\r\n  out[2] = out2;\r\n  out[3] = 0;\r\n  out[4] = out4;\r\n  out[5] = out5;\r\n  out[6] = out6;\r\n  out[7] = 0;\r\n  out[8] = out8;\r\n  out[9] = out9;\r\n  out[10] = out10;\r\n  out[11] = 0;\r\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\r\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\r\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\r\n  out[15] = 1;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates a 4x4 matrix from the given quaternion\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat4} out\r\n */\r\nexport function fromQuat(out, q) {\r\n  var x = q[0],\r\n      y = q[1],\r\n      z = q[2],\r\n      w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n\r\n  var xx = x * x2;\r\n  var yx = y * x2;\r\n  var yy = y * y2;\r\n  var zx = z * x2;\r\n  var zy = z * y2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n\r\n  out[0] = 1 - yy - zz;\r\n  out[1] = yx + wz;\r\n  out[2] = zx - wy;\r\n  out[3] = 0;\r\n\r\n  out[4] = yx - wz;\r\n  out[5] = 1 - xx - zz;\r\n  out[6] = zy + wx;\r\n  out[7] = 0;\r\n\r\n  out[8] = zx + wy;\r\n  out[9] = zy - wx;\r\n  out[10] = 1 - xx - yy;\r\n  out[11] = 0;\r\n\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a frustum matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Number} left Left bound of the frustum\r\n * @param {Number} right Right bound of the frustum\r\n * @param {Number} bottom Bottom bound of the frustum\r\n * @param {Number} top Top bound of the frustum\r\n * @param {Number} near Near bound of the frustum\r\n * @param {Number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\r\nexport function frustum(out, left, right, bottom, top, near, far) {\r\n  var rl = 1 / (right - left);\r\n  var tb = 1 / (top - bottom);\r\n  var nf = 1 / (near - far);\r\n  out[0] = near * 2 * rl;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = near * 2 * tb;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = (right + left) * rl;\r\n  out[9] = (top + bottom) * tb;\r\n  out[10] = (far + near) * nf;\r\n  out[11] = -1;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = far * near * 2 * nf;\r\n  out[15] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a perspective projection matrix with the given bounds.\r\n * Passing null/undefined/no value for far will generate infinite projection matrix.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} fovy Vertical field of view in radians\r\n * @param {number} aspect Aspect ratio. typically viewport width/height\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum, can be null or Infinity\r\n * @returns {mat4} out\r\n */\r\nexport function perspective(out, fovy, aspect, near, far) {\r\n  var f = 1.0 / Math.tan(fovy / 2),\r\n      nf = void 0;\r\n  out[0] = f / aspect;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = f;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[11] = -1;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[15] = 0;\r\n  if (far != null && far !== Infinity) {\r\n    nf = 1 / (near - far);\r\n    out[10] = (far + near) * nf;\r\n    out[14] = 2 * far * near * nf;\r\n  } else {\r\n    out[10] = -1;\r\n    out[14] = -2 * near;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a perspective projection matrix with the given field of view.\r\n * This is primarily useful for generating projection matrices to be used\r\n * with the still experiemental WebVR API.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\r\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\r\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\r\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\r\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\r\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\r\n  var xScale = 2.0 / (leftTan + rightTan);\r\n  var yScale = 2.0 / (upTan + downTan);\r\n\r\n  out[0] = xScale;\r\n  out[1] = 0.0;\r\n  out[2] = 0.0;\r\n  out[3] = 0.0;\r\n  out[4] = 0.0;\r\n  out[5] = yScale;\r\n  out[6] = 0.0;\r\n  out[7] = 0.0;\r\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\r\n  out[9] = (upTan - downTan) * yScale * 0.5;\r\n  out[10] = far / (near - far);\r\n  out[11] = -1.0;\r\n  out[12] = 0.0;\r\n  out[13] = 0.0;\r\n  out[14] = far * near / (near - far);\r\n  out[15] = 0.0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a orthogonal projection matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} left Left bound of the frustum\r\n * @param {number} right Right bound of the frustum\r\n * @param {number} bottom Bottom bound of the frustum\r\n * @param {number} top Top bound of the frustum\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\r\nexport function ortho(out, left, right, bottom, top, near, far) {\r\n  var lr = 1 / (left - right);\r\n  var bt = 1 / (bottom - top);\r\n  var nf = 1 / (near - far);\r\n  out[0] = -2 * lr;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = -2 * bt;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = 2 * nf;\r\n  out[11] = 0;\r\n  out[12] = (left + right) * lr;\r\n  out[13] = (top + bottom) * bt;\r\n  out[14] = (far + near) * nf;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\r\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {vec3} eye Position of the viewer\r\n * @param {vec3} center Point the viewer is looking at\r\n * @param {vec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\r\nexport function lookAt(out, eye, center, up) {\r\n  var x0 = void 0,\r\n      x1 = void 0,\r\n      x2 = void 0,\r\n      y0 = void 0,\r\n      y1 = void 0,\r\n      y2 = void 0,\r\n      z0 = void 0,\r\n      z1 = void 0,\r\n      z2 = void 0,\r\n      len = void 0;\r\n  var eyex = eye[0];\r\n  var eyey = eye[1];\r\n  var eyez = eye[2];\r\n  var upx = up[0];\r\n  var upy = up[1];\r\n  var upz = up[2];\r\n  var centerx = center[0];\r\n  var centery = center[1];\r\n  var centerz = center[2];\r\n\r\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\r\n    return identity(out);\r\n  }\r\n\r\n  z0 = eyex - centerx;\r\n  z1 = eyey - centery;\r\n  z2 = eyez - centerz;\r\n\r\n  len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\r\n  z0 *= len;\r\n  z1 *= len;\r\n  z2 *= len;\r\n\r\n  x0 = upy * z2 - upz * z1;\r\n  x1 = upz * z0 - upx * z2;\r\n  x2 = upx * z1 - upy * z0;\r\n  len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\r\n  if (!len) {\r\n    x0 = 0;\r\n    x1 = 0;\r\n    x2 = 0;\r\n  } else {\r\n    len = 1 / len;\r\n    x0 *= len;\r\n    x1 *= len;\r\n    x2 *= len;\r\n  }\r\n\r\n  y0 = z1 * x2 - z2 * x1;\r\n  y1 = z2 * x0 - z0 * x2;\r\n  y2 = z0 * x1 - z1 * x0;\r\n\r\n  len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\r\n  if (!len) {\r\n    y0 = 0;\r\n    y1 = 0;\r\n    y2 = 0;\r\n  } else {\r\n    len = 1 / len;\r\n    y0 *= len;\r\n    y1 *= len;\r\n    y2 *= len;\r\n  }\r\n\r\n  out[0] = x0;\r\n  out[1] = y0;\r\n  out[2] = z0;\r\n  out[3] = 0;\r\n  out[4] = x1;\r\n  out[5] = y1;\r\n  out[6] = z1;\r\n  out[7] = 0;\r\n  out[8] = x2;\r\n  out[9] = y2;\r\n  out[10] = z2;\r\n  out[11] = 0;\r\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\r\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\r\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\r\n  out[15] = 1;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a matrix that makes something look at something else.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {vec3} eye Position of the viewer\r\n * @param {vec3} center Point the viewer is looking at\r\n * @param {vec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\r\nexport function targetTo(out, eye, target, up) {\r\n  var eyex = eye[0],\r\n      eyey = eye[1],\r\n      eyez = eye[2],\r\n      upx = up[0],\r\n      upy = up[1],\r\n      upz = up[2];\r\n\r\n  var z0 = eyex - target[0],\r\n      z1 = eyey - target[1],\r\n      z2 = eyez - target[2];\r\n\r\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\r\n  if (len > 0) {\r\n    len = 1 / Math.sqrt(len);\r\n    z0 *= len;\r\n    z1 *= len;\r\n    z2 *= len;\r\n  }\r\n\r\n  var x0 = upy * z2 - upz * z1,\r\n      x1 = upz * z0 - upx * z2,\r\n      x2 = upx * z1 - upy * z0;\r\n\r\n  len = x0 * x0 + x1 * x1 + x2 * x2;\r\n  if (len > 0) {\r\n    len = 1 / Math.sqrt(len);\r\n    x0 *= len;\r\n    x1 *= len;\r\n    x2 *= len;\r\n  }\r\n\r\n  out[0] = x0;\r\n  out[1] = x1;\r\n  out[2] = x2;\r\n  out[3] = 0;\r\n  out[4] = z1 * x2 - z2 * x1;\r\n  out[5] = z2 * x0 - z0 * x2;\r\n  out[6] = z0 * x1 - z1 * x0;\r\n  out[7] = 0;\r\n  out[8] = z0;\r\n  out[9] = z1;\r\n  out[10] = z2;\r\n  out[11] = 0;\r\n  out[12] = eyex;\r\n  out[13] = eyey;\r\n  out[14] = eyez;\r\n  out[15] = 1;\r\n  return out;\r\n};\r\n\r\n/**\r\n * Returns a string representation of a mat4\r\n *\r\n * @param {mat4} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\r\nexport function str(a) {\r\n  return 'mat4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' + a[8] + ', ' + a[9] + ', ' + a[10] + ', ' + a[11] + ', ' + a[12] + ', ' + a[13] + ', ' + a[14] + ', ' + a[15] + ')';\r\n}\r\n\r\n/**\r\n * Returns Frobenius norm of a mat4\r\n *\r\n * @param {mat4} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\r\nexport function frob(a) {\r\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2) + Math.pow(a[9], 2) + Math.pow(a[10], 2) + Math.pow(a[11], 2) + Math.pow(a[12], 2) + Math.pow(a[13], 2) + Math.pow(a[14], 2) + Math.pow(a[15], 2));\r\n}\r\n\r\n/**\r\n * Adds two mat4's\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  out[4] = a[4] + b[4];\r\n  out[5] = a[5] + b[5];\r\n  out[6] = a[6] + b[6];\r\n  out[7] = a[7] + b[7];\r\n  out[8] = a[8] + b[8];\r\n  out[9] = a[9] + b[9];\r\n  out[10] = a[10] + b[10];\r\n  out[11] = a[11] + b[11];\r\n  out[12] = a[12] + b[12];\r\n  out[13] = a[13] + b[13];\r\n  out[14] = a[14] + b[14];\r\n  out[15] = a[15] + b[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  out[3] = a[3] - b[3];\r\n  out[4] = a[4] - b[4];\r\n  out[5] = a[5] - b[5];\r\n  out[6] = a[6] - b[6];\r\n  out[7] = a[7] - b[7];\r\n  out[8] = a[8] - b[8];\r\n  out[9] = a[9] - b[9];\r\n  out[10] = a[10] - b[10];\r\n  out[11] = a[11] - b[11];\r\n  out[12] = a[12] - b[12];\r\n  out[13] = a[13] - b[13];\r\n  out[14] = a[14] - b[14];\r\n  out[15] = a[15] - b[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat4} out\r\n */\r\nexport function multiplyScalar(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  out[4] = a[4] * b;\r\n  out[5] = a[5] * b;\r\n  out[6] = a[6] * b;\r\n  out[7] = a[7] * b;\r\n  out[8] = a[8] * b;\r\n  out[9] = a[9] * b;\r\n  out[10] = a[10] * b;\r\n  out[11] = a[11] * b;\r\n  out[12] = a[12] * b;\r\n  out[13] = a[13] * b;\r\n  out[14] = a[14] * b;\r\n  out[15] = a[15] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat4} out the receiving vector\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat4} out\r\n */\r\nexport function multiplyScalarAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  out[3] = a[3] + b[3] * scale;\r\n  out[4] = a[4] + b[4] * scale;\r\n  out[5] = a[5] + b[5] * scale;\r\n  out[6] = a[6] + b[6] * scale;\r\n  out[7] = a[7] + b[7] * scale;\r\n  out[8] = a[8] + b[8] * scale;\r\n  out[9] = a[9] + b[9] * scale;\r\n  out[10] = a[10] + b[10] * scale;\r\n  out[11] = a[11] + b[11] * scale;\r\n  out[12] = a[12] + b[12] * scale;\r\n  out[13] = a[13] + b[13] * scale;\r\n  out[14] = a[14] + b[14] * scale;\r\n  out[15] = a[15] + b[15] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat4} a The first matrix.\r\n * @param {mat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat4} a The first matrix.\r\n * @param {mat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var a4 = a[4],\r\n      a5 = a[5],\r\n      a6 = a[6],\r\n      a7 = a[7];\r\n  var a8 = a[8],\r\n      a9 = a[9],\r\n      a10 = a[10],\r\n      a11 = a[11];\r\n  var a12 = a[12],\r\n      a13 = a[13],\r\n      a14 = a[14],\r\n      a15 = a[15];\r\n\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3];\r\n  var b4 = b[4],\r\n      b5 = b[5],\r\n      b6 = b[6],\r\n      b7 = b[7];\r\n  var b8 = b[8],\r\n      b9 = b[9],\r\n      b10 = b[10],\r\n      b11 = b[11];\r\n  var b12 = b[12],\r\n      b13 = b[13],\r\n      b14 = b[14],\r\n      b15 = b[15];\r\n\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\r\n}\r\n\r\n/**\r\n * Alias for {@link mat4.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link mat4.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 3 Dimensional Vector\r\n * @module vec3\r\n */\r\n\r\n/**\r\n * Creates a new, empty vec3\r\n *\r\n * @returns {vec3} a new 3D vector\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(3);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[0] = 0;\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new vec3 initialized with values from an existing vector\r\n *\r\n * @param {vec3} a vector to clone\r\n * @returns {vec3} a new 3D vector\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(3);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the length of a vec3\r\n *\r\n * @param {vec3} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\r\nexport function length(a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  return Math.sqrt(x * x + y * y + z * z);\r\n}\r\n\r\n/**\r\n * Creates a new vec3 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} a new 3D vector\r\n */\r\nexport function fromValues(x, y, z) {\r\n  var out = new glMatrix.ARRAY_TYPE(3);\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one vec3 to another\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the source vector\r\n * @returns {vec3} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a vec3 to the given values\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} out\r\n */\r\nexport function set(out, x, y, z) {\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiplies two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  out[0] = a[0] * b[0];\r\n  out[1] = a[1] * b[1];\r\n  out[2] = a[2] * b[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Divides two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function divide(out, a, b) {\r\n  out[0] = a[0] / b[0];\r\n  out[1] = a[1] / b[1];\r\n  out[2] = a[2] / b[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.ceil the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to ceil\r\n * @returns {vec3} out\r\n */\r\nexport function ceil(out, a) {\r\n  out[0] = Math.ceil(a[0]);\r\n  out[1] = Math.ceil(a[1]);\r\n  out[2] = Math.ceil(a[2]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.floor the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to floor\r\n * @returns {vec3} out\r\n */\r\nexport function floor(out, a) {\r\n  out[0] = Math.floor(a[0]);\r\n  out[1] = Math.floor(a[1]);\r\n  out[2] = Math.floor(a[2]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the minimum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function min(out, a, b) {\r\n  out[0] = Math.min(a[0], b[0]);\r\n  out[1] = Math.min(a[1], b[1]);\r\n  out[2] = Math.min(a[2], b[2]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the maximum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function max(out, a, b) {\r\n  out[0] = Math.max(a[0], b[0]);\r\n  out[1] = Math.max(a[1], b[1]);\r\n  out[2] = Math.max(a[2], b[2]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.round the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to round\r\n * @returns {vec3} out\r\n */\r\nexport function round(out, a) {\r\n  out[0] = Math.round(a[0]);\r\n  out[1] = Math.round(a[1]);\r\n  out[2] = Math.round(a[2]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales a vec3 by a scalar number\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec3} out\r\n */\r\nexport function scale(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec3's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec3} out\r\n */\r\nexport function scaleAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the euclidian distance between two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\r\nexport function distance(a, b) {\r\n  var x = b[0] - a[0];\r\n  var y = b[1] - a[1];\r\n  var z = b[2] - a[2];\r\n  return Math.sqrt(x * x + y * y + z * z);\r\n}\r\n\r\n/**\r\n * Calculates the squared euclidian distance between two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\r\nexport function squaredDistance(a, b) {\r\n  var x = b[0] - a[0];\r\n  var y = b[1] - a[1];\r\n  var z = b[2] - a[2];\r\n  return x * x + y * y + z * z;\r\n}\r\n\r\n/**\r\n * Calculates the squared length of a vec3\r\n *\r\n * @param {vec3} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\r\nexport function squaredLength(a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  return x * x + y * y + z * z;\r\n}\r\n\r\n/**\r\n * Negates the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to negate\r\n * @returns {vec3} out\r\n */\r\nexport function negate(out, a) {\r\n  out[0] = -a[0];\r\n  out[1] = -a[1];\r\n  out[2] = -a[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the inverse of the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to invert\r\n * @returns {vec3} out\r\n */\r\nexport function inverse(out, a) {\r\n  out[0] = 1.0 / a[0];\r\n  out[1] = 1.0 / a[1];\r\n  out[2] = 1.0 / a[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Normalize a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to normalize\r\n * @returns {vec3} out\r\n */\r\nexport function normalize(out, a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  var len = x * x + y * y + z * z;\r\n  if (len > 0) {\r\n    //TODO: evaluate use of glm_invsqrt here?\r\n    len = 1 / Math.sqrt(len);\r\n    out[0] = a[0] * len;\r\n    out[1] = a[1] * len;\r\n    out[2] = a[2] * len;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the dot product of two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\r\nexport function dot(a, b) {\r\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\r\n}\r\n\r\n/**\r\n * Computes the cross product of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function cross(out, a, b) {\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2];\r\n  var bx = b[0],\r\n      by = b[1],\r\n      bz = b[2];\r\n\r\n  out[0] = ay * bz - az * by;\r\n  out[1] = az * bx - ax * bz;\r\n  out[2] = ax * by - ay * bx;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Performs a linear interpolation between two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\r\nexport function lerp(out, a, b, t) {\r\n  var ax = a[0];\r\n  var ay = a[1];\r\n  var az = a[2];\r\n  out[0] = ax + t * (b[0] - ax);\r\n  out[1] = ay + t * (b[1] - ay);\r\n  out[2] = az + t * (b[2] - az);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Performs a hermite interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {vec3} c the third operand\r\n * @param {vec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\r\nexport function hermite(out, a, b, c, d, t) {\r\n  var factorTimes2 = t * t;\r\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\r\n  var factor2 = factorTimes2 * (t - 2) + t;\r\n  var factor3 = factorTimes2 * (t - 1);\r\n  var factor4 = factorTimes2 * (3 - 2 * t);\r\n\r\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\r\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\r\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Performs a bezier interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {vec3} c the third operand\r\n * @param {vec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\r\nexport function bezier(out, a, b, c, d, t) {\r\n  var inverseFactor = 1 - t;\r\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\r\n  var factorTimes2 = t * t;\r\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\r\n  var factor2 = 3 * t * inverseFactorTimesTwo;\r\n  var factor3 = 3 * factorTimes2 * inverseFactor;\r\n  var factor4 = factorTimes2 * t;\r\n\r\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\r\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\r\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec3} out\r\n */\r\nexport function random(out, scale) {\r\n  scale = scale || 1.0;\r\n\r\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\r\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\r\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\r\n\r\n  out[0] = Math.cos(r) * zScale;\r\n  out[1] = Math.sin(r) * zScale;\r\n  out[2] = z * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec3 with a mat4.\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec3} out\r\n */\r\nexport function transformMat4(out, a, m) {\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2];\r\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\r\n  w = w || 1.0;\r\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\r\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\r\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec3 with a mat3.\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {mat3} m the 3x3 matrix to transform with\r\n * @returns {vec3} out\r\n */\r\nexport function transformMat3(out, a, m) {\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2];\r\n  out[0] = x * m[0] + y * m[3] + z * m[6];\r\n  out[1] = x * m[1] + y * m[4] + z * m[7];\r\n  out[2] = x * m[2] + y * m[5] + z * m[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec3 with a quat\r\n * Can also be used for dual quaternions. (Multiply it with the real part)\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {quat} q quaternion to transform with\r\n * @returns {vec3} out\r\n */\r\nexport function transformQuat(out, a, q) {\r\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\r\n  var qx = q[0],\r\n      qy = q[1],\r\n      qz = q[2],\r\n      qw = q[3];\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2];\r\n  // var qvec = [qx, qy, qz];\r\n  // var uv = vec3.cross([], qvec, a);\r\n  var uvx = qy * z - qz * y,\r\n      uvy = qz * x - qx * z,\r\n      uvz = qx * y - qy * x;\r\n  // var uuv = vec3.cross([], qvec, uv);\r\n  var uuvx = qy * uvz - qz * uvy,\r\n      uuvy = qz * uvx - qx * uvz,\r\n      uuvz = qx * uvy - qy * uvx;\r\n  // vec3.scale(uv, uv, 2 * w);\r\n  var w2 = qw * 2;\r\n  uvx *= w2;\r\n  uvy *= w2;\r\n  uvz *= w2;\r\n  // vec3.scale(uuv, uuv, 2);\r\n  uuvx *= 2;\r\n  uuvy *= 2;\r\n  uuvz *= 2;\r\n  // return vec3.add(out, a, vec3.add(out, uv, uuv));\r\n  out[0] = x + uvx + uuvx;\r\n  out[1] = y + uvy + uuvy;\r\n  out[2] = z + uvz + uuvz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotate a 3D vector around the x-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\r\nexport function rotateX(out, a, b, c) {\r\n  var p = [],\r\n      r = [];\r\n  //Translate point to the origin\r\n  p[0] = a[0] - b[0];\r\n  p[1] = a[1] - b[1];\r\n  p[2] = a[2] - b[2];\r\n\r\n  //perform rotation\r\n  r[0] = p[0];\r\n  r[1] = p[1] * Math.cos(c) - p[2] * Math.sin(c);\r\n  r[2] = p[1] * Math.sin(c) + p[2] * Math.cos(c);\r\n\r\n  //translate to correct position\r\n  out[0] = r[0] + b[0];\r\n  out[1] = r[1] + b[1];\r\n  out[2] = r[2] + b[2];\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotate a 3D vector around the y-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\r\nexport function rotateY(out, a, b, c) {\r\n  var p = [],\r\n      r = [];\r\n  //Translate point to the origin\r\n  p[0] = a[0] - b[0];\r\n  p[1] = a[1] - b[1];\r\n  p[2] = a[2] - b[2];\r\n\r\n  //perform rotation\r\n  r[0] = p[2] * Math.sin(c) + p[0] * Math.cos(c);\r\n  r[1] = p[1];\r\n  r[2] = p[2] * Math.cos(c) - p[0] * Math.sin(c);\r\n\r\n  //translate to correct position\r\n  out[0] = r[0] + b[0];\r\n  out[1] = r[1] + b[1];\r\n  out[2] = r[2] + b[2];\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotate a 3D vector around the z-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\r\nexport function rotateZ(out, a, b, c) {\r\n  var p = [],\r\n      r = [];\r\n  //Translate point to the origin\r\n  p[0] = a[0] - b[0];\r\n  p[1] = a[1] - b[1];\r\n  p[2] = a[2] - b[2];\r\n\r\n  //perform rotation\r\n  r[0] = p[0] * Math.cos(c) - p[1] * Math.sin(c);\r\n  r[1] = p[0] * Math.sin(c) + p[1] * Math.cos(c);\r\n  r[2] = p[2];\r\n\r\n  //translate to correct position\r\n  out[0] = r[0] + b[0];\r\n  out[1] = r[1] + b[1];\r\n  out[2] = r[2] + b[2];\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Get the angle between two 3D vectors\r\n * @param {vec3} a The first operand\r\n * @param {vec3} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\r\nexport function angle(a, b) {\r\n  var tempA = fromValues(a[0], a[1], a[2]);\r\n  var tempB = fromValues(b[0], b[1], b[2]);\r\n\r\n  normalize(tempA, tempA);\r\n  normalize(tempB, tempB);\r\n\r\n  var cosine = dot(tempA, tempB);\r\n\r\n  if (cosine > 1.0) {\r\n    return 0;\r\n  } else if (cosine < -1.0) {\r\n    return Math.PI;\r\n  } else {\r\n    return Math.acos(cosine);\r\n  }\r\n}\r\n\r\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec3} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\r\nexport function str(a) {\r\n  return 'vec3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ')';\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec3} a The first vector.\r\n * @param {vec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec3} a The first vector.\r\n * @param {vec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\r\n}\r\n\r\n/**\r\n * Alias for {@link vec3.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;\r\n\r\n/**\r\n * Alias for {@link vec3.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link vec3.divide}\r\n * @function\r\n */\r\nexport var div = divide;\r\n\r\n/**\r\n * Alias for {@link vec3.distance}\r\n * @function\r\n */\r\nexport var dist = distance;\r\n\r\n/**\r\n * Alias for {@link vec3.squaredDistance}\r\n * @function\r\n */\r\nexport var sqrDist = squaredDistance;\r\n\r\n/**\r\n * Alias for {@link vec3.length}\r\n * @function\r\n */\r\nexport var len = length;\r\n\r\n/**\r\n * Alias for {@link vec3.squaredLength}\r\n * @function\r\n */\r\nexport var sqrLen = squaredLength;\r\n\r\n/**\r\n * Perform some operation over an array of vec3s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\r\nexport var forEach = function () {\r\n  var vec = create();\r\n\r\n  return function (a, stride, offset, count, fn, arg) {\r\n    var i = void 0,\r\n        l = void 0;\r\n    if (!stride) {\r\n      stride = 3;\r\n    }\r\n\r\n    if (!offset) {\r\n      offset = 0;\r\n    }\r\n\r\n    if (count) {\r\n      l = Math.min(count * stride + offset, a.length);\r\n    } else {\r\n      l = a.length;\r\n    }\r\n\r\n    for (i = offset; i < l; i += stride) {\r\n      vec[0] = a[i];vec[1] = a[i + 1];vec[2] = a[i + 2];\r\n      fn(vec, vec, arg);\r\n      a[i] = vec[0];a[i + 1] = vec[1];a[i + 2] = vec[2];\r\n    }\r\n\r\n    return a;\r\n  };\r\n}();","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 4 Dimensional Vector\r\n * @module vec4\r\n */\r\n\r\n/**\r\n * Creates a new, empty vec4\r\n *\r\n * @returns {vec4} a new 4D vector\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[0] = 0;\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n    out[3] = 0;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new vec4 initialized with values from an existing vector\r\n *\r\n * @param {vec4} a vector to clone\r\n * @returns {vec4} a new 4D vector\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new vec4 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} a new 4D vector\r\n */\r\nexport function fromValues(x, y, z, w) {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  out[3] = w;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one vec4 to another\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the source vector\r\n * @returns {vec4} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a vec4 to the given values\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} out\r\n */\r\nexport function set(out, x, y, z, w) {\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  out[3] = w;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  out[3] = a[3] - b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiplies two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  out[0] = a[0] * b[0];\r\n  out[1] = a[1] * b[1];\r\n  out[2] = a[2] * b[2];\r\n  out[3] = a[3] * b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Divides two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function divide(out, a, b) {\r\n  out[0] = a[0] / b[0];\r\n  out[1] = a[1] / b[1];\r\n  out[2] = a[2] / b[2];\r\n  out[3] = a[3] / b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.ceil the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to ceil\r\n * @returns {vec4} out\r\n */\r\nexport function ceil(out, a) {\r\n  out[0] = Math.ceil(a[0]);\r\n  out[1] = Math.ceil(a[1]);\r\n  out[2] = Math.ceil(a[2]);\r\n  out[3] = Math.ceil(a[3]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.floor the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to floor\r\n * @returns {vec4} out\r\n */\r\nexport function floor(out, a) {\r\n  out[0] = Math.floor(a[0]);\r\n  out[1] = Math.floor(a[1]);\r\n  out[2] = Math.floor(a[2]);\r\n  out[3] = Math.floor(a[3]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the minimum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function min(out, a, b) {\r\n  out[0] = Math.min(a[0], b[0]);\r\n  out[1] = Math.min(a[1], b[1]);\r\n  out[2] = Math.min(a[2], b[2]);\r\n  out[3] = Math.min(a[3], b[3]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the maximum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function max(out, a, b) {\r\n  out[0] = Math.max(a[0], b[0]);\r\n  out[1] = Math.max(a[1], b[1]);\r\n  out[2] = Math.max(a[2], b[2]);\r\n  out[3] = Math.max(a[3], b[3]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.round the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to round\r\n * @returns {vec4} out\r\n */\r\nexport function round(out, a) {\r\n  out[0] = Math.round(a[0]);\r\n  out[1] = Math.round(a[1]);\r\n  out[2] = Math.round(a[2]);\r\n  out[3] = Math.round(a[3]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales a vec4 by a scalar number\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec4} out\r\n */\r\nexport function scale(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec4's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec4} out\r\n */\r\nexport function scaleAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  out[3] = a[3] + b[3] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the euclidian distance between two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\r\nexport function distance(a, b) {\r\n  var x = b[0] - a[0];\r\n  var y = b[1] - a[1];\r\n  var z = b[2] - a[2];\r\n  var w = b[3] - a[3];\r\n  return Math.sqrt(x * x + y * y + z * z + w * w);\r\n}\r\n\r\n/**\r\n * Calculates the squared euclidian distance between two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\r\nexport function squaredDistance(a, b) {\r\n  var x = b[0] - a[0];\r\n  var y = b[1] - a[1];\r\n  var z = b[2] - a[2];\r\n  var w = b[3] - a[3];\r\n  return x * x + y * y + z * z + w * w;\r\n}\r\n\r\n/**\r\n * Calculates the length of a vec4\r\n *\r\n * @param {vec4} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\r\nexport function length(a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  var w = a[3];\r\n  return Math.sqrt(x * x + y * y + z * z + w * w);\r\n}\r\n\r\n/**\r\n * Calculates the squared length of a vec4\r\n *\r\n * @param {vec4} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\r\nexport function squaredLength(a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  var w = a[3];\r\n  return x * x + y * y + z * z + w * w;\r\n}\r\n\r\n/**\r\n * Negates the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to negate\r\n * @returns {vec4} out\r\n */\r\nexport function negate(out, a) {\r\n  out[0] = -a[0];\r\n  out[1] = -a[1];\r\n  out[2] = -a[2];\r\n  out[3] = -a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the inverse of the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to invert\r\n * @returns {vec4} out\r\n */\r\nexport function inverse(out, a) {\r\n  out[0] = 1.0 / a[0];\r\n  out[1] = 1.0 / a[1];\r\n  out[2] = 1.0 / a[2];\r\n  out[3] = 1.0 / a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Normalize a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to normalize\r\n * @returns {vec4} out\r\n */\r\nexport function normalize(out, a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  var w = a[3];\r\n  var len = x * x + y * y + z * z + w * w;\r\n  if (len > 0) {\r\n    len = 1 / Math.sqrt(len);\r\n    out[0] = x * len;\r\n    out[1] = y * len;\r\n    out[2] = z * len;\r\n    out[3] = w * len;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the dot product of two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\r\nexport function dot(a, b) {\r\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\r\n}\r\n\r\n/**\r\n * Performs a linear interpolation between two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec4} out\r\n */\r\nexport function lerp(out, a, b, t) {\r\n  var ax = a[0];\r\n  var ay = a[1];\r\n  var az = a[2];\r\n  var aw = a[3];\r\n  out[0] = ax + t * (b[0] - ax);\r\n  out[1] = ay + t * (b[1] - ay);\r\n  out[2] = az + t * (b[2] - az);\r\n  out[3] = aw + t * (b[3] - aw);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec4} out\r\n */\r\nexport function random(out, scale) {\r\n  scale = scale || 1.0;\r\n\r\n  // Marsaglia, George. Choosing a Point from the Surface of a\r\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\r\n  // http://projecteuclid.org/euclid.aoms/1177692644;\r\n  var v1, v2, v3, v4;\r\n  var s1, s2;\r\n  do {\r\n    v1 = glMatrix.RANDOM() * 2 - 1;\r\n    v2 = glMatrix.RANDOM() * 2 - 1;\r\n    s1 = v1 * v1 + v2 * v2;\r\n  } while (s1 >= 1);\r\n  do {\r\n    v3 = glMatrix.RANDOM() * 2 - 1;\r\n    v4 = glMatrix.RANDOM() * 2 - 1;\r\n    s2 = v3 * v3 + v4 * v4;\r\n  } while (s2 >= 1);\r\n\r\n  var d = Math.sqrt((1 - s1) / s2);\r\n  out[0] = scale * v1;\r\n  out[1] = scale * v2;\r\n  out[2] = scale * v3 * d;\r\n  out[3] = scale * v4 * d;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec4 with a mat4.\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec4} out\r\n */\r\nexport function transformMat4(out, a, m) {\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2],\r\n      w = a[3];\r\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\r\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\r\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\r\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec4 with a quat\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to transform\r\n * @param {quat} q quaternion to transform with\r\n * @returns {vec4} out\r\n */\r\nexport function transformQuat(out, a, q) {\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2];\r\n  var qx = q[0],\r\n      qy = q[1],\r\n      qz = q[2],\r\n      qw = q[3];\r\n\r\n  // calculate quat * vec\r\n  var ix = qw * x + qy * z - qz * y;\r\n  var iy = qw * y + qz * x - qx * z;\r\n  var iz = qw * z + qx * y - qy * x;\r\n  var iw = -qx * x - qy * y - qz * z;\r\n\r\n  // calculate result * inverse quat\r\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\r\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\r\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec4} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\r\nexport function str(a) {\r\n  return 'vec4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec4} a The first vector.\r\n * @param {vec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec4} a The first vector.\r\n * @param {vec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\r\n}\r\n\r\n/**\r\n * Alias for {@link vec4.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;\r\n\r\n/**\r\n * Alias for {@link vec4.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link vec4.divide}\r\n * @function\r\n */\r\nexport var div = divide;\r\n\r\n/**\r\n * Alias for {@link vec4.distance}\r\n * @function\r\n */\r\nexport var dist = distance;\r\n\r\n/**\r\n * Alias for {@link vec4.squaredDistance}\r\n * @function\r\n */\r\nexport var sqrDist = squaredDistance;\r\n\r\n/**\r\n * Alias for {@link vec4.length}\r\n * @function\r\n */\r\nexport var len = length;\r\n\r\n/**\r\n * Alias for {@link vec4.squaredLength}\r\n * @function\r\n */\r\nexport var sqrLen = squaredLength;\r\n\r\n/**\r\n * Perform some operation over an array of vec4s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\r\nexport var forEach = function () {\r\n  var vec = create();\r\n\r\n  return function (a, stride, offset, count, fn, arg) {\r\n    var i = void 0,\r\n        l = void 0;\r\n    if (!stride) {\r\n      stride = 4;\r\n    }\r\n\r\n    if (!offset) {\r\n      offset = 0;\r\n    }\r\n\r\n    if (count) {\r\n      l = Math.min(count * stride + offset, a.length);\r\n    } else {\r\n      l = a.length;\r\n    }\r\n\r\n    for (i = offset; i < l; i += stride) {\r\n      vec[0] = a[i];vec[1] = a[i + 1];vec[2] = a[i + 2];vec[3] = a[i + 3];\r\n      fn(vec, vec, arg);\r\n      a[i] = vec[0];a[i + 1] = vec[1];a[i + 2] = vec[2];a[i + 3] = vec[3];\r\n    }\r\n\r\n    return a;\r\n  };\r\n}();","import * as glMatrix from \"./common.js\";\r\nimport * as mat3 from \"./mat3.js\";\r\nimport * as vec3 from \"./vec3.js\";\r\nimport * as vec4 from \"./vec4.js\";\r\n\r\n/**\r\n * Quaternion\r\n * @module quat\r\n */\r\n\r\n/**\r\n * Creates a new identity quat\r\n *\r\n * @returns {quat} a new quaternion\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[0] = 0;\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n  }\r\n  out[3] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set a quat to the identity quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 0;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Sets a quat from the given angle and rotation axis,\r\n * then returns it.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {vec3} axis the axis around which to rotate\r\n * @param {Number} rad the angle in radians\r\n * @returns {quat} out\r\n **/\r\nexport function setAxisAngle(out, axis, rad) {\r\n  rad = rad * 0.5;\r\n  var s = Math.sin(rad);\r\n  out[0] = s * axis[0];\r\n  out[1] = s * axis[1];\r\n  out[2] = s * axis[2];\r\n  out[3] = Math.cos(rad);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Gets the rotation axis and angle for a given\r\n *  quaternion. If a quaternion is created with\r\n *  setAxisAngle, this method will return the same\r\n *  values as providied in the original parameter list\r\n *  OR functionally equivalent values.\r\n * Example: The quaternion formed by axis [0, 0, 1] and\r\n *  angle -90 is the same as the quaternion formed by\r\n *  [0, 0, 1] and 270. This method favors the latter.\r\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\r\n * @param  {quat} q     Quaternion to be decomposed\r\n * @return {Number}     Angle, in radians, of the rotation\r\n */\r\nexport function getAxisAngle(out_axis, q) {\r\n  var rad = Math.acos(q[3]) * 2.0;\r\n  var s = Math.sin(rad / 2.0);\r\n  if (s > glMatrix.EPSILON) {\r\n    out_axis[0] = q[0] / s;\r\n    out_axis[1] = q[1] / s;\r\n    out_axis[2] = q[2] / s;\r\n  } else {\r\n    // If s is zero, return any axis (no rotation - axis does not matter)\r\n    out_axis[0] = 1;\r\n    out_axis[1] = 0;\r\n    out_axis[2] = 0;\r\n  }\r\n  return rad;\r\n}\r\n\r\n/**\r\n * Multiplies two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {quat} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n  var bx = b[0],\r\n      by = b[1],\r\n      bz = b[2],\r\n      bw = b[3];\r\n\r\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\r\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\r\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\r\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a quaternion by the given angle about the X axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\r\nexport function rotateX(out, a, rad) {\r\n  rad *= 0.5;\r\n\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n  var bx = Math.sin(rad),\r\n      bw = Math.cos(rad);\r\n\r\n  out[0] = ax * bw + aw * bx;\r\n  out[1] = ay * bw + az * bx;\r\n  out[2] = az * bw - ay * bx;\r\n  out[3] = aw * bw - ax * bx;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a quaternion by the given angle about the Y axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\r\nexport function rotateY(out, a, rad) {\r\n  rad *= 0.5;\r\n\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n  var by = Math.sin(rad),\r\n      bw = Math.cos(rad);\r\n\r\n  out[0] = ax * bw - az * by;\r\n  out[1] = ay * bw + aw * by;\r\n  out[2] = az * bw + ax * by;\r\n  out[3] = aw * bw - ay * by;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a quaternion by the given angle about the Z axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\r\nexport function rotateZ(out, a, rad) {\r\n  rad *= 0.5;\r\n\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n  var bz = Math.sin(rad),\r\n      bw = Math.cos(rad);\r\n\r\n  out[0] = ax * bw + ay * bz;\r\n  out[1] = ay * bw - ax * bz;\r\n  out[2] = az * bw + aw * bz;\r\n  out[3] = aw * bw - az * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the W component of a quat from the X, Y, and Z components.\r\n * Assumes that quaternion is 1 unit in length.\r\n * Any existing W component will be ignored.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate W component of\r\n * @returns {quat} out\r\n */\r\nexport function calculateW(out, a) {\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2];\r\n\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\r\n  return out;\r\n}\r\n\r\n/**\r\n * Performs a spherical linear interpolation between two quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\r\nexport function slerp(out, a, b, t) {\r\n  // benchmarks:\r\n  //    http://jsperf.com/quaternion-slerp-implementations\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n  var bx = b[0],\r\n      by = b[1],\r\n      bz = b[2],\r\n      bw = b[3];\r\n\r\n  var omega = void 0,\r\n      cosom = void 0,\r\n      sinom = void 0,\r\n      scale0 = void 0,\r\n      scale1 = void 0;\r\n\r\n  // calc cosine\r\n  cosom = ax * bx + ay * by + az * bz + aw * bw;\r\n  // adjust signs (if necessary)\r\n  if (cosom < 0.0) {\r\n    cosom = -cosom;\r\n    bx = -bx;\r\n    by = -by;\r\n    bz = -bz;\r\n    bw = -bw;\r\n  }\r\n  // calculate coefficients\r\n  if (1.0 - cosom > glMatrix.EPSILON) {\r\n    // standard case (slerp)\r\n    omega = Math.acos(cosom);\r\n    sinom = Math.sin(omega);\r\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\r\n    scale1 = Math.sin(t * omega) / sinom;\r\n  } else {\r\n    // \"from\" and \"to\" quaternions are very close\r\n    //  ... so we can do a linear interpolation\r\n    scale0 = 1.0 - t;\r\n    scale1 = t;\r\n  }\r\n  // calculate final values\r\n  out[0] = scale0 * ax + scale1 * bx;\r\n  out[1] = scale0 * ay + scale1 * by;\r\n  out[2] = scale0 * az + scale1 * bz;\r\n  out[3] = scale0 * aw + scale1 * bw;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a random quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\r\nexport function random(out) {\r\n  // Implementation of http://planning.cs.uiuc.edu/node198.html\r\n  // TODO: Calling random 3 times is probably not the fastest solution\r\n  var u1 = glMatrix.RANDOM();\r\n  var u2 = glMatrix.RANDOM();\r\n  var u3 = glMatrix.RANDOM();\r\n\r\n  var sqrt1MinusU1 = Math.sqrt(1 - u1);\r\n  var sqrtU1 = Math.sqrt(u1);\r\n\r\n  out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\r\n  out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\r\n  out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\r\n  out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the inverse of a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate inverse of\r\n * @returns {quat} out\r\n */\r\nexport function invert(out, a) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\r\n  var invDot = dot ? 1.0 / dot : 0;\r\n\r\n  // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\r\n\r\n  out[0] = -a0 * invDot;\r\n  out[1] = -a1 * invDot;\r\n  out[2] = -a2 * invDot;\r\n  out[3] = a3 * invDot;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the conjugate of a quat\r\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate conjugate of\r\n * @returns {quat} out\r\n */\r\nexport function conjugate(out, a) {\r\n  out[0] = -a[0];\r\n  out[1] = -a[1];\r\n  out[2] = -a[2];\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a quaternion from the given 3x3 rotation matrix.\r\n *\r\n * NOTE: The resultant quaternion is not normalized, so you should be sure\r\n * to renormalize the quaternion yourself where necessary.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {mat3} m rotation matrix\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport function fromMat3(out, m) {\r\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\r\n  // article \"Quaternion Calculus and Fast Animation\".\r\n  var fTrace = m[0] + m[4] + m[8];\r\n  var fRoot = void 0;\r\n\r\n  if (fTrace > 0.0) {\r\n    // |w| > 1/2, may as well choose w > 1/2\r\n    fRoot = Math.sqrt(fTrace + 1.0); // 2w\r\n    out[3] = 0.5 * fRoot;\r\n    fRoot = 0.5 / fRoot; // 1/(4w)\r\n    out[0] = (m[5] - m[7]) * fRoot;\r\n    out[1] = (m[6] - m[2]) * fRoot;\r\n    out[2] = (m[1] - m[3]) * fRoot;\r\n  } else {\r\n    // |w| <= 1/2\r\n    var i = 0;\r\n    if (m[4] > m[0]) i = 1;\r\n    if (m[8] > m[i * 3 + i]) i = 2;\r\n    var j = (i + 1) % 3;\r\n    var k = (i + 2) % 3;\r\n\r\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\r\n    out[i] = 0.5 * fRoot;\r\n    fRoot = 0.5 / fRoot;\r\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\r\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\r\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a quaternion from the given euler angle x, y, z.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {x} Angle to rotate around X axis in degrees.\r\n * @param {y} Angle to rotate around Y axis in degrees.\r\n * @param {z} Angle to rotate around Z axis in degrees.\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport function fromEuler(out, x, y, z) {\r\n  var halfToRad = 0.5 * Math.PI / 180.0;\r\n  x *= halfToRad;\r\n  y *= halfToRad;\r\n  z *= halfToRad;\r\n\r\n  var sx = Math.sin(x);\r\n  var cx = Math.cos(x);\r\n  var sy = Math.sin(y);\r\n  var cy = Math.cos(y);\r\n  var sz = Math.sin(z);\r\n  var cz = Math.cos(z);\r\n\r\n  out[0] = sx * cy * cz - cx * sy * sz;\r\n  out[1] = cx * sy * cz + sx * cy * sz;\r\n  out[2] = cx * cy * sz - sx * sy * cz;\r\n  out[3] = cx * cy * cz + sx * sy * sz;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a quatenion\r\n *\r\n * @param {quat} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\r\nexport function str(a) {\r\n  return 'quat(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\r\n}\r\n\r\n/**\r\n * Creates a new quat initialized with values from an existing quaternion\r\n *\r\n * @param {quat} a quaternion to clone\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\r\nexport var clone = vec4.clone;\r\n\r\n/**\r\n * Creates a new quat initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\r\nexport var fromValues = vec4.fromValues;\r\n\r\n/**\r\n * Copy the values from one quat to another\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the source quaternion\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var copy = vec4.copy;\r\n\r\n/**\r\n * Set the components of a quat to the given values\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var set = vec4.set;\r\n\r\n/**\r\n * Adds two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var add = vec4.add;\r\n\r\n/**\r\n * Alias for {@link quat.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Scales a quat by a scalar number\r\n *\r\n * @param {quat} out the receiving vector\r\n * @param {quat} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var scale = vec4.scale;\r\n\r\n/**\r\n * Calculates the dot product of two quat's\r\n *\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\r\nexport var dot = vec4.dot;\r\n\r\n/**\r\n * Performs a linear interpolation between two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var lerp = vec4.lerp;\r\n\r\n/**\r\n * Calculates the length of a quat\r\n *\r\n * @param {quat} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\r\nexport var length = vec4.length;\r\n\r\n/**\r\n * Alias for {@link quat.length}\r\n * @function\r\n */\r\nexport var len = length;\r\n\r\n/**\r\n * Calculates the squared length of a quat\r\n *\r\n * @param {quat} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n * @function\r\n */\r\nexport var squaredLength = vec4.squaredLength;\r\n\r\n/**\r\n * Alias for {@link quat.squaredLength}\r\n * @function\r\n */\r\nexport var sqrLen = squaredLength;\r\n\r\n/**\r\n * Normalize a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quaternion to normalize\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var normalize = vec4.normalize;\r\n\r\n/**\r\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {quat} a The first quaternion.\r\n * @param {quat} b The second quaternion.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport var exactEquals = vec4.exactEquals;\r\n\r\n/**\r\n * Returns whether or not the quaternions have approximately the same elements in the same position.\r\n *\r\n * @param {quat} a The first vector.\r\n * @param {quat} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport var equals = vec4.equals;\r\n\r\n/**\r\n * Sets a quaternion to represent the shortest rotation from one\r\n * vector to another.\r\n *\r\n * Both vectors are assumed to be unit length.\r\n *\r\n * @param {quat} out the receiving quaternion.\r\n * @param {vec3} a the initial vector\r\n * @param {vec3} b the destination vector\r\n * @returns {quat} out\r\n */\r\nexport var rotationTo = function () {\r\n  var tmpvec3 = vec3.create();\r\n  var xUnitVec3 = vec3.fromValues(1, 0, 0);\r\n  var yUnitVec3 = vec3.fromValues(0, 1, 0);\r\n\r\n  return function (out, a, b) {\r\n    var dot = vec3.dot(a, b);\r\n    if (dot < -0.999999) {\r\n      vec3.cross(tmpvec3, xUnitVec3, a);\r\n      if (vec3.len(tmpvec3) < 0.000001) vec3.cross(tmpvec3, yUnitVec3, a);\r\n      vec3.normalize(tmpvec3, tmpvec3);\r\n      setAxisAngle(out, tmpvec3, Math.PI);\r\n      return out;\r\n    } else if (dot > 0.999999) {\r\n      out[0] = 0;\r\n      out[1] = 0;\r\n      out[2] = 0;\r\n      out[3] = 1;\r\n      return out;\r\n    } else {\r\n      vec3.cross(tmpvec3, a, b);\r\n      out[0] = tmpvec3[0];\r\n      out[1] = tmpvec3[1];\r\n      out[2] = tmpvec3[2];\r\n      out[3] = 1 + dot;\r\n      return normalize(out, out);\r\n    }\r\n  };\r\n}();\r\n\r\n/**\r\n * Performs a spherical linear interpolation with two control points\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {quat} c the third operand\r\n * @param {quat} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\r\nexport var sqlerp = function () {\r\n  var temp1 = create();\r\n  var temp2 = create();\r\n\r\n  return function (out, a, b, c, d, t) {\r\n    slerp(temp1, a, d, t);\r\n    slerp(temp2, b, c, t);\r\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\r\n\r\n    return out;\r\n  };\r\n}();\r\n\r\n/**\r\n * Sets the specified quaternion with values corresponding to the given\r\n * axes. Each axis is a vec3 and is expected to be unit length and\r\n * perpendicular to all other specified axes.\r\n *\r\n * @param {vec3} view  the vector representing the viewing direction\r\n * @param {vec3} right the vector representing the local \"right\" direction\r\n * @param {vec3} up    the vector representing the local \"up\" direction\r\n * @returns {quat} out\r\n */\r\nexport var setAxes = function () {\r\n  var matr = mat3.create();\r\n\r\n  return function (out, view, right, up) {\r\n    matr[0] = right[0];\r\n    matr[3] = right[1];\r\n    matr[6] = right[2];\r\n\r\n    matr[1] = up[0];\r\n    matr[4] = up[1];\r\n    matr[7] = up[2];\r\n\r\n    matr[2] = -view[0];\r\n    matr[5] = -view[1];\r\n    matr[8] = -view[2];\r\n\r\n    return normalize(out, fromMat3(out, matr));\r\n  };\r\n}();","import * as glMatrix from \"./common.js\";\r\nimport * as quat from \"./quat.js\";\r\nimport * as mat4 from \"./mat4.js\";\r\n\r\n/**\r\n * Dual Quaternion<br>\r\n * Format: [real, dual]<br>\r\n * Quaternion format: XYZW<br>\r\n * Make sure to have normalized dual quaternions, otherwise the functions may not work as intended.<br>\r\n * @module quat2\r\n */\r\n\r\n/**\r\n * Creates a new identity dual quat\r\n *\r\n * @returns {quat2} a new dual quaternion [real -> rotation, dual -> translation]\r\n */\r\nexport function create() {\r\n  var dq = new glMatrix.ARRAY_TYPE(8);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    dq[0] = 0;\r\n    dq[1] = 0;\r\n    dq[2] = 0;\r\n    dq[4] = 0;\r\n    dq[5] = 0;\r\n    dq[6] = 0;\r\n    dq[7] = 0;\r\n  }\r\n  dq[3] = 1;\r\n  return dq;\r\n}\r\n\r\n/**\r\n * Creates a new quat initialized with values from an existing quaternion\r\n *\r\n * @param {quat2} a dual quaternion to clone\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\r\nexport function clone(a) {\r\n  var dq = new glMatrix.ARRAY_TYPE(8);\r\n  dq[0] = a[0];\r\n  dq[1] = a[1];\r\n  dq[2] = a[2];\r\n  dq[3] = a[3];\r\n  dq[4] = a[4];\r\n  dq[5] = a[5];\r\n  dq[6] = a[6];\r\n  dq[7] = a[7];\r\n  return dq;\r\n}\r\n\r\n/**\r\n * Creates a new dual quat initialized with the given values\r\n *\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component\r\n * @param {Number} y2 Y component\r\n * @param {Number} z2 Z component\r\n * @param {Number} w2 W component\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\r\nexport function fromValues(x1, y1, z1, w1, x2, y2, z2, w2) {\r\n  var dq = new glMatrix.ARRAY_TYPE(8);\r\n  dq[0] = x1;\r\n  dq[1] = y1;\r\n  dq[2] = z1;\r\n  dq[3] = w1;\r\n  dq[4] = x2;\r\n  dq[5] = y2;\r\n  dq[6] = z2;\r\n  dq[7] = w2;\r\n  return dq;\r\n}\r\n\r\n/**\r\n * Creates a new dual quat from the given values (quat and translation)\r\n *\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component (translation)\r\n * @param {Number} y2 Y component (translation)\r\n * @param {Number} z2 Z component (translation)\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\r\nexport function fromRotationTranslationValues(x1, y1, z1, w1, x2, y2, z2) {\r\n  var dq = new glMatrix.ARRAY_TYPE(8);\r\n  dq[0] = x1;\r\n  dq[1] = y1;\r\n  dq[2] = z1;\r\n  dq[3] = w1;\r\n  var ax = x2 * 0.5,\r\n      ay = y2 * 0.5,\r\n      az = z2 * 0.5;\r\n  dq[4] = ax * w1 + ay * z1 - az * y1;\r\n  dq[5] = ay * w1 + az * x1 - ax * z1;\r\n  dq[6] = az * w1 + ax * y1 - ay * x1;\r\n  dq[7] = -ax * x1 - ay * y1 - az * z1;\r\n  return dq;\r\n}\r\n\r\n/**\r\n * Creates a dual quat from a quaternion and a translation\r\n *\r\n * @param {quat2} dual quaternion receiving operation result\r\n * @param {quat} q quaternion\r\n * @param {vec3} t tranlation vector\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\r\nexport function fromRotationTranslation(out, q, t) {\r\n  var ax = t[0] * 0.5,\r\n      ay = t[1] * 0.5,\r\n      az = t[2] * 0.5,\r\n      bx = q[0],\r\n      by = q[1],\r\n      bz = q[2],\r\n      bw = q[3];\r\n  out[0] = bx;\r\n  out[1] = by;\r\n  out[2] = bz;\r\n  out[3] = bw;\r\n  out[4] = ax * bw + ay * bz - az * by;\r\n  out[5] = ay * bw + az * bx - ax * bz;\r\n  out[6] = az * bw + ax * by - ay * bx;\r\n  out[7] = -ax * bx - ay * by - az * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a dual quat from a translation\r\n *\r\n * @param {quat2} dual quaternion receiving operation result\r\n * @param {vec3} t translation vector\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\r\nexport function fromTranslation(out, t) {\r\n  out[0] = 0;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 1;\r\n  out[4] = t[0] * 0.5;\r\n  out[5] = t[1] * 0.5;\r\n  out[6] = t[2] * 0.5;\r\n  out[7] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a dual quat from a quaternion\r\n *\r\n * @param {quat2} dual quaternion receiving operation result\r\n * @param {quat} q the quaternion\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\r\nexport function fromRotation(out, q) {\r\n  out[0] = q[0];\r\n  out[1] = q[1];\r\n  out[2] = q[2];\r\n  out[3] = q[3];\r\n  out[4] = 0;\r\n  out[5] = 0;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new dual quat from a matrix (4x4)\r\n *\r\n * @param {quat2} out the dual quaternion\r\n * @param {mat4} a the matrix\r\n * @returns {quat2} dual quat receiving operation result\r\n * @function\r\n */\r\nexport function fromMat4(out, a) {\r\n  //TODO Optimize this\r\n  var outer = quat.create();\r\n  mat4.getRotation(outer, a);\r\n  var t = new glMatrix.ARRAY_TYPE(3);\r\n  mat4.getTranslation(t, a);\r\n  fromRotationTranslation(out, outer, t);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one dual quat to another\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the source dual quaternion\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set a dual quat to the identity dual quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @returns {quat2} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 0;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 1;\r\n  out[4] = 0;\r\n  out[5] = 0;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a dual quat to the given values\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component\r\n * @param {Number} y2 Y component\r\n * @param {Number} z2 Z component\r\n * @param {Number} w2 W component\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport function set(out, x1, y1, z1, w1, x2, y2, z2, w2) {\r\n  out[0] = x1;\r\n  out[1] = y1;\r\n  out[2] = z1;\r\n  out[3] = w1;\r\n\r\n  out[4] = x2;\r\n  out[5] = y2;\r\n  out[6] = z2;\r\n  out[7] = w2;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Gets the real part of a dual quat\r\n * @param  {quat} out real part\r\n * @param  {quat2} a Dual Quaternion\r\n * @return {quat} real part\r\n */\r\nexport var getReal = quat.copy;\r\n\r\n/**\r\n * Gets the dual part of a dual quat\r\n * @param  {quat} out dual part\r\n * @param  {quat2} a Dual Quaternion\r\n * @return {quat} dual part\r\n */\r\nexport function getDual(out, a) {\r\n  out[0] = a[4];\r\n  out[1] = a[5];\r\n  out[2] = a[6];\r\n  out[3] = a[7];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the real component of a dual quat to the given quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {quat} q a quaternion representing the real part\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport var setReal = quat.copy;\r\n\r\n/**\r\n * Set the dual component of a dual quat to the given quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {quat} q a quaternion representing the dual part\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport function setDual(out, q) {\r\n  out[4] = q[0];\r\n  out[5] = q[1];\r\n  out[6] = q[2];\r\n  out[7] = q[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Gets the translation of a normalized dual quat\r\n * @param  {vec3} out translation\r\n * @param  {quat2} a Dual Quaternion to be decomposed\r\n * @return {vec3} translation\r\n */\r\nexport function getTranslation(out, a) {\r\n  var ax = a[4],\r\n      ay = a[5],\r\n      az = a[6],\r\n      aw = a[7],\r\n      bx = -a[0],\r\n      by = -a[1],\r\n      bz = -a[2],\r\n      bw = a[3];\r\n  out[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\r\n  out[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\r\n  out[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Translates a dual quat by the given vector\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to translate\r\n * @param {vec3} v vector to translate by\r\n * @returns {quat2} out\r\n */\r\nexport function translate(out, a, v) {\r\n  var ax1 = a[0],\r\n      ay1 = a[1],\r\n      az1 = a[2],\r\n      aw1 = a[3],\r\n      bx1 = v[0] * 0.5,\r\n      by1 = v[1] * 0.5,\r\n      bz1 = v[2] * 0.5,\r\n      ax2 = a[4],\r\n      ay2 = a[5],\r\n      az2 = a[6],\r\n      aw2 = a[7];\r\n  out[0] = ax1;\r\n  out[1] = ay1;\r\n  out[2] = az1;\r\n  out[3] = aw1;\r\n  out[4] = aw1 * bx1 + ay1 * bz1 - az1 * by1 + ax2;\r\n  out[5] = aw1 * by1 + az1 * bx1 - ax1 * bz1 + ay2;\r\n  out[6] = aw1 * bz1 + ax1 * by1 - ay1 * bx1 + az2;\r\n  out[7] = -ax1 * bx1 - ay1 * by1 - az1 * bz1 + aw2;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a dual quat around the X axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\r\nexport function rotateX(out, a, rad) {\r\n  var bx = -a[0],\r\n      by = -a[1],\r\n      bz = -a[2],\r\n      bw = a[3],\r\n      ax = a[4],\r\n      ay = a[5],\r\n      az = a[6],\r\n      aw = a[7],\r\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\r\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\r\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\r\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\r\n  quat.rotateX(out, a, rad);\r\n  bx = out[0];\r\n  by = out[1];\r\n  bz = out[2];\r\n  bw = out[3];\r\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\r\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\r\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\r\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a dual quat around the Y axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\r\nexport function rotateY(out, a, rad) {\r\n  var bx = -a[0],\r\n      by = -a[1],\r\n      bz = -a[2],\r\n      bw = a[3],\r\n      ax = a[4],\r\n      ay = a[5],\r\n      az = a[6],\r\n      aw = a[7],\r\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\r\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\r\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\r\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\r\n  quat.rotateY(out, a, rad);\r\n  bx = out[0];\r\n  by = out[1];\r\n  bz = out[2];\r\n  bw = out[3];\r\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\r\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\r\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\r\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a dual quat around the Z axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\r\nexport function rotateZ(out, a, rad) {\r\n  var bx = -a[0],\r\n      by = -a[1],\r\n      bz = -a[2],\r\n      bw = a[3],\r\n      ax = a[4],\r\n      ay = a[5],\r\n      az = a[6],\r\n      aw = a[7],\r\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\r\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\r\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\r\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\r\n  quat.rotateZ(out, a, rad);\r\n  bx = out[0];\r\n  by = out[1];\r\n  bz = out[2];\r\n  bw = out[3];\r\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\r\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\r\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\r\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a dual quat by a given quaternion (a * q)\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {quat} q quaternion to rotate by\r\n * @returns {quat2} out\r\n */\r\nexport function rotateByQuatAppend(out, a, q) {\r\n  var qx = q[0],\r\n      qy = q[1],\r\n      qz = q[2],\r\n      qw = q[3],\r\n      ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n\r\n  out[0] = ax * qw + aw * qx + ay * qz - az * qy;\r\n  out[1] = ay * qw + aw * qy + az * qx - ax * qz;\r\n  out[2] = az * qw + aw * qz + ax * qy - ay * qx;\r\n  out[3] = aw * qw - ax * qx - ay * qy - az * qz;\r\n  ax = a[4];\r\n  ay = a[5];\r\n  az = a[6];\r\n  aw = a[7];\r\n  out[4] = ax * qw + aw * qx + ay * qz - az * qy;\r\n  out[5] = ay * qw + aw * qy + az * qx - ax * qz;\r\n  out[6] = az * qw + aw * qz + ax * qy - ay * qx;\r\n  out[7] = aw * qw - ax * qx - ay * qy - az * qz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a dual quat by a given quaternion (q * a)\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat} q quaternion to rotate by\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @returns {quat2} out\r\n */\r\nexport function rotateByQuatPrepend(out, q, a) {\r\n  var qx = q[0],\r\n      qy = q[1],\r\n      qz = q[2],\r\n      qw = q[3],\r\n      bx = a[0],\r\n      by = a[1],\r\n      bz = a[2],\r\n      bw = a[3];\r\n\r\n  out[0] = qx * bw + qw * bx + qy * bz - qz * by;\r\n  out[1] = qy * bw + qw * by + qz * bx - qx * bz;\r\n  out[2] = qz * bw + qw * bz + qx * by - qy * bx;\r\n  out[3] = qw * bw - qx * bx - qy * by - qz * bz;\r\n  bx = a[4];\r\n  by = a[5];\r\n  bz = a[6];\r\n  bw = a[7];\r\n  out[4] = qx * bw + qw * bx + qy * bz - qz * by;\r\n  out[5] = qy * bw + qw * by + qz * bx - qx * bz;\r\n  out[6] = qz * bw + qw * bz + qx * by - qy * bx;\r\n  out[7] = qw * bw - qx * bx - qy * by - qz * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a dual quat around a given axis. Does the normalisation automatically\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {vec3} axis the axis to rotate around\r\n * @param {Number} rad how far the rotation should be\r\n * @returns {quat2} out\r\n */\r\nexport function rotateAroundAxis(out, a, axis, rad) {\r\n  //Special case for rad = 0\r\n  if (Math.abs(rad) < glMatrix.EPSILON) {\r\n    return copy(out, a);\r\n  }\r\n  var axisLength = Math.sqrt(axis[0] * axis[0] + axis[1] * axis[1] + axis[2] * axis[2]);\r\n\r\n  rad = rad * 0.5;\r\n  var s = Math.sin(rad);\r\n  var bx = s * axis[0] / axisLength;\r\n  var by = s * axis[1] / axisLength;\r\n  var bz = s * axis[2] / axisLength;\r\n  var bw = Math.cos(rad);\r\n\r\n  var ax1 = a[0],\r\n      ay1 = a[1],\r\n      az1 = a[2],\r\n      aw1 = a[3];\r\n  out[0] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\r\n  out[1] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\r\n  out[2] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\r\n  out[3] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\r\n\r\n  var ax = a[4],\r\n      ay = a[5],\r\n      az = a[6],\r\n      aw = a[7];\r\n  out[4] = ax * bw + aw * bx + ay * bz - az * by;\r\n  out[5] = ay * bw + aw * by + az * bx - ax * bz;\r\n  out[6] = az * bw + aw * bz + ax * by - ay * bx;\r\n  out[7] = aw * bw - ax * bx - ay * by - az * bz;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two dual quat's\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  out[4] = a[4] + b[4];\r\n  out[5] = a[5] + b[5];\r\n  out[6] = a[6] + b[6];\r\n  out[7] = a[7] + b[7];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiplies two dual quat's\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @returns {quat2} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  var ax0 = a[0],\r\n      ay0 = a[1],\r\n      az0 = a[2],\r\n      aw0 = a[3],\r\n      bx1 = b[4],\r\n      by1 = b[5],\r\n      bz1 = b[6],\r\n      bw1 = b[7],\r\n      ax1 = a[4],\r\n      ay1 = a[5],\r\n      az1 = a[6],\r\n      aw1 = a[7],\r\n      bx0 = b[0],\r\n      by0 = b[1],\r\n      bz0 = b[2],\r\n      bw0 = b[3];\r\n  out[0] = ax0 * bw0 + aw0 * bx0 + ay0 * bz0 - az0 * by0;\r\n  out[1] = ay0 * bw0 + aw0 * by0 + az0 * bx0 - ax0 * bz0;\r\n  out[2] = az0 * bw0 + aw0 * bz0 + ax0 * by0 - ay0 * bx0;\r\n  out[3] = aw0 * bw0 - ax0 * bx0 - ay0 * by0 - az0 * bz0;\r\n  out[4] = ax0 * bw1 + aw0 * bx1 + ay0 * bz1 - az0 * by1 + ax1 * bw0 + aw1 * bx0 + ay1 * bz0 - az1 * by0;\r\n  out[5] = ay0 * bw1 + aw0 * by1 + az0 * bx1 - ax0 * bz1 + ay1 * bw0 + aw1 * by0 + az1 * bx0 - ax1 * bz0;\r\n  out[6] = az0 * bw1 + aw0 * bz1 + ax0 * by1 - ay0 * bx1 + az1 * bw0 + aw1 * bz0 + ax1 * by0 - ay1 * bx0;\r\n  out[7] = aw0 * bw1 - ax0 * bx1 - ay0 * by1 - az0 * bz1 + aw1 * bw0 - ax1 * bx0 - ay1 * by0 - az1 * bz0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Alias for {@link quat2.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Scales a dual quat by a scalar number\r\n *\r\n * @param {quat2} out the receiving dual quat\r\n * @param {quat2} a the dual quat to scale\r\n * @param {Number} b amount to scale the dual quat by\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport function scale(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  out[4] = a[4] * b;\r\n  out[5] = a[5] * b;\r\n  out[6] = a[6] * b;\r\n  out[7] = a[7] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the dot product of two dual quat's (The dot product of the real parts)\r\n *\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\r\nexport var dot = quat.dot;\r\n\r\n/**\r\n * Performs a linear interpolation between two dual quats's\r\n * NOTE: The resulting dual quaternions won't always be normalized (The error is most noticeable when t = 0.5)\r\n *\r\n * @param {quat2} out the receiving dual quat\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat2} out\r\n */\r\nexport function lerp(out, a, b, t) {\r\n  var mt = 1 - t;\r\n  if (dot(a, b) < 0) t = -t;\r\n\r\n  out[0] = a[0] * mt + b[0] * t;\r\n  out[1] = a[1] * mt + b[1] * t;\r\n  out[2] = a[2] * mt + b[2] * t;\r\n  out[3] = a[3] * mt + b[3] * t;\r\n  out[4] = a[4] * mt + b[4] * t;\r\n  out[5] = a[5] * mt + b[5] * t;\r\n  out[6] = a[6] * mt + b[6] * t;\r\n  out[7] = a[7] * mt + b[7] * t;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the inverse of a dual quat. If they are normalized, conjugate is cheaper\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a dual quat to calculate inverse of\r\n * @returns {quat2} out\r\n */\r\nexport function invert(out, a) {\r\n  var sqlen = squaredLength(a);\r\n  out[0] = -a[0] / sqlen;\r\n  out[1] = -a[1] / sqlen;\r\n  out[2] = -a[2] / sqlen;\r\n  out[3] = a[3] / sqlen;\r\n  out[4] = -a[4] / sqlen;\r\n  out[5] = -a[5] / sqlen;\r\n  out[6] = -a[6] / sqlen;\r\n  out[7] = a[7] / sqlen;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the conjugate of a dual quat\r\n * If the dual quaternion is normalized, this function is faster than quat2.inverse and produces the same result.\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {quat2} a quat to calculate conjugate of\r\n * @returns {quat2} out\r\n */\r\nexport function conjugate(out, a) {\r\n  out[0] = -a[0];\r\n  out[1] = -a[1];\r\n  out[2] = -a[2];\r\n  out[3] = a[3];\r\n  out[4] = -a[4];\r\n  out[5] = -a[5];\r\n  out[6] = -a[6];\r\n  out[7] = a[7];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the length of a dual quat\r\n *\r\n * @param {quat2} a dual quat to calculate length of\r\n * @returns {Number} length of a\r\n * @function\r\n */\r\nexport var length = quat.length;\r\n\r\n/**\r\n * Alias for {@link quat2.length}\r\n * @function\r\n */\r\nexport var len = length;\r\n\r\n/**\r\n * Calculates the squared length of a dual quat\r\n *\r\n * @param {quat2} a dual quat to calculate squared length of\r\n * @returns {Number} squared length of a\r\n * @function\r\n */\r\nexport var squaredLength = quat.squaredLength;\r\n\r\n/**\r\n * Alias for {@link quat2.squaredLength}\r\n * @function\r\n */\r\nexport var sqrLen = squaredLength;\r\n\r\n/**\r\n * Normalize a dual quat\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a dual quaternion to normalize\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport function normalize(out, a) {\r\n  var magnitude = squaredLength(a);\r\n  if (magnitude > 0) {\r\n    magnitude = Math.sqrt(magnitude);\r\n\r\n    var a0 = a[0] / magnitude;\r\n    var a1 = a[1] / magnitude;\r\n    var a2 = a[2] / magnitude;\r\n    var a3 = a[3] / magnitude;\r\n\r\n    var b0 = a[4];\r\n    var b1 = a[5];\r\n    var b2 = a[6];\r\n    var b3 = a[7];\r\n\r\n    var a_dot_b = a0 * b0 + a1 * b1 + a2 * b2 + a3 * b3;\r\n\r\n    out[0] = a0;\r\n    out[1] = a1;\r\n    out[2] = a2;\r\n    out[3] = a3;\r\n\r\n    out[4] = (b0 - a0 * a_dot_b) / magnitude;\r\n    out[5] = (b1 - a1 * a_dot_b) / magnitude;\r\n    out[6] = (b2 - a2 * a_dot_b) / magnitude;\r\n    out[7] = (b3 - a3 * a_dot_b) / magnitude;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a dual quatenion\r\n *\r\n * @param {quat2} a dual quaternion to represent as a string\r\n * @returns {String} string representation of the dual quat\r\n */\r\nexport function str(a) {\r\n  return 'quat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ')';\r\n}\r\n\r\n/**\r\n * Returns whether or not the dual quaternions have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {quat2} a the first dual quaternion.\r\n * @param {quat2} b the second dual quaternion.\r\n * @returns {Boolean} true if the dual quaternions are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7];\r\n}\r\n\r\n/**\r\n * Returns whether or not the dual quaternions have approximately the same elements in the same position.\r\n *\r\n * @param {quat2} a the first dual quat.\r\n * @param {quat2} b the second dual quat.\r\n * @returns {Boolean} true if the dual quats are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5],\r\n      a6 = a[6],\r\n      a7 = a[7];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3],\r\n      b4 = b[4],\r\n      b5 = b[5],\r\n      b6 = b[6],\r\n      b7 = b[7];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7));\r\n}","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 2 Dimensional Vector\r\n * @module vec2\r\n */\r\n\r\n/**\r\n * Creates a new, empty vec2\r\n *\r\n * @returns {vec2} a new 2D vector\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(2);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[0] = 0;\r\n    out[1] = 0;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new vec2 initialized with values from an existing vector\r\n *\r\n * @param {vec2} a vector to clone\r\n * @returns {vec2} a new 2D vector\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(2);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new vec2 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} a new 2D vector\r\n */\r\nexport function fromValues(x, y) {\r\n  var out = new glMatrix.ARRAY_TYPE(2);\r\n  out[0] = x;\r\n  out[1] = y;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one vec2 to another\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the source vector\r\n * @returns {vec2} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a vec2 to the given values\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} out\r\n */\r\nexport function set(out, x, y) {\r\n  out[0] = x;\r\n  out[1] = y;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiplies two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  out[0] = a[0] * b[0];\r\n  out[1] = a[1] * b[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Divides two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function divide(out, a, b) {\r\n  out[0] = a[0] / b[0];\r\n  out[1] = a[1] / b[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.ceil the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to ceil\r\n * @returns {vec2} out\r\n */\r\nexport function ceil(out, a) {\r\n  out[0] = Math.ceil(a[0]);\r\n  out[1] = Math.ceil(a[1]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.floor the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to floor\r\n * @returns {vec2} out\r\n */\r\nexport function floor(out, a) {\r\n  out[0] = Math.floor(a[0]);\r\n  out[1] = Math.floor(a[1]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the minimum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function min(out, a, b) {\r\n  out[0] = Math.min(a[0], b[0]);\r\n  out[1] = Math.min(a[1], b[1]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the maximum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function max(out, a, b) {\r\n  out[0] = Math.max(a[0], b[0]);\r\n  out[1] = Math.max(a[1], b[1]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.round the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to round\r\n * @returns {vec2} out\r\n */\r\nexport function round(out, a) {\r\n  out[0] = Math.round(a[0]);\r\n  out[1] = Math.round(a[1]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales a vec2 by a scalar number\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec2} out\r\n */\r\nexport function scale(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec2's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec2} out\r\n */\r\nexport function scaleAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the euclidian distance between two vec2's\r\n *\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\r\nexport function distance(a, b) {\r\n  var x = b[0] - a[0],\r\n      y = b[1] - a[1];\r\n  return Math.sqrt(x * x + y * y);\r\n}\r\n\r\n/**\r\n * Calculates the squared euclidian distance between two vec2's\r\n *\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\r\nexport function squaredDistance(a, b) {\r\n  var x = b[0] - a[0],\r\n      y = b[1] - a[1];\r\n  return x * x + y * y;\r\n}\r\n\r\n/**\r\n * Calculates the length of a vec2\r\n *\r\n * @param {vec2} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\r\nexport function length(a) {\r\n  var x = a[0],\r\n      y = a[1];\r\n  return Math.sqrt(x * x + y * y);\r\n}\r\n\r\n/**\r\n * Calculates the squared length of a vec2\r\n *\r\n * @param {vec2} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\r\nexport function squaredLength(a) {\r\n  var x = a[0],\r\n      y = a[1];\r\n  return x * x + y * y;\r\n}\r\n\r\n/**\r\n * Negates the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to negate\r\n * @returns {vec2} out\r\n */\r\nexport function negate(out, a) {\r\n  out[0] = -a[0];\r\n  out[1] = -a[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the inverse of the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to invert\r\n * @returns {vec2} out\r\n */\r\nexport function inverse(out, a) {\r\n  out[0] = 1.0 / a[0];\r\n  out[1] = 1.0 / a[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Normalize a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to normalize\r\n * @returns {vec2} out\r\n */\r\nexport function normalize(out, a) {\r\n  var x = a[0],\r\n      y = a[1];\r\n  var len = x * x + y * y;\r\n  if (len > 0) {\r\n    //TODO: evaluate use of glm_invsqrt here?\r\n    len = 1 / Math.sqrt(len);\r\n    out[0] = a[0] * len;\r\n    out[1] = a[1] * len;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the dot product of two vec2's\r\n *\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\r\nexport function dot(a, b) {\r\n  return a[0] * b[0] + a[1] * b[1];\r\n}\r\n\r\n/**\r\n * Computes the cross product of two vec2's\r\n * Note that the cross product must by definition produce a 3D vector\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function cross(out, a, b) {\r\n  var z = a[0] * b[1] - a[1] * b[0];\r\n  out[0] = out[1] = 0;\r\n  out[2] = z;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Performs a linear interpolation between two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec2} out\r\n */\r\nexport function lerp(out, a, b, t) {\r\n  var ax = a[0],\r\n      ay = a[1];\r\n  out[0] = ax + t * (b[0] - ax);\r\n  out[1] = ay + t * (b[1] - ay);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec2} out\r\n */\r\nexport function random(out, scale) {\r\n  scale = scale || 1.0;\r\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\r\n  out[0] = Math.cos(r) * scale;\r\n  out[1] = Math.sin(r) * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec2 with a mat2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat2} m matrix to transform with\r\n * @returns {vec2} out\r\n */\r\nexport function transformMat2(out, a, m) {\r\n  var x = a[0],\r\n      y = a[1];\r\n  out[0] = m[0] * x + m[2] * y;\r\n  out[1] = m[1] * x + m[3] * y;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec2 with a mat2d\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat2d} m matrix to transform with\r\n * @returns {vec2} out\r\n */\r\nexport function transformMat2d(out, a, m) {\r\n  var x = a[0],\r\n      y = a[1];\r\n  out[0] = m[0] * x + m[2] * y + m[4];\r\n  out[1] = m[1] * x + m[3] * y + m[5];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec2 with a mat3\r\n * 3rd vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat3} m matrix to transform with\r\n * @returns {vec2} out\r\n */\r\nexport function transformMat3(out, a, m) {\r\n  var x = a[0],\r\n      y = a[1];\r\n  out[0] = m[0] * x + m[3] * y + m[6];\r\n  out[1] = m[1] * x + m[4] * y + m[7];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec2 with a mat4\r\n * 3rd vector component is implicitly '0'\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec2} out\r\n */\r\nexport function transformMat4(out, a, m) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  out[0] = m[0] * x + m[4] * y + m[12];\r\n  out[1] = m[1] * x + m[5] * y + m[13];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotate a 2D vector\r\n * @param {vec2} out The receiving vec2\r\n * @param {vec2} a The vec2 point to rotate\r\n * @param {vec2} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec2} out\r\n */\r\nexport function rotate(out, a, b, c) {\r\n  //Translate point to the origin\r\n  var p0 = a[0] - b[0],\r\n      p1 = a[1] - b[1],\r\n      sinC = Math.sin(c),\r\n      cosC = Math.cos(c);\r\n\r\n  //perform rotation and translate to correct position\r\n  out[0] = p0 * cosC - p1 * sinC + b[0];\r\n  out[1] = p0 * sinC + p1 * cosC + b[1];\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Get the angle between two 2D vectors\r\n * @param {vec2} a The first operand\r\n * @param {vec2} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\r\nexport function angle(a, b) {\r\n  var x1 = a[0],\r\n      y1 = a[1],\r\n      x2 = b[0],\r\n      y2 = b[1];\r\n\r\n  var len1 = x1 * x1 + y1 * y1;\r\n  if (len1 > 0) {\r\n    //TODO: evaluate use of glm_invsqrt here?\r\n    len1 = 1 / Math.sqrt(len1);\r\n  }\r\n\r\n  var len2 = x2 * x2 + y2 * y2;\r\n  if (len2 > 0) {\r\n    //TODO: evaluate use of glm_invsqrt here?\r\n    len2 = 1 / Math.sqrt(len2);\r\n  }\r\n\r\n  var cosine = (x1 * x2 + y1 * y2) * len1 * len2;\r\n\r\n  if (cosine > 1.0) {\r\n    return 0;\r\n  } else if (cosine < -1.0) {\r\n    return Math.PI;\r\n  } else {\r\n    return Math.acos(cosine);\r\n  }\r\n}\r\n\r\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec2} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\r\nexport function str(a) {\r\n  return 'vec2(' + a[0] + ', ' + a[1] + ')';\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec2} a The first vector.\r\n * @param {vec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1];\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec2} a The first vector.\r\n * @param {vec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1];\r\n  var b0 = b[0],\r\n      b1 = b[1];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\r\n}\r\n\r\n/**\r\n * Alias for {@link vec2.length}\r\n * @function\r\n */\r\nexport var len = length;\r\n\r\n/**\r\n * Alias for {@link vec2.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;\r\n\r\n/**\r\n * Alias for {@link vec2.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link vec2.divide}\r\n * @function\r\n */\r\nexport var div = divide;\r\n\r\n/**\r\n * Alias for {@link vec2.distance}\r\n * @function\r\n */\r\nexport var dist = distance;\r\n\r\n/**\r\n * Alias for {@link vec2.squaredDistance}\r\n * @function\r\n */\r\nexport var sqrDist = squaredDistance;\r\n\r\n/**\r\n * Alias for {@link vec2.squaredLength}\r\n * @function\r\n */\r\nexport var sqrLen = squaredLength;\r\n\r\n/**\r\n * Perform some operation over an array of vec2s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\r\nexport var forEach = function () {\r\n  var vec = create();\r\n\r\n  return function (a, stride, offset, count, fn, arg) {\r\n    var i = void 0,\r\n        l = void 0;\r\n    if (!stride) {\r\n      stride = 2;\r\n    }\r\n\r\n    if (!offset) {\r\n      offset = 0;\r\n    }\r\n\r\n    if (count) {\r\n      l = Math.min(count * stride + offset, a.length);\r\n    } else {\r\n      l = a.length;\r\n    }\r\n\r\n    for (i = offset; i < l; i += stride) {\r\n      vec[0] = a[i];vec[1] = a[i + 1];\r\n      fn(vec, vec, arg);\r\n      a[i] = vec[0];a[i + 1] = vec[1];\r\n    }\r\n\r\n    return a;\r\n  };\r\n}();","import * as glMatrix from \"./gl-matrix/common.js\";\r\nimport * as mat2 from \"./gl-matrix/mat2.js\";\r\nimport * as mat2d from \"./gl-matrix/mat2d.js\";\r\nimport * as mat3 from \"./gl-matrix/mat3.js\";\r\nimport * as mat4 from \"./gl-matrix/mat4.js\";\r\nimport * as quat from \"./gl-matrix/quat.js\";\r\nimport * as quat2 from \"./gl-matrix/quat2.js\";\r\nimport * as vec2 from \"./gl-matrix/vec2.js\";\r\nimport * as vec3 from \"./gl-matrix/vec3.js\";\r\nimport * as vec4 from \"./gl-matrix/vec4.js\";\r\n\r\nexport { glMatrix, mat2, mat2d, mat3, mat4, quat, quat2, vec2, vec3, vec4 };","\"use strict\"\n\nvar glm = require(\"gl-matrix\")\nvar vec3 = glm.vec3\nvar mat3 = glm.mat3\nvar mat4 = glm.mat4\nvar quat = glm.quat\n\n//Scratch variables\nvar scratch0 = new Float32Array(16)\nvar scratch1 = new Float32Array(16)\n\nfunction OrbitCamera(rotation, center, distance) {\n  this.rotation = rotation\n  this.center   = center\n  this.distance = distance\n}\n\nvar proto = OrbitCamera.prototype\n\nproto.view = function(out) {\n  if(!out) {\n    out = mat4.create()\n  }\n  scratch1[0] = scratch1[1] = 0.0\n  scratch1[2] = -this.distance\n  mat4.fromRotationTranslation(out,\n    quat.conjugate(scratch0, this.rotation),\n    scratch1)\n  mat4.translate(out, out, vec3.negate(scratch0, this.center))\n  return out\n}\n\nproto.lookAt = function(eye, center, up) {\n  mat4.lookAt(scratch0, eye, center, up)\n  mat3.fromMat4(scratch0, scratch0)\n  quat.fromMat3(this.rotation, scratch0)\n  vec3.copy(this.center, center)\n  this.distance = vec3.distance(eye, center)\n}\n\nproto.pan = function(dpan) {\n  var d = this.distance\n  scratch0[0] = -d*(dpan[0]||0)\n  scratch0[1] =  d*(dpan[1]||0)\n  scratch0[2] =  d*(dpan[2]||0)\n  vec3.transformQuat(scratch0, scratch0, this.rotation)\n  vec3.add(this.center, this.center, scratch0)\n}\n\nproto.zoom = function(d) {\n  this.distance += d\n  if(this.distance < 0.0) {\n    this.distance = 0.0\n  }\n}\n\nfunction quatFromVec(out, da) {\n  var x = da[0]\n  var y = da[1]\n  var z = da[2]\n  var s = x*x + y*y\n  if(s > 1.0) {\n    s = 1.0\n  }\n  out[0] = -da[0]\n  out[1] =  da[1]\n  out[2] =  da[2] || Math.sqrt(1.0 - s)\n  out[3] =  0.0\n}\n\nproto.rotate = function(da, db) {\n  quatFromVec(scratch0, da)\n  quatFromVec(scratch1, db)\n  quat.invert(scratch1, scratch1)\n  quat.multiply(scratch0, scratch0, scratch1)\n  if(quat.length(scratch0) < 1e-6) {\n    return\n  }\n  quat.multiply(this.rotation, this.rotation, scratch0)\n  quat.normalize(this.rotation, this.rotation)\n}\n\nfunction createOrbitCamera(eye, target, up) {\n  eye     = eye     || [0,0,-1]\n  target  = target  || [0,0,0]\n  up      = up      || [0,1,0]\n  var camera = new OrbitCamera(quat.create(), vec3.create(), 1.0)\n  camera.lookAt(eye, target, up)\n  return camera\n}\n\nmodule.exports = createOrbitCamera\n",null,"import createREGL from 'regl'\nimport heightmapVert from './heightmap.vert'\nimport heightmapFrag from './heightmap.frag'\nimport { Vec2 } from '@tstackgl/types'\n\ntype Props = {\n  uTime: Number\n  uResolution: Vec2\n}\n\ntype Uniforms = Props\n\n// see here: https://github.com/mikolalysenko/a-big-triangle\ntype Attributes = { position: Float32Array }\n\nexport const createDrawHeight = (regl: createREGL.Regl) => {\n  const draw = regl<Uniforms, Attributes, Props>({\n    vert: heightmapVert,\n    frag: heightmapFrag,\n\n    attributes: {\n      position: new Float32Array([-1, -1, -1, 4, 4, -1]),\n    },\n\n    uniforms: {\n      uTime: regl.prop<Props, 'uTime'>('uTime'),\n      uResolution: regl.prop<Props, 'uResolution'>('uResolution'),\n    },\n\n    count: 3,\n  })\n\n  return { draw }\n}\n","import createREGL from 'regl'\nimport heightmapVert from './voxel.vert'\nimport heightmapFrag from './voxel.frag'\nimport { Vec2, Mat4 } from '@tstackgl/types'\n\nexport type PropsVoxel = {\n  uResolution: Vec2\n  uViewRotation: Mat4\n  uProjection: Mat4\n  uModel: Mat4\n  uView: Mat4\n  tHeightmap: createREGL.Framebuffer2D\n  tGradient: createREGL.Texture2D\n}\n\ntype Uniforms = PropsVoxel\n\ntype Attributes = {\n  aPosition: Float32Array\n  aCentroid: Float32Array\n  aNormal: Float32Array\n  aEdge: Float32Array\n}\n\nexport const createDrawVoxel = (\n  regl: createREGL.Regl,\n  voxel: {\n    positions: Float32Array\n    centroids: Float32Array\n    normals: Float32Array\n    edges: Float32Array\n  },\n) => {\n  console.log({ voxel })\n  const draw = regl<Uniforms, Attributes, PropsVoxel>({\n    vert: heightmapVert,\n    frag: heightmapFrag,\n\n    attributes: {\n      aPosition: voxel.positions,\n      aCentroid: voxel.centroids,\n      aNormal: voxel.normals,\n      aEdge: voxel.edges,\n    },\n\n    uniforms: {\n      uResolution: regl.prop<PropsVoxel, 'uResolution'>('uResolution'),\n      uViewRotation: regl.prop<PropsVoxel, 'uViewRotation'>('uViewRotation'),\n      uProjection: regl.prop<PropsVoxel, 'uProjection'>('uProjection'),\n      uModel: regl.prop<PropsVoxel, 'uModel'>('uModel'),\n      uView: regl.prop<PropsVoxel, 'uView'>('uView'),\n      tHeightmap: regl.prop<PropsVoxel, 'tHeightmap'>('tHeightmap'),\n      tGradient: regl.prop<PropsVoxel, 'tGradient'>('tGradient'),\n    },\n\n    count: voxel.positions.length / 3,\n\n    cull: {\n      enable: true, // why this is so important??\n    },\n  })\n\n  return { draw }\n}\n","import createRegl from 'regl'\nimport { start } from '@thi.ng/hdom'\nimport { canvasWebGL, adaptDPI } from '@thi.ng/hdom-components/canvas'\nimport { hasWebGL } from '@thi.ng/checks'\nimport { createFrameCatch } from '@tstackgl/regl-draw'\nimport qbqb from 'cube-cube'\nimport unindex from 'unindex-mesh'\nimport { combine } from '@tstackgl/geometry'\nimport clone from 'clone'\nimport mat4 from 'gl-mat4'\nimport quat from 'gl-quat'\nimport gradientMap from './gradient-map'\nimport { Mesh, Vec3, Vec2 } from '@tstackgl/types'\nimport normals from 'face-normals'\nimport createCamera from 'orbit-camera'\nimport { createDrawHeight } from './draw-height'\nimport { PropsVoxel, createDrawVoxel } from './draw-voxel'\n\nlet loop = { cancel: function() {} }\n\nconst SIZE = 16\nconst TIMESCALE = 0.5\nconst RES: Vec2 = [1 / SIZE, 1 / SIZE]\n\nfunction getCentroids(meshes: Array<Mesh & { centroid: Vec3 }>) {\n  return meshes.map(function(mesh) {\n    mesh = clone(mesh)\n\n    for (let i = 0; i < mesh.positions.length; i++) {\n      mesh.positions[i] = mesh.centroid\n    }\n\n    return mesh\n  })\n}\n\nfunction getEdges(meshes: Array<Mesh & { index: Vec3 }>) {\n  return meshes.map(function(mesh) {\n    mesh = clone(mesh)\n\n    var idx = mesh.index\n\n    for (let i = 0; i < mesh.positions.length; i++) {\n      var pos = mesh.positions[i]\n      mesh.positions[i] = mesh.positions[i].slice() as Vec3\n      mesh.positions[i][0] = (pos[0] * SIZE - idx[0] - 0.5) * 2\n      mesh.positions[i][2] = (pos[2] * SIZE - idx[2] - 0.5) * 2\n      mesh.positions[i][1] = (pos[1] - idx[1] - 0.5) * 2\n    }\n\n    return mesh\n  })\n}\n\nfunction createMesh() {\n  const voxels = qbqb(SIZE, 1, SIZE)\n  const positions = unindex(combine(voxels))\n  const edges = unindex(combine(getEdges(voxels)))\n  const centroids = unindex(combine(getCentroids(voxels)))\n\n  return {\n    positions: positions,\n    centroids: centroids,\n    normals: normals(positions),\n    edges: edges,\n  }\n}\n\nconst getTime =\n  window.performance && window.performance.now\n    ? function now() {\n        return performance.now()\n      }\n    : Date.now ||\n      function now() {\n        return +new Date()\n      }\n\nfunction createReglScene() {\n  // canvas init hook\n  const init = (canvas: HTMLCanvasElement, __: WebGLRenderingContext) => {\n    const width = canvas.parentElement ? canvas.parentElement.clientWidth : window.innerHeight\n    const height = canvas.parentElement ? canvas.parentElement.clientHeight : window.innerHeight\n\n    adaptDPI(canvas, width, height)\n\n    const regl = createRegl({ canvas, extensions: ['OES_standard_derivatives'] })\n    const frameCatch = createFrameCatch(regl)\n\n    const fboParams = {\n      depth: false, // this is really important. why?!?\n      cull: {\n        enable: false,\n      },\n    }\n    const heightmapTexture = regl.texture({\n      shape: [SIZE, SIZE],\n      wrap: 'clamp',\n      min: 'nearest',\n      mag: 'nearest',\n    })\n    const heightmap = regl.framebuffer({ color: heightmapTexture, ...fboParams })\n    // const heightmap = regl.framebuffer({\n    //   shape: [SIZE, SIZE],\n    //   ...fboParams,\n    //   stencil: false\n    // })\n\n    const gradient = regl.texture(gradientMap)\n    const projection = mat4.create()\n    const viewrot = mat4.create()\n    const view = mat4.create()\n    const camera = createCamera([0, 10, 30], [0, 0, 0], [0, 1, 0])\n    camera.distance = 1.5\n\n    const model = mat4.create()\n    mat4.translate(model, model, [-0.5, 0, -0.5])\n\n    const drawHeight = createDrawHeight(regl)\n\n    const voxels = createMesh()\n    const drawVoxel = createDrawVoxel(regl, voxels)\n\n    console.log('dude')\n    loop = frameCatch(function(context: createREGL.DefaultContext) {\n      const now = getTime() * TIMESCALE\n      const width = canvas.width\n      const height = canvas.height\n\n      regl.clear({ color: [1, 1, 1, 1] })\n\n      heightmap.use(() => {\n        drawHeight.draw({\n          uTime: now * 0.8,\n          uResolution: RES,\n        })\n      })\n\n      mat4.perspective(projection, Math.PI / 4, width / height, 0.001, 100)\n\n      quat.identity(camera.rotation)\n      quat.rotateY(camera.rotation, camera.rotation, now * 0.0002)\n      quat.rotateX(camera.rotation, camera.rotation, -0.5)\n      camera.view(view)\n\n      quat.identity(camera.rotation)\n      quat.rotateY(camera.rotation, camera.rotation, now * 0.0002)\n\n      const voxelProps: PropsVoxel = {\n        uResolution: RES,\n        uViewRotation: mat4.fromQuat(viewrot, camera.rotation),\n        uProjection: projection,\n        uModel: model,\n        uView: view,\n        tHeightmap: heightmap,\n        tGradient: gradient,\n      }\n      drawVoxel.draw(voxelProps)\n    })\n  }\n\n  const update = () => {}\n\n  return { init, update }\n}\n\nconst app = () => {\n  if (!hasWebGL()) {\n    return ['p', 'Your browser does not support WebGL :- (']\n  }\n\n  const canvas = canvasWebGL(createReglScene())\n\n  return [\n    'div.h-100.flex.flex-column',\n    ['p.ma0.pa2.code', 'stack.gl splash screen'],\n    ['div.h-100', [canvas]],\n  ]\n}\n\nstart(app())\n\nif ((module as any).hot) {\n  ;(module as any).hot.dispose(() => {\n    loop.cancel()\n  })\n}\n"]}
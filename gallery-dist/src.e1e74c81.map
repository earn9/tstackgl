{"version":3,"sources":["../node_modules/@thi.ng/api/mixin.js","../node_modules/@thi.ng/api/mixins/iwatch.js","../node_modules/@thi.ng/errors/illegal-state.js","../node_modules/@thi.ng/checks/is-array.js","../node_modules/@thi.ng/checks/is-string.js","../node_modules/@thi.ng/errors/illegal-arguments.js","../node_modules/@thi.ng/paths/index.js","../node_modules/@thi.ng/equiv/index.js","../node_modules/@thi.ng/atom/view.js","../node_modules/@thi.ng/atom/atom.js","../node_modules/@thi.ng/checks/is-function.js","../node_modules/@thi.ng/errors/illegal-arity.js","../node_modules/@thi.ng/atom/cursor.js","../node_modules/@thi.ng/api/api.js","../node_modules/@thi.ng/api/mixins/inotify.js","../node_modules/@thi.ng/atom/history.js","../node_modules/@thi.ng/atom/index.js","../node_modules/@thi.ng/hdom/api.js","../node_modules/@thi.ng/diff/array.js","../node_modules/@thi.ng/diff/object.js","../node_modules/@thi.ng/hdom/diff.js","../node_modules/@thi.ng/checks/is-not-string-iterable.js","../node_modules/@thi.ng/hiccup/api.js","../node_modules/@thi.ng/hiccup/css.js","../node_modules/@thi.ng/hdom/dom.js","../node_modules/@thi.ng/checks/is-plain-object.js","../node_modules/@thi.ng/hdom/normalize.js","../node_modules/@thi.ng/hdom/default.js","../node_modules/@thi.ng/checks/implements-function.js","../node_modules/@thi.ng/hiccup/deref.js","../node_modules/@thi.ng/hdom/utils.js","../node_modules/@thi.ng/hdom/render-once.js","../node_modules/@thi.ng/hdom/start.js","../node_modules/@thi.ng/hdom/index.js","../node_modules/@thi.ng/checks/is-iterable.js","../node_modules/@thi.ng/transducers/reduced.js","../node_modules/@thi.ng/checks/is-arraylike.js","../node_modules/@thi.ng/transducers/reduce.js","../node_modules/@thi.ng/transducers/rfn/push.js","../node_modules/@thi.ng/transducers/iterator.js","../node_modules/@thi.ng/transducers/func/compr.js","../node_modules/@thi.ng/transducers/xform/map.js","../node_modules/@thi.ng/transducers/transduce.js","../node_modules/@thi.ng/transducers/run.js","../node_modules/@thi.ng/transducers/step.js","../node_modules/@thi.ng/transducers/rfn/add.js","../node_modules/@thi.ng/transducers/rfn/assoc-map.js","../node_modules/@thi.ng/transducers/rfn/assoc-obj.js","../node_modules/@thi.ng/transducers/rfn/conj.js","../node_modules/@thi.ng/transducers/rfn/count.js","../node_modules/@thi.ng/transducers/rfn/div.js","../node_modules/@thi.ng/transducers/rfn/every.js","../node_modules/@thi.ng/transducers/rfn/fill.js","../node_modules/@thi.ng/transducers/func/identity.js","../node_modules/@thi.ng/transducers/rfn/group-by-map.js","../node_modules/@thi.ng/transducers/rfn/frequencies.js","../node_modules/@thi.ng/transducers/rfn/group-by-obj.js","../node_modules/@thi.ng/transducers/rfn/group-binary.js","../node_modules/@thi.ng/transducers/rfn/last.js","../node_modules/@thi.ng/compare/index.js","../node_modules/@thi.ng/transducers/rfn/max-compare.js","../node_modules/@thi.ng/transducers/rfn/max.js","../node_modules/@thi.ng/transducers/rfn/mean.js","../node_modules/@thi.ng/transducers/rfn/min-compare.js","../node_modules/@thi.ng/transducers/rfn/min.js","../node_modules/@thi.ng/transducers/rfn/mul.js","../node_modules/@thi.ng/transducers/rfn/push-copy.js","../node_modules/@thi.ng/transducers/rfn/reductions.js","../node_modules/@thi.ng/transducers/rfn/some.js","../node_modules/@thi.ng/transducers/rfn/str.js","../node_modules/@thi.ng/transducers/rfn/sub.js","../node_modules/@thi.ng/transducers/xform/base64.js","../node_modules/@thi.ng/transducers/xform/benchmark.js","../node_modules/@thi.ng/transducers/xform/bits.js","../node_modules/@thi.ng/transducers/xform/cat.js","../node_modules/@thi.ng/transducers/iter/range.js","../node_modules/@thi.ng/transducers/iter/range2d.js","../node_modules/@thi.ng/transducers/iter/tuples.js","../node_modules/@thi.ng/transducers/xform/convolve.js","../node_modules/@thi.ng/transducers/xform/dedupe.js","../node_modules/@thi.ng/transducers/func/delay.js","../node_modules/@thi.ng/transducers/xform/delayed.js","../node_modules/@thi.ng/transducers/xform/distinct.js","../node_modules/@thi.ng/transducers/xform/throttle.js","../node_modules/@thi.ng/transducers/xform/drop-nth.js","../node_modules/@thi.ng/transducers/xform/drop-while.js","../node_modules/@thi.ng/transducers/xform/drop.js","../node_modules/@thi.ng/transducers/xform/duplicate.js","../node_modules/@thi.ng/transducers/xform/filter.js","../node_modules/@thi.ng/transducers/func/fuzzy-match.js","../node_modules/@thi.ng/transducers/xform/filter-fuzzy.js","../node_modules/@thi.ng/transducers/xform/flatten-with.js","../node_modules/@thi.ng/transducers/xform/flatten.js","../node_modules/@thi.ng/memoize/memoizej.js","../node_modules/@thi.ng/strings/repeat.js","../node_modules/@thi.ng/strings/radix.js","../node_modules/@thi.ng/compose/comp.js","../node_modules/@thi.ng/transducers/func/comp.js","../node_modules/@thi.ng/compose/juxt.js","../node_modules/@thi.ng/transducers/func/juxt.js","../node_modules/@thi.ng/transducers/xform/map-indexed.js","../node_modules/@thi.ng/transducers/xform/pad-last.js","../node_modules/@thi.ng/transducers/xform/partition.js","../node_modules/@thi.ng/transducers/xform/hex-dump.js","../node_modules/@thi.ng/transducers/xform/indexed.js","../node_modules/@thi.ng/transducers/xform/interleave.js","../node_modules/@thi.ng/transducers/xform/interpose.js","../node_modules/@thi.ng/transducers/xform/keep.js","../node_modules/@thi.ng/transducers/xform/labeled.js","../node_modules/@thi.ng/transducers/func/deep-transform.js","../node_modules/@thi.ng/transducers/xform/map-deep.js","../node_modules/@thi.ng/transducers/xform/map-keys.js","../node_modules/@thi.ng/transducers/xform/map-nth.js","../node_modules/@thi.ng/transducers/xform/map-vals.js","../node_modules/@thi.ng/transducers/xform/mapcat.js","../node_modules/@thi.ng/transducers/xform/take.js","../node_modules/@thi.ng/transducers/xform/match-first.js","../node_modules/@thi.ng/transducers/xform/take-last.js","../node_modules/@thi.ng/transducers/xform/match-last.js","../node_modules/@thi.ng/transducers/xform/moving-average.js","../node_modules/@thi.ng/transducers/xform/moving-median.js","../node_modules/@thi.ng/transducers/xform/multiplex.js","../node_modules/@thi.ng/transducers/func/renamer.js","../node_modules/@thi.ng/transducers/xform/rename.js","../node_modules/@thi.ng/transducers/xform/multiplex-obj.js","../node_modules/@thi.ng/transducers/xform/noop.js","../node_modules/@thi.ng/transducers/xform/page.js","../node_modules/@thi.ng/transducers/xform/partition-bits.js","../node_modules/@thi.ng/transducers/xform/partition-by.js","../node_modules/@thi.ng/transducers/xform/partition-of.js","../node_modules/@thi.ng/transducers/xform/partition-sort.js","../node_modules/@thi.ng/transducers/xform/partition-sync.js","../node_modules/@thi.ng/transducers/xform/pluck.js","../node_modules/@thi.ng/transducers/xform/sample.js","../node_modules/@thi.ng/transducers/xform/scan.js","../node_modules/@thi.ng/transducers/func/key-selector.js","../node_modules/@thi.ng/transducers/xform/select-keys.js","../node_modules/@thi.ng/transducers/xform/side-effect.js","../node_modules/@thi.ng/transducers/xform/sliding-window.js","../node_modules/@thi.ng/transducers/func/shuffle.js","../node_modules/@thi.ng/transducers/xform/stream-shuffle.js","../node_modules/@thi.ng/transducers/func/binary-search.js","../node_modules/@thi.ng/transducers/xform/stream-sort.js","../node_modules/@thi.ng/transducers/xform/struct.js","../node_modules/@thi.ng/transducers/func/swizzler.js","../node_modules/@thi.ng/transducers/xform/swizzle.js","../node_modules/@thi.ng/transducers/xform/take-nth.js","../node_modules/@thi.ng/transducers/xform/take-while.js","../node_modules/@thi.ng/transducers/xform/throttle-time.js","../node_modules/@thi.ng/transducers/xform/trace.js","../node_modules/@thi.ng/transducers/xform/utf8.js","../node_modules/@thi.ng/transducers/xform/word-wrap.js","../node_modules/@thi.ng/transducers/func/constantly.js","../node_modules/@thi.ng/transducers/func/ensure-iterable.js","../node_modules/@thi.ng/transducers/func/ensure-array.js","../node_modules/@thi.ng/checks/is-even.js","../node_modules/@thi.ng/transducers/func/even.js","../node_modules/@thi.ng/transducers/func/hex.js","../node_modules/@thi.ng/transducers/func/juxtr.js","../node_modules/@thi.ng/transducers/func/lookup.js","../node_modules/@thi.ng/checks/is-odd.js","../node_modules/@thi.ng/transducers/func/odd.js","../node_modules/@thi.ng/transducers/func/peek.js","../node_modules/@thi.ng/transducers/iter/repeat.js","../node_modules/@thi.ng/transducers/func/weighted-random.js","../node_modules/@thi.ng/transducers/iter/repeatedly.js","../node_modules/@thi.ng/transducers/iter/choices.js","../node_modules/@thi.ng/transducers/func/random-id.js","../node_modules/@thi.ng/transducers/iter/as-iterable.js","../node_modules/@thi.ng/transducers/iter/concat.js","../node_modules/@thi.ng/transducers/iter/cycle.js","../node_modules/@thi.ng/transducers/iter/iterate.js","../node_modules/@thi.ng/transducers/iter/keys.js","../node_modules/@thi.ng/transducers/iter/norm-range.js","../node_modules/@thi.ng/transducers/iter/pairs.js","../node_modules/@thi.ng/transducers/iter/permutations.js","../node_modules/@thi.ng/transducers/iter/range3d.js","../node_modules/@thi.ng/transducers/iter/reverse.js","../node_modules/@thi.ng/transducers/iter/vals.js","../node_modules/@thi.ng/transducers/iter/wrap.js","../node_modules/@thi.ng/transducers/index.js","../node_modules/@thi.ng/interceptors/api.js","../node_modules/@thi.ng/checks/is-promise.js","../node_modules/@thi.ng/interceptors/event-bus.js","../node_modules/@thi.ng/interceptors/interceptors.js","../node_modules/@thi.ng/interceptors/index.js","0","ui/title.ts","ui/paragraph.ts","ui/link.ts","index.ts"],"names":["module","exports","title"],"mappings":"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","file":"src.e1e74c81.map","sourceRoot":"../gallery-src/src","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Class behavior mixin based on:\n * http://raganwald.com/2015/06/26/decorators-in-es7.html\n *\n * Additionally only injects/overwrites properties in target, which are\n * NOT marked with `@nomixin` (i.e. haven't set their `configurable`\n * property descriptor flag to `false`)\n *\n * @param behaviour to mixin\n * @param sharedBehaviour\n * @returns decorator function\n */\nfunction mixin(behaviour, sharedBehaviour = {}) {\n    const instanceKeys = Reflect.ownKeys(behaviour);\n    const sharedKeys = Reflect.ownKeys(sharedBehaviour);\n    const typeTag = Symbol(\"isa\");\n    function _mixin(clazz) {\n        for (let key of instanceKeys) {\n            const existing = Object.getOwnPropertyDescriptor(clazz.prototype, key);\n            if (!existing || existing.configurable) {\n                Object.defineProperty(clazz.prototype, key, {\n                    value: behaviour[key],\n                    writable: true,\n                });\n            }\n            else {\n                console.log(`not patching: ${clazz.name}.${key.toString()}`);\n            }\n        }\n        Object.defineProperty(clazz.prototype, typeTag, { value: true });\n        return clazz;\n    }\n    for (let key of sharedKeys) {\n        Object.defineProperty(_mixin, key, {\n            value: sharedBehaviour[key],\n            enumerable: sharedBehaviour.propertyIsEnumerable(key),\n        });\n    }\n    Object.defineProperty(_mixin, Symbol.hasInstance, { value: (x) => !!x[typeTag] });\n    return _mixin;\n}\nexports.mixin = mixin;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst mixin_1 = require(\"../mixin\");\nexports.IWatch = mixin_1.mixin({\n    addWatch(id, fn) {\n        this._watches = this._watches || {};\n        if (this._watches[id]) {\n            return false;\n        }\n        this._watches[id] = fn;\n        return true;\n    },\n    removeWatch(id) {\n        if (!this._watches)\n            return;\n        if (this._watches[id]) {\n            delete this._watches[id];\n            return true;\n        }\n        return false;\n    },\n    notifyWatches(oldState, newState) {\n        if (!this._watches)\n            return;\n        const w = this._watches;\n        for (let id in w) {\n            w[id](id, oldState, newState);\n        }\n    }\n});\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass IllegalStateError extends Error {\n    constructor(msg) {\n        super(\"illegal state\" + (msg !== undefined ? \": \" + msg : \"\"));\n    }\n}\nexports.IllegalStateError = IllegalStateError;\nfunction illegalState(msg) {\n    throw new IllegalStateError(msg);\n}\nexports.illegalState = illegalState;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isArray = Array.isArray;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isString(x) {\n    return typeof x === \"string\";\n}\nexports.isString = isString;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass IllegalArgumentError extends Error {\n    constructor(msg) {\n        super(\"illegal argument(s)\" + (msg !== undefined ? \": \" + msg : \"\"));\n    }\n}\nexports.IllegalArgumentError = IllegalArgumentError;\nfunction illegalArgs(msg) {\n    throw new IllegalArgumentError(msg);\n}\nexports.illegalArgs = illegalArgs;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst is_array_1 = require(\"@thi.ng/checks/is-array\");\nconst is_string_1 = require(\"@thi.ng/checks/is-string\");\nconst illegal_arguments_1 = require(\"@thi.ng/errors/illegal-arguments\");\nconst _copy = (s) => Array.isArray(s) ? s.slice() : Object.assign({}, s);\nconst compS = (k, f) => (s, v) => { s = _copy(s); s[k] = f ? f(s[k], v) : v; return s; };\nconst compG = (k, f) => (s) => s ? f(s[k]) : undefined;\n/**\n * Converts the given key path to canonical form (array).\n *\n * ```\n * toPath(\"a.b.c\");\n * // [\"a\", \"b\", \"c\"]\n *\n * toPath(0)\n * // [0]\n *\n * toPath([\"a\", \"b\", \"c\"])\n * // [\"a\", \"b\", \"c\"]\n * ```\n *\n * @param path\n */\nfunction toPath(path) {\n    return is_array_1.isArray(path) ? path : is_string_1.isString(path) ? path.length > 0 ? path.split(\".\") : [] : path != null ? [path] : [];\n}\nexports.toPath = toPath;\n/**\n * Takes an arbitrary object and lookup path. Descends into object along\n * path and returns true if the full path exists (even if final leaf\n * value is `null` or `undefined`). Checks are performed using\n * `hasOwnProperty()`.\n *\n * @param obj\n * @param path\n */\nexports.exists = (obj, path) => {\n    if (obj == null) {\n        return false;\n    }\n    path = toPath(path);\n    for (let n = path.length - 1, i = 0; i <= n; i++) {\n        const k = path[i];\n        if (!obj.hasOwnProperty(k)) {\n            return false;\n        }\n        obj = obj[k];\n        if (obj == null && i < n) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * Composes a getter function for given nested lookup path. Optimized\n * fast execution paths are provided for path lengths less than 5.\n * Supports any `[]`-indexable data structure (arrays, objects,\n * strings).\n *\n * If `path` is given as string, it will be split using `.`. Returns\n * function which accepts single object and when called, returns value\n * at given path.\n *\n * If any intermediate key is not present in the given obj, descent\n * stops and the function returns `undefined`.\n *\n * If `path` is an empty string or array, the returned getter will\n * simply return the given state arg (identity function).\n *\n * Also see: `getIn()`\n *\n * ```\n * g = getter(\"a.b.c\");\n * // or\n * g = getter([\"a\",\"b\",\"c\"]);\n *\n * g({a: {b: {c: 23}}}) // 23\n * g({x: 23}) // undefined\n * g() // undefined\n * ```\n *\n * @param path\n */\nfunction getter(path) {\n    const ks = toPath(path);\n    let [a, b, c, d] = ks;\n    switch (ks.length) {\n        case 0:\n            return (s) => s;\n        case 1:\n            return (s) => s ? s[a] : undefined;\n        case 2:\n            return (s) => s ? (s = s[a]) ? s[b] : undefined : undefined;\n        case 3:\n            return (s) => s ? (s = s[a]) ? (s = s[b]) ? s[c] : undefined : undefined : undefined;\n        case 4:\n            return (s) => s ? (s = s[a]) ? (s = s[b]) ? (s = s[c]) ? s[d] : undefined : undefined : undefined : undefined;\n        default:\n            const kl = ks[ks.length - 1];\n            let f = (s) => s ? s[kl] : undefined;\n            for (let i = ks.length - 2; i >= 0; i--) {\n                f = compG(ks[i], f);\n            }\n            return f;\n    }\n}\nexports.getter = getter;\n/**\n * Composes a setter function for given nested update path. Optimized\n * fast execution paths are provided for path lengths less up to 4.\n * Supports both arrays and objects and creates intermediate shallow\n * copies at each level of the path. Thus provides structural sharing\n * with the original data for any branches not being updated by the\n * setter.\n *\n * If `path` is given as string, it will be split using `.`. Returns\n * function which accepts single object and when called, **immutably**\n * updates value at given path, i.e. produces a partial deep copy of obj\n * up until given path.\n *\n * If any intermediate key is not present in the given obj, creates a\n * plain empty object for that key and descends further.\n *\n * If `path` is an empty string or array, the returned setter will\n * simply return the new value.\n *\n * Also see: `setIn()`, `updateIn()`, `deleteIn()`\n *\n * ```\n * s = setter(\"a.b.c\");\n * // or\n * s = setter([\"a\",\"b\",\"c\"]);\n *\n * s({a: {b: {c: 23}}}, 24)\n * // {a: {b: {c: 24}}}\n *\n * s({x: 23}, 24)\n * // { x: 23, a: { b: { c: 24 } } }\n *\n * s(null, 24)\n * // { a: { b: { c: 24 } } }\n * ```\n *\n * Only keys in the path will be modified, all other keys present in the\n * given object retain their original values to provide efficient\n * structural sharing / re-use.\n *\n * ```\n * s = setter(\"a.b.c\");\n *\n * a = {x: {y: {z: 1}}};\n * b = s(a, 2);\n * // { x: { y: { z: 1 } }, a: { b: { c: 2 } } }\n *\n * a.x === b.x // true\n * a.x.y === b.x.y // true\n * ```\n *\n * @param path\n */\nfunction setter(path) {\n    const ks = toPath(path);\n    let [a, b, c, d] = ks;\n    switch (ks.length) {\n        case 0:\n            return (_, v) => v;\n        case 1:\n            return (s, v) => (s = _copy(s), s[a] = v, s);\n        case 2:\n            return (s, v) => { let x; s = _copy(s); s[a] = x = _copy(s[a]); x[b] = v; return s; };\n        case 3:\n            return (s, v) => { let x, y; s = _copy(s); s[a] = x = _copy(s[a]); x[b] = y = _copy(x[b]); y[c] = v; return s; };\n        case 4:\n            return (s, v) => { let x, y, z; s = _copy(s); s[a] = x = _copy(s[a]); x[b] = y = _copy(x[b]); y[c] = z = _copy(y[c]); z[d] = v; return s; };\n        default:\n            let f;\n            for (let i = ks.length - 1; i >= 0; i--) {\n                f = compS(ks[i], f);\n            }\n            return f;\n    }\n}\nexports.setter = setter;\n/**\n * Immediate use getter, i.e. same as: `getter(path)(state)`.\n *\n * ```\n * getIn({a: {b: {c: 23}}}, \"a.b.c\");\n * // 23\n * ```\n *\n * @param state\n * @param path\n */\nfunction getIn(state, path) {\n    return getter(path)(state);\n}\nexports.getIn = getIn;\n/**\n * Immediate use setter, i.e. same as: `setter(path)(state, val)`.\n *\n * ```\n * setIn({}, \"a.b.c\", 23);\n * // {a: {b: {c: 23}}}\n * ```\n *\n * @param state\n * @param path\n */\nfunction setIn(state, path, val) {\n    return setter(path)(state, val);\n}\nexports.setIn = setIn;\n/**\n * Like `setIn()`, but takes any number of path-value pairs and applies\n * them in sequence by calling `setIn()` for each. Any key paths missing\n * in the data structure will be created. Does *not* mutate original\n * (instead use `mutInMany()` for this purpose).\n *\n * ```\n * setInMany({}, \"a.b\", 10, \"x.y.z\", 20)\n * // { a: { b: 10 }, x: { y: { z: 20 } } }\n * ```\n *\n * @param state\n * @param pairs\n */\nfunction setInMany(state, ...pairs) {\n    const n = pairs.length;\n    if ((n & 1)) {\n        illegal_arguments_1.illegalArgs(`require an even number of args (got ${pairs.length})`);\n    }\n    for (let i = 0; i < n; i += 2) {\n        state = setIn(state, pairs[i], pairs[i + 1]);\n    }\n    return state;\n}\nexports.setInMany = setInMany;\n/**\n * Similar to `setter()`, returns a function to update values at given\n * `path` using provided update `fn`. The returned function accepts a\n * single object / array and applies `fn` to current path value (incl.\n * any additional/optional arguments passed) and uses result as new\n * value. Does not modify original state (unless given function does so\n * itself).\n *\n * ```\n * add = updater(\"a.b\", (x, n) => x + n);\n *\n * add({a: {b: 10}}, 13);\n * // { a: { b: 23 } }\n * ```\n *\n * @param path\n * @param fn\n */\nfunction updater(path, fn) {\n    const g = getter(path);\n    const s = setter(path);\n    return (state, ...args) => s(state, fn.apply(null, (args.unshift(g(state)), args)));\n}\nexports.updater = updater;\n;\n/**\n * Similar to `setIn()`, but applies given function to current path\n * value (incl. any additional/optional arguments passed to `updateIn`)\n * and uses result as new value. Does not modify original state (unless\n * given function does so itself).\n *\n * ```\n * add = (x, y) => x + y;\n * updateIn({a: {b: {c: 23}}}, \"a.b.c\", add, 10);\n * // {a: {b: {c: 33}}}\n * ```\n *\n * @param state\n * @param path\n */\nfunction updateIn(state, path, fn, ...args) {\n    return setter(path)(state, fn.apply(null, (args.unshift(getter(path)(state)), args)));\n}\nexports.updateIn = updateIn;\n/**\n * Uses `updateIn()` and returns updated state with key for given path\n * removed. Does not modify original state.\n *\n * Returns `undefined` if `path` is an empty string or array.\n *\n * ```\n * deleteIn({a:{b:{c: 23}}}, \"a.b.c\");\n * // {a: {b: {}}}\n * ```\n *\n * @param state\n * @param path\n */\nfunction deleteIn(state, path) {\n    const ks = [...toPath(path)];\n    if (ks.length > 0) {\n        const k = ks.pop();\n        return updateIn(state, ks, (x) => { x = Object.assign({}, x); delete x[k]; return x; });\n    }\n}\nexports.deleteIn = deleteIn;\n/**\n * Higher-order function, similar to `setter()`. Returns function which\n * when called mutates given object/array at given path location and\n * bails if any intermediate path values are non-indexable (only the\n * very last path element can be missing in the actual object\n * structure). If successful, returns original (mutated) object, else\n * `undefined`. This function provides optimized versions for path\n * lengths <= 4.\n *\n * @param path\n */\nfunction mutator(path) {\n    const ks = toPath(path);\n    let [a, b, c, d] = ks;\n    switch (ks.length) {\n        case 0:\n            return (_, x) => x;\n        case 1:\n            return (s, x) => s ? (s[a] = x, s) : undefined;\n        case 2:\n            return (s, x) => { let t; return s ? (t = s[a]) ? (t[b] = x, s) : undefined : undefined; };\n        case 3:\n            return (s, x) => { let t; return s ? (t = s[a]) ? (t = t[b]) ? (t[c] = x, s) : undefined : undefined : undefined; };\n        case 4:\n            return (s, x) => { let t; return s ? (t = s[a]) ? (t = t[b]) ? (t = t[c]) ? (t[d] = x, s) : undefined : undefined : undefined : undefined; };\n        default:\n            return (s, x) => {\n                let t = s;\n                const n = ks.length - 1;\n                for (let k = 0; k < n; k++) {\n                    if (!(t = t[ks[k]]))\n                        return;\n                }\n                t[ks[n]] = x;\n                return s;\n            };\n    }\n}\nexports.mutator = mutator;\n/**\n * Immediate use mutator, i.e. same as: `mutator(path)(state, val)`.\n *\n * ```\n * mutIn({ a: { b: [10, 20] } }, \"a.b.1\", 23);\n * // { a: { b: [ 10, 23 ] } }\n *\n * // fails (see `mutator` docs)\n * mutIn({}, \"a.b.c\", 23);\n * // undefined\n * ```\n *\n * @param state\n * @param path\n * @param val\n */\nfunction mutIn(state, path, val) {\n    return mutator(path)(state, val);\n}\nexports.mutIn = mutIn;\n/**\n * Like `mutIn()`, but takes any number of path-value pairs and applies\n * them in sequence. All key paths must already be present in the given\n * data structure until their penultimate key.\n *\n * ```\n * mutInMany({a: {b: 1}, x: {y: {z: 2}}}, \"a.b\", 10, \"x.y.z\", 20)\n * // { a: { b: 10 }, x: { y: { z: 20 } } }\n * ```\n *\n * @param state\n * @param pairs\n */\nfunction mutInMany(state, ...pairs) {\n    const n = pairs.length;\n    if ((n & 1)) {\n        illegal_arguments_1.illegalArgs(`require an even number of args (got ${pairs.length})`);\n    }\n    for (let i = 0; i < n && state; i += 2) {\n        state = mutIn(state, pairs[i], pairs[i + 1]);\n    }\n    return state;\n}\nexports.mutInMany = mutInMany;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst OBJP = Object.getPrototypeOf({});\nconst FN = \"function\";\nconst STR = \"string\";\nexports.equiv = (a, b) => {\n    let proto;\n    if (a === b) {\n        return true;\n    }\n    if (a != null) {\n        if (typeof a.equiv === FN) {\n            return a.equiv(b);\n        }\n    }\n    else {\n        return a == b;\n    }\n    if (b != null) {\n        if (typeof b.equiv === FN) {\n            return b.equiv(a);\n        }\n    }\n    else {\n        return a == b;\n    }\n    if (typeof a === STR || typeof b === STR) {\n        return false;\n    }\n    if ((proto = Object.getPrototypeOf(a), proto == null || proto === OBJP) &&\n        (proto = Object.getPrototypeOf(b), proto == null || proto === OBJP)) {\n        return exports.equivObject(a, b);\n    }\n    if (typeof a !== FN && a.length !== undefined &&\n        typeof b !== FN && b.length !== undefined) {\n        return exports.equivArrayLike(a, b);\n    }\n    if (a instanceof Set && b instanceof Set) {\n        return exports.equivSet(a, b);\n    }\n    if (a instanceof Map && b instanceof Map) {\n        return exports.equivMap(a, b);\n    }\n    if (a instanceof Date && b instanceof Date) {\n        return a.getTime() === b.getTime();\n    }\n    if (a instanceof RegExp && b instanceof RegExp) {\n        return a.toString() === b.toString();\n    }\n    // NaN\n    return (a !== a && b !== b);\n};\nexports.equivArrayLike = (a, b, _equiv = exports.equiv) => {\n    let l = a.length;\n    if (l === b.length) {\n        while (--l >= 0 && _equiv(a[l], b[l]))\n            ;\n    }\n    return l < 0;\n};\nexports.equivSet = (a, b, _equiv = exports.equiv) => (a.size === b.size) &&\n    _equiv([...a.keys()].sort(), [...b.keys()].sort());\nexports.equivMap = (a, b, _equiv = exports.equiv) => (a.size === b.size) &&\n    _equiv([...a].sort(), [...b].sort());\nexports.equivObject = (a, b, _equiv = exports.equiv) => {\n    if (Object.keys(a).length !== Object.keys(b).length) {\n        return false;\n    }\n    for (let k in a) {\n        if (!b.hasOwnProperty(k) || !_equiv(a[k], b[k])) {\n            return false;\n        }\n    }\n    return true;\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst equiv_1 = require(\"@thi.ng/equiv\");\nconst paths_1 = require(\"@thi.ng/paths\");\n/**\n * This class implements readonly access to a deeply nested value with\n * in an Atom/Cursor. An optional transformer function can be supplied\n * at creation time to produce a derived/materialized view of the actual\n * value held in the atom. Views can be created directly or via the\n * `.addView()` method of the parent state. Views can be `deref()`'d\n * like atoms and polled for value changes using `changed()`. The\n * transformer is only applied once per value change and its result\n * cached until the next change.\n *\n * If the optional `lazy` is true (default), the transformer will only\n * be executed with the first `deref()` after each value change. If\n * `lazy` is false, the transformer function will be executed\n * immediately after a value change occurred and so can be used like a\n * watch which only triggers if there was an actual value change (in\n * contrast to normal watches, which execute with each update,\n * regardless of value change).\n *\n * Related, the actual value change predicate can be customized. If not\n * given, the default `@thi.ng/equiv` will be used.\n *\n * ```\n * a = new Atom({a: {b: 1}});\n * v = a.addView(\"a.b\", (x) => x * 10);\n *\n * v.deref()\n * // 10\n *\n * // update atom state\n * a.swap((state) => setIn(state, \"a.b\", 2));\n * // {a: {b: 2}}\n *\n * v.changed()\n * // true\n * v.deref()\n * // 20\n *\n * v.release()\n * // remove view from parent state\n * ```\n */\nclass View {\n    constructor(parent, path, tx, lazy = true, equiv = equiv_1.equiv) {\n        this.parent = parent;\n        this.id = `view-${View.NEXT_ID++}`;\n        this.tx = tx || ((x) => x);\n        this.path = paths_1.toPath(path);\n        this.isDirty = true;\n        this.isLazy = lazy;\n        const lookup = paths_1.getter(this.path);\n        const state = this.parent.deref();\n        this.unprocessed = state ? lookup(state) : undefined;\n        if (!lazy) {\n            this.state = this.tx(this.unprocessed);\n            this.unprocessed = undefined;\n        }\n        parent.addWatch(this.id, (_, prev, curr) => {\n            const pval = prev ? lookup(prev) : prev;\n            const val = curr ? lookup(curr) : curr;\n            if (!equiv(val, pval)) {\n                if (lazy) {\n                    this.unprocessed = val;\n                }\n                else {\n                    this.state = this.tx(val);\n                }\n                this.isDirty = true;\n            }\n        });\n    }\n    get value() {\n        return this.deref();\n    }\n    /**\n     * Returns view's value. If the view has a transformer, the\n     * transformed value is returned. The transformer is only run once\n     * per value change. See class comments about difference between\n     * lazy/eager behaviors.\n     */\n    deref() {\n        if (this.isDirty) {\n            if (this.isLazy) {\n                this.state = this.tx(this.unprocessed);\n                this.unprocessed = undefined;\n            }\n            this.isDirty = false;\n        }\n        return this.state;\n    }\n    /**\n     * Returns true, if the view's value has changed since last\n     * `deref()`.\n     */\n    changed() {\n        return this.isDirty;\n    }\n    /**\n     * Like `deref()`, but doesn't update view's cached state and dirty\n     * flag if value has changed. If there's an unprocessed value\n     * change, returns result of this sub's transformer or else the\n     * cached value.\n     *\n     * **Important:** Use this function only if the view has none or or\n     * a stateless transformer. Else might cause undefined/inconsistent\n     * behavior when calling `view()` or `deref()` subsequently.\n     */\n    view() {\n        return this.isDirty && this.isLazy ? this.tx(this.unprocessed) : this.state;\n    }\n    /**\n     * Disconnects this view from parent state, marks itself\n     * dirty/changed and sets its unprocessed raw value to `undefined`.\n     */\n    release() {\n        this.unprocessed = undefined;\n        if (!this.isLazy) {\n            this.state = this.tx(undefined);\n        }\n        this.isDirty = true;\n        return this.parent.removeWatch(this.id);\n    }\n}\nView.NEXT_ID = 0;\nexports.View = View;\n","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst iwatch_1 = require(\"@thi.ng/api/mixins/iwatch\");\nconst illegal_state_1 = require(\"@thi.ng/errors/illegal-state\");\nconst paths_1 = require(\"@thi.ng/paths\");\nconst view_1 = require(\"./view\");\n/**\n * Mutable wrapper for an (usually) immutable value. Support for\n * watches.\n */\nlet Atom = class Atom {\n    constructor(val, valid) {\n        if (valid && !valid(val)) {\n            illegal_state_1.illegalState(\"initial state value did not validate\");\n        }\n        this._value = val;\n        this.valid = valid;\n    }\n    get value() {\n        return this._value;\n    }\n    set value(val) {\n        this.reset(val);\n    }\n    deref() {\n        return this._value;\n    }\n    equiv(o) {\n        return this === o;\n    }\n    reset(val) {\n        const old = this._value;\n        if (this.valid && !this.valid(val)) {\n            return old;\n        }\n        this._value = val;\n        this.notifyWatches(old, val);\n        return val;\n    }\n    resetIn(path, val) {\n        return this.reset(paths_1.setIn(this._value, path, val));\n    }\n    swap(fn, ...args) {\n        return this.reset(fn.apply(null, [this._value, ...args]));\n    }\n    swapIn(path, fn, ...args) {\n        return this.reset(paths_1.updateIn(this._value, path, fn, ...args));\n    }\n    // mixin stub\n    /* istanbul ignore next */\n    addWatch(id, fn) {\n        return false;\n    }\n    // mixin stub\n    /* istanbul ignore next */\n    removeWatch(id) {\n        return false;\n    }\n    // mixin stub\n    /* istanbul ignore next */\n    notifyWatches(oldState, newState) { }\n    addView(path, tx, lazy = true) {\n        return new view_1.View(this, path, tx, lazy);\n    }\n    release() {\n        delete this._watches;\n        delete this._value;\n        return true;\n    }\n};\nAtom = __decorate([\n    iwatch_1.IWatch\n], Atom);\nexports.Atom = Atom;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isFunction(x) {\n    return typeof x === \"function\";\n}\nexports.isFunction = isFunction;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass IllegalArityError extends Error {\n    constructor(n) {\n        super(`illegal arity: ${n}`);\n    }\n}\nexports.IllegalArityError = IllegalArityError;\nfunction illegalArity(n) {\n    throw new IllegalArityError(n);\n}\nexports.illegalArity = illegalArity;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst is_array_1 = require(\"@thi.ng/checks/is-array\");\nconst is_function_1 = require(\"@thi.ng/checks/is-function\");\nconst illegal_arguments_1 = require(\"@thi.ng/errors/illegal-arguments\");\nconst illegal_arity_1 = require(\"@thi.ng/errors/illegal-arity\");\nconst paths_1 = require(\"@thi.ng/paths\");\nconst atom_1 = require(\"./atom\");\nconst view_1 = require(\"./view\");\n/**\n * A cursor provides read/write access to a path location within a\n * nested parent state (Atom or another Cursor). Cursors behave like\n * Atoms for all practical purposes, i.e. support `deref()`, `reset()`,\n * `swap()`, `addWatch()` etc. However, when updating a cursor's value,\n * the parent state will be updated at the cursor's path as well (incl.\n * triggering any watches and/or validators) attached to the parent.\n * Likewise, when the parent state is modified externally, the cursor's\n * value will automatically update as well. The update order of cursor's\n * sharing a common parent is undefined, but can be overridden by\n * extending this class with a custom `notifyWatches()` implementation.\n *\n * If creating multiple cursors w/ a shared parent and each cursor\n * configured with a custom ID (provided via config object to ctor),\n * it's the user's responsibility to ensure the given IDs are unique.\n * Cursors are implemented by attaching a watch to the parent and the ID\n * is used to identify each watch.\n *\n * When using the optional validator predicate (also specified via\n * config object to ctor), the cursor's validator MUST NOT conflict with\n * the one assigned to the parent or else both will go out-of-sync.\n * Therefore, when requiring validation and updating values via cursors\n * it's recommended to only specify validators for leaf-level cursors in\n * the hierarchy.\n */\nclass Cursor {\n    constructor(...args) {\n        let parent, id, lookup, update, validate, opts;\n        switch (args.length) {\n            case 1:\n                opts = args[0];\n                id = opts.id;\n                parent = opts.parent;\n                validate = opts.validate;\n                if (opts.path) {\n                    if (is_array_1.isArray(opts.path) && is_function_1.isFunction(opts.path[0])) {\n                        [lookup, update] = opts.path;\n                    }\n                    else {\n                        lookup = paths_1.getter(opts.path);\n                        update = paths_1.setter(opts.path);\n                    }\n                }\n                else {\n                    illegal_arguments_1.illegalArgs(\"missing path config\");\n                }\n                break;\n            case 2:\n                parent = args[0];\n                lookup = paths_1.getter(args[1]);\n                update = paths_1.setter(args[1]);\n                break;\n            case 3:\n                [parent, lookup, update] = args;\n                break;\n            default:\n                illegal_arity_1.illegalArity(args.length);\n        }\n        this.parent = parent;\n        this.id = id || `cursor-${Cursor.NEXT_ID++}`;\n        this.selfUpdate = false;\n        if (!lookup || !update) {\n            illegal_arguments_1.illegalArgs();\n        }\n        this.local = new atom_1.Atom(lookup(parent.deref()), validate);\n        this.local.addWatch(this.id, (_, prev, curr) => {\n            if (prev !== curr) {\n                this.selfUpdate = true;\n                parent.swap((state) => update(state, curr));\n                this.selfUpdate = false;\n            }\n        });\n        parent.addWatch(this.id, (_, prev, curr) => {\n            if (!this.selfUpdate) {\n                const cval = lookup(curr);\n                if (cval !== lookup(prev)) {\n                    this.local.reset(cval);\n                }\n            }\n        });\n    }\n    get value() {\n        return this.deref();\n    }\n    set value(val) {\n        this.reset(val);\n    }\n    deref() {\n        return this.local.deref();\n    }\n    release() {\n        this.local.release();\n        this.parent.removeWatch(this.id);\n        delete this.local;\n        delete this.parent;\n        return true;\n    }\n    reset(val) {\n        return this.local.reset(val);\n    }\n    resetIn(path, val) {\n        return this.local.resetIn(path, val);\n    }\n    swap(fn, ...args) {\n        return this.local.swap(fn, ...args);\n    }\n    swapIn(path, fn, ...args) {\n        return this.local.swapIn(path, fn, ...args);\n    }\n    addWatch(id, fn) {\n        return this.local.addWatch(id, fn);\n    }\n    removeWatch(id) {\n        return this.local.removeWatch(id);\n    }\n    /* istanbul ignore next */\n    notifyWatches(oldState, newState) {\n        return this.local.notifyWatches(oldState, newState);\n    }\n    addView(path, tx, lazy = true) {\n        return new view_1.View(this, path, tx, lazy);\n    }\n}\nCursor.NEXT_ID = 0;\nexports.Cursor = Cursor;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DEFAULT_EPS = 1e-6;\nexports.EVENT_ALL = \"*\";\nexports.EVENT_ENABLE = \"enable\";\nexports.EVENT_DISABLE = \"disable\";\nexports.SEMAPHORE = Symbol();\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst api = require(\"../api\");\nconst mixin_1 = require(\"../mixin\");\nfunction inotify_dispatch(listeners, e) {\n    if (!listeners)\n        return;\n    const n = listeners.length;\n    let i = 0, l;\n    for (i = 0; i < n; i++) {\n        l = listeners[i];\n        l[0].call(l[1], e);\n        if (e.canceled) {\n            return;\n        }\n    }\n}\nexports.inotify_dispatch = inotify_dispatch;\n/**\n * Mixin class decorator, injects INotify default implementation, incl.\n * a lazily instantiated `_listeners` property object, storing\n * registered listeners.\n */\nexports.INotify = mixin_1.mixin({\n    addListener(id, fn, scope) {\n        let l = (this._listeners = this._listeners || {})[id];\n        if (!l) {\n            l = this._listeners[id] = [];\n        }\n        if (this.__listener(l, fn, scope) === -1) {\n            l.push([fn, scope]);\n            return true;\n        }\n        return false;\n    },\n    removeListener(id, fn, scope) {\n        if (!this._listeners)\n            return false;\n        const l = this._listeners[id];\n        if (l) {\n            const idx = this.__listener(l, fn, scope);\n            if (idx !== -1) {\n                l.splice(idx, 1);\n                return true;\n            }\n        }\n        return false;\n    },\n    notify(e) {\n        if (!this._listeners)\n            return;\n        e.target === undefined && (e.target = this);\n        inotify_dispatch(this._listeners[e.id], e);\n        inotify_dispatch(this._listeners[api.EVENT_ALL], e);\n    },\n    __listener(listeners, f, scope) {\n        let i = listeners.length;\n        while (--i >= 0) {\n            const l = listeners[i];\n            if (l[0] === f && l[1] === scope) {\n                break;\n            }\n        }\n        return i;\n    }\n});\n","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar History_1;\nconst mixin = require(\"@thi.ng/api/mixins/inotify\");\nconst equiv_1 = require(\"@thi.ng/equiv\");\nconst paths_1 = require(\"@thi.ng/paths\");\nconst view_1 = require(\"./view\");\n/**\n * Undo/redo history stack wrapper for atoms and cursors. Implements\n * `IAtom` interface and so can be used directly in place and delegates\n * to wrapped atom/cursor. Value changes are only recorded in history if\n * `changed` predicate returns truthy value, or else by calling\n * `record()` directly. This class too implements the @thi.ng/api\n * `INotify` interface to support event listeners for `undo()`, `redo()`\n * and `record()`.\n */\nlet History = History_1 = class History {\n    /**\n     * @param state parent state\n     * @param maxLen max size of undo stack\n     * @param changed predicate to determine changed values (default `!equiv(a,b)`)\n     */\n    constructor(state, maxLen = 100, changed) {\n        this.state = state;\n        this.maxLen = maxLen;\n        this.changed = changed || ((a, b) => !equiv_1.equiv(a, b));\n        this.clear();\n    }\n    get value() {\n        return this.deref();\n    }\n    set value(val) {\n        this.reset(val);\n    }\n    canUndo() {\n        return this.history.length > 0;\n    }\n    canRedo() {\n        return this.future.length > 0;\n    }\n    /**\n     * Clears history & future stacks\n     */\n    clear() {\n        this.history = [];\n        this.future = [];\n    }\n    /**\n     * Attempts to re-apply most recent historical value to atom and\n     * returns it if successful (i.e. there's a history). Before the\n     * switch, first records the atom's current value into the future\n     * stack (to enable `redo()` feature). Returns `undefined` if\n     * there's no history.\n     *\n     * If undo was possible, the `History.EVENT_UNDO` event is emitted\n     * after the restoration with both the `prev` and `curr` (restored)\n     * states provided as event value (and object with these two keys).\n     * This allows for additional state handling to be executed, e.g.\n     * application of the \"Command pattern\". See `addListener()` for\n     * registering event listeners.\n     */\n    undo() {\n        if (this.history.length) {\n            const prev = this.state.deref();\n            this.future.push(prev);\n            const curr = this.state.reset(this.history.pop());\n            this.notify({ id: History_1.EVENT_UNDO, value: { prev, curr } });\n            return curr;\n        }\n    }\n    /**\n     * Attempts to re-apply most recent value from future stack to atom\n     * and returns it if successful (i.e. there's a future). Before the\n     * switch, first records the atom's current value into the history\n     * stack (to enable `undo()` feature). Returns `undefined` if\n     * there's no future (so sad!).\n     *\n     * If redo was possible, the `History.EVENT_REDO` event is emitted\n     * after the restoration with both the `prev` and `curr` (restored)\n     * states provided as event value (and object with these two keys).\n     * This allows for additional state handling to be executed, e.g.\n     * application of the \"Command pattern\". See `addListener()` for\n     * registering event listeners.\n     */\n    redo() {\n        if (this.future.length) {\n            const prev = this.state.deref();\n            this.history.push(prev);\n            const curr = this.state.reset(this.future.pop());\n            this.notify({ id: History_1.EVENT_REDO, value: { prev, curr } });\n            return curr;\n        }\n    }\n    /**\n     * `IAtom.reset()` implementation. Delegates to wrapped atom/cursor,\n     * but too applies `changed` predicate to determine if there was a\n     * change and if the previous value should be recorded.\n     *\n     * @param val\n     */\n    reset(val) {\n        const prev = this.state.deref();\n        this.state.reset(val);\n        const changed = this.changed(prev, this.state.deref());\n        if (changed) {\n            this.record(prev);\n        }\n        return val;\n    }\n    resetIn(path, val) {\n        const prev = this.state.deref();\n        const prevV = paths_1.getIn(prev, path);\n        const curr = paths_1.setIn(prev, path, val);\n        this.state.reset(curr);\n        this.changed(prevV, paths_1.getIn(curr, path)) && this.record(prev);\n        return curr;\n    }\n    /**\n     * `IAtom.swap()` implementation. Delegates to wrapped atom/cursor,\n     * but too applies `changed` predicate to determine if there was a\n     * change and if the previous value should be recorded.\n     *\n     * @param val\n     */\n    swap(fn, ...args) {\n        return this.reset(fn(this.state.deref(), ...args));\n    }\n    swapIn(path, fn, ...args) {\n        const prev = this.state.deref();\n        const prevV = paths_1.getIn(prev, path);\n        const curr = paths_1.updateIn(this.state.deref(), path, fn, ...args);\n        this.state.reset(curr);\n        this.changed(prevV, paths_1.getIn(curr, path)) && this.record(prev);\n        return curr;\n    }\n    /**\n     * Records given state in history. This method is only needed when\n     * manually managing snapshots, i.e. when applying multiple swaps on\n     * the wrapped atom directly, but not wanting to create an history\n     * entry for each change. **DO NOT call this explicitly if using\n     * `History.reset()` / `History.swap()` etc.**\n     *\n     * If no `state` is given, uses the wrapped atom's current state\n     * value (user code SHOULD always call without arg).\n     *\n     * If recording succeeded, the `History.EVENT_RECORD` event is\n     * emitted with the recorded state provided as event value.\n     *\n     * @param state\n     */\n    record(state) {\n        const history = this.history;\n        const n = history.length;\n        let ok = true;\n        // check for arg given and not if `state == null` we want to\n        // allow null/undefined as possible values\n        if (!arguments.length) {\n            state = this.state.deref();\n            ok = (!n || this.changed(history[n - 1], state));\n        }\n        if (ok) {\n            if (n >= this.maxLen) {\n                history.shift();\n            }\n            history.push(state);\n            this.notify({ id: History_1.EVENT_RECORD, value: state });\n            this.future.length = 0;\n        }\n    }\n    /**\n     * Returns wrapped atom's **current** value.\n     */\n    deref() {\n        return this.state.deref();\n    }\n    /**\n     * `IWatch.addWatch()` implementation. Delegates to wrapped\n     * atom/cursor.\n     *\n     * @param id\n     * @param fn\n     */\n    addWatch(id, fn) {\n        return this.state.addWatch(id, fn);\n    }\n    /**\n     * `IWatch.removeWatch()` implementation. Delegates to wrapped\n     * atom/cursor.\n     *\n     * @param id\n     */\n    removeWatch(id) {\n        return this.state.removeWatch(id);\n    }\n    /**\n     * `IWatch.notifyWatches()` implementation. Delegates to wrapped\n     * atom/cursor.\n     *\n     * @param oldState\n     * @param newState\n     */\n    notifyWatches(oldState, newState) {\n        return this.state.notifyWatches(oldState, newState);\n    }\n    addView(path, tx, lazy = true) {\n        return new view_1.View(this, path, tx, lazy);\n    }\n    release() {\n        this.state.release();\n        delete this.state;\n        return true;\n    }\n    addListener(id, fn, scope) {\n        return false;\n    }\n    removeListener(id, fn, scope) {\n        return false;\n    }\n    notify(event) {\n    }\n};\nHistory.EVENT_UNDO = \"undo\";\nHistory.EVENT_REDO = \"redo\";\nHistory.EVENT_RECORD = \"record\";\nHistory = History_1 = __decorate([\n    mixin.INotify\n], History);\nexports.History = History;\n","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./atom\"));\n__export(require(\"./cursor\"));\n__export(require(\"./history\"));\n__export(require(\"./view\"));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DEBUG = false;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst equiv_1 = require(\"@thi.ng/equiv\");\nlet _cachedFP;\nlet _cachedPath;\nlet _cachedEPC = [];\nlet _cachedPathPos = [];\nconst cachedFP = (size) => _cachedFP && _cachedFP.length >= size ?\n    _cachedFP :\n    (_cachedFP = new Int32Array(size));\nconst cachedPath = (size) => _cachedPath && _cachedPath.length >= size ?\n    _cachedPath :\n    (_cachedPath = new Int32Array(size));\nconst simpleDiff = (state, src, key, logDir, mode) => {\n    const n = src.length;\n    const linear = state.linear;\n    state.distance = n;\n    if (mode !== 0 /* ONLY_DISTANCE */) {\n        for (let i = 0, j = 0; i < n; i++, j += 3) {\n            linear[j] = logDir;\n            linear[j + 1] = i;\n            linear[j + 2] = src[i];\n        }\n        if (mode === 2 /* FULL */) {\n            const _state = state[key];\n            for (let i = 0; i < n; i++) {\n                _state[i] = src[i];\n            }\n        }\n    }\n    return state;\n};\n/**\n * Based on \"An O(NP) Sequence Comparison Algorithm\"\"\n * by Wu, Manber, Myers and Miller\n *\n * - http://www.itu.dk/stud/speciale/bepjea/xwebtex/litt/an-onp-sequence-comparison-algorithm.pdf\n * - https://github.com/cubicdaiya/onp\n *\n * Various optimizations, fixes & refactorings.\n * By default uses `@thi.ng/equiv` for equality checks.\n *\n * @param a \"old\" array\n * @param b \"new\" array\n * @param mode result mode\n * @param equiv equality predicate function\n */\nexports.diffArray = (a, b, mode = 2 /* FULL */, equiv = equiv_1.equiv) => {\n    const state = {\n        distance: 0,\n        adds: {},\n        dels: {},\n        const: {},\n        linear: []\n    };\n    if (a === b || (a == null && b == null)) {\n        return state;\n    }\n    else if (a == null || a.length === 0) {\n        return simpleDiff(state, b, \"adds\", 1, mode);\n    }\n    else if (b == null || b.length === 0) {\n        return simpleDiff(state, a, \"dels\", -1, mode);\n    }\n    const reverse = a.length >= b.length;\n    let _a, _b, na, nb;\n    if (reverse) {\n        _a = b;\n        _b = a;\n    }\n    else {\n        _a = a;\n        _b = b;\n    }\n    na = _a.length;\n    nb = _b.length;\n    const offset = na + 1;\n    const delta = nb - na;\n    const doff = delta + offset;\n    const size = na + nb + 3;\n    const path = cachedPath(size).fill(-1, 0, size);\n    const fp = cachedFP(size).fill(-1, 0, size);\n    const epc = _cachedEPC;\n    const pathPos = _cachedPathPos;\n    epc.length = 0;\n    pathPos.length = 0;\n    const snake = (k, p, pp) => {\n        const koff = k + offset;\n        let r, y;\n        if (p > pp) {\n            r = path[koff - 1];\n            y = p;\n        }\n        else {\n            r = path[koff + 1];\n            y = pp;\n        }\n        let x = y - k;\n        while (x < na && y < nb && equiv(_a[x], _b[y])) {\n            x++;\n            y++;\n        }\n        path[koff] = pathPos.length / 3;\n        pathPos.push(x, y, r);\n        return y;\n    };\n    let p = -1, k, ko;\n    do {\n        p++;\n        for (k = -p, ko = k + offset; k < delta; k++, ko++) {\n            fp[ko] = snake(k, fp[ko - 1] + 1, fp[ko + 1]);\n        }\n        for (k = delta + p, ko = k + offset; k > delta; k--, ko--) {\n            fp[ko] = snake(k, fp[ko - 1] + 1, fp[ko + 1]);\n        }\n        fp[doff] = snake(delta, fp[doff - 1] + 1, fp[doff + 1]);\n    } while (fp[doff] !== nb);\n    state.distance = delta + 2 * p;\n    if (mode !== 0 /* ONLY_DISTANCE */) {\n        p = path[doff] * 3;\n        while (p >= 0) {\n            epc.push(p);\n            p = pathPos[p + 2] * 3;\n        }\n        if (mode === 2 /* FULL */) {\n            buildFullLog(epc, pathPos, state, _a, _b, reverse);\n        }\n        else {\n            buildLinearLog(epc, pathPos, state, _a, _b, reverse);\n        }\n    }\n    return state;\n};\nconst buildFullLog = (epc, pathPos, state, a, b, reverse) => {\n    const linear = state.linear;\n    const _const = state.const;\n    let i = epc.length, px = 0, py = 0;\n    let adds, dels, aID, dID;\n    if (reverse) {\n        adds = state.dels;\n        dels = state.adds;\n        aID = -1;\n        dID = 1;\n    }\n    else {\n        adds = state.adds;\n        dels = state.dels;\n        aID = 1;\n        dID = -1;\n    }\n    for (; --i >= 0;) {\n        const e = epc[i];\n        const ppx = pathPos[e];\n        const ppy = pathPos[e + 1];\n        const d = ppy - ppx;\n        while (px < ppx || py < ppy) {\n            const dp = py - px;\n            if (d > dp) {\n                linear.push(aID, py, adds[py] = b[py]);\n                py++;\n            }\n            else if (d < dp) {\n                linear.push(dID, px, dels[px] = a[px]);\n                px++;\n            }\n            else {\n                linear.push(0, px, _const[px] = a[px]);\n                px++;\n                py++;\n            }\n        }\n    }\n};\nconst buildLinearLog = (epc, pathPos, state, a, b, reverse) => {\n    const linear = state.linear;\n    const aID = reverse ? -1 : 1;\n    const dID = reverse ? 1 : -1;\n    let i = epc.length, px = 0, py = 0;\n    for (; --i >= 0;) {\n        const e = epc[i];\n        const ppx = pathPos[e];\n        const ppy = pathPos[e + 1];\n        const d = ppy - ppx;\n        while (px < ppx || py < ppy) {\n            const dp = py - px;\n            if (d > dp) {\n                linear.push(aID, py, b[py]);\n                py++;\n            }\n            else if (d < dp) {\n                linear.push(dID, px, a[px]);\n                px++;\n            }\n            else {\n                linear.push(0, px, a[px]);\n                px++;\n                py++;\n            }\n        }\n    }\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst equiv_1 = require(\"@thi.ng/equiv\");\nexports.diffObject = (a, b, mode = 2 /* FULL */, _equiv = equiv_1.equiv) => a === b ?\n    { distance: 0 } :\n    mode === 0 /* ONLY_DISTANCE */ ?\n        diffObjectDist(a, b, _equiv) :\n        diffObjectFull(a, b, _equiv);\nconst diffObjectDist = (a, b, _equiv) => {\n    let d = 0;\n    for (let k in a) {\n        const vb = b[k];\n        (vb === undefined || !_equiv(a[k], vb)) && d++;\n    }\n    for (let k in b) {\n        !(k in a) && d++;\n    }\n    return { distance: d };\n};\nconst diffObjectFull = (a, b, _equiv) => {\n    let d = 0;\n    const adds = [];\n    const dels = [];\n    const edits = [];\n    for (let k in a) {\n        const vb = b[k];\n        if (vb === undefined) {\n            dels.push(k);\n            d++;\n        }\n        else if (!_equiv(a[k], vb)) {\n            edits.push(k, vb);\n            d++;\n        }\n    }\n    for (let k in b) {\n        if (!(k in a)) {\n            adds.push(k);\n            d++;\n        }\n    }\n    return { distance: d, adds, dels, edits };\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst api_1 = require(\"@thi.ng/api/api\");\nconst array_1 = require(\"@thi.ng/diff/array\");\nconst object_1 = require(\"@thi.ng/diff/object\");\nconst equiv_1 = require(\"@thi.ng/equiv\");\nconst isArray = Array.isArray;\nconst max = Math.max;\n// child index tracking template buffer\nconst INDEX = (() => {\n    const res = new Array(2048);\n    for (let i = 2, n = res.length; i < n; i++) {\n        res[i] = i - 2;\n    }\n    return res;\n})();\nconst buildIndex = (n) => {\n    if (n <= INDEX.length) {\n        return INDEX.slice(0, n);\n    }\n    const res = new Array(n);\n    while (--n >= 2) {\n        res[n] = n - 2;\n    }\n    return res;\n};\n/**\n * See `HDOMImplementation` interface for further details.\n *\n * @param opts\n * @param impl hdom implementation\n * @param parent\n * @param prev previous tree\n * @param curr current tree\n * @param child child index\n */\nexports.diffTree = (opts, impl, parent, prev, curr, child = 0) => {\n    const attribs = curr[1];\n    if (attribs.__skip) {\n        return;\n    }\n    // always replace element if __diff = false\n    if (attribs.__diff === false) {\n        exports.releaseTree(prev);\n        impl.replaceChild(opts, parent, child, curr);\n        return;\n    }\n    // delegate to branch-local implementation\n    let _impl = attribs.__impl;\n    if (_impl && _impl !== impl) {\n        return _impl.diffTree(opts, _impl, parent, prev, curr, child);\n    }\n    const delta = array_1.diffArray(prev, curr, 1 /* ONLY_DISTANCE_LINEAR */, exports.equiv);\n    if (delta.distance === 0) {\n        return;\n    }\n    const edits = delta.linear;\n    const el = impl.getChild(parent, child);\n    let i;\n    let ii;\n    let j;\n    let idx;\n    let k;\n    let eq;\n    let status;\n    let val;\n    if (edits[0] !== 0 || prev[1].key !== attribs.key) {\n        // DEBUG && console.log(\"replace:\", prev, curr);\n        exports.releaseTree(prev);\n        impl.replaceChild(opts, parent, child, curr);\n        return;\n    }\n    if ((val = prev.__release) && val !== curr.__release) {\n        exports.releaseTree(prev);\n    }\n    if (edits[3] !== 0) {\n        exports.diffAttributes(impl, el, prev[1], curr[1]);\n        // if attribs changed & distance == 2 then we're done here...\n        if (delta.distance === 2) {\n            return;\n        }\n    }\n    const numEdits = edits.length;\n    const prevLength = prev.length - 1;\n    const equivKeys = extractEquivElements(edits);\n    const offsets = buildIndex(prevLength + 1);\n    for (i = 2, ii = 6; ii < numEdits; i++, ii += 3) {\n        status = edits[ii];\n        if (status === -1) {\n            // element removed / edited?\n            val = edits[ii + 2];\n            if (isArray(val)) {\n                k = val[1].key;\n                if (k !== undefined && equivKeys[k][2] !== undefined) {\n                    eq = equivKeys[k];\n                    k = eq[0];\n                    // DEBUG && console.log(`diff equiv key @ ${k}:`, prev[k], curr[eq[2]]);\n                    exports.diffTree(opts, impl, el, prev[k], curr[eq[2]], offsets[k]);\n                }\n                else {\n                    idx = edits[ii + 1];\n                    // DEBUG && console.log(\"remove @\", offsets[idx], val);\n                    exports.releaseTree(val);\n                    impl.removeChild(el, offsets[idx]);\n                    for (j = prevLength; j >= idx; j--) {\n                        offsets[j] = max(offsets[j] - 1, 0);\n                    }\n                }\n            }\n            else if (typeof val === \"string\") {\n                impl.setContent(el, \"\");\n            }\n        }\n        else if (status === 1) {\n            // element added/inserted?\n            val = edits[ii + 2];\n            if (typeof val === \"string\") {\n                impl.setContent(el, val);\n            }\n            else if (isArray(val)) {\n                k = val[1].key;\n                if (k === undefined || equivKeys[k][0] === undefined) {\n                    idx = edits[ii + 1];\n                    // DEBUG && console.log(\"insert @\", offsets[idx], val);\n                    impl.createTree(opts, el, val, offsets[idx]);\n                    for (j = prevLength; j >= idx; j--) {\n                        offsets[j]++;\n                    }\n                }\n            }\n        }\n    }\n    // call __init after all children have been added/updated\n    if ((val = curr.__init) && val != prev.__init) {\n        val.apply(curr, [el, ...(curr.__args)]);\n    }\n};\n/**\n * Helper function for `diffTree()` to compute & apply the difference\n * between a node's `prev` and `curr` attributes.\n *\n * @param impl\n * @param el\n * @param prev\n * @param curr\n */\nexports.diffAttributes = (impl, el, prev, curr) => {\n    const delta = object_1.diffObject(prev, curr, 2 /* FULL */, equiv_1.equiv);\n    impl.removeAttribs(el, delta.dels, prev);\n    let val = api_1.SEMAPHORE;\n    let i, e, edits;\n    for (edits = delta.edits, i = edits.length; (i -= 2) >= 0;) {\n        const a = edits[i];\n        if (a.indexOf(\"on\") === 0) {\n            impl.removeAttribs(el, [a], prev);\n        }\n        if (a !== \"value\") {\n            impl.setAttrib(el, a, edits[i + 1], curr);\n        }\n        else {\n            val = edits[i + 1];\n        }\n    }\n    for (edits = delta.adds, i = edits.length; --i >= 0;) {\n        e = edits[i];\n        if (e !== \"value\") {\n            impl.setAttrib(el, e, curr[e], curr);\n        }\n        else {\n            val = curr[e];\n        }\n    }\n    if (val !== api_1.SEMAPHORE) {\n        impl.setAttrib(el, \"value\", val, curr);\n    }\n};\n/**\n * Recursively attempts to call the `release` lifecycle method on every\n * element in given tree (branch), using depth-first descent. Each\n * element is checked for the presence of the `__release` control\n * attribute. If (and only if) it is set to `false`, further descent\n * into that element's branch is skipped.\n *\n * @param tag\n */\nexports.releaseTree = (tag) => {\n    if (isArray(tag)) {\n        let x;\n        if ((x = tag[1]) && x.__release === false) {\n            return;\n        }\n        if (tag.__release) {\n            // DEBUG && console.log(\"call __release\", tag);\n            tag.__release.apply(tag.__this, tag.__args);\n            delete tag.__release;\n        }\n        for (x = tag.length; --x >= 2;) {\n            exports.releaseTree(tag[x]);\n        }\n    }\n};\nconst extractEquivElements = (edits) => {\n    let k;\n    let val;\n    let ek;\n    const equiv = {};\n    for (let i = edits.length; (i -= 3) >= 0;) {\n        val = edits[i + 2];\n        if (isArray(val) && (k = val[1].key) !== undefined) {\n            ek = equiv[k];\n            !ek && (equiv[k] = ek = [, ,]);\n            ek[edits[i] + 1] = edits[i + 1];\n        }\n    }\n    return equiv;\n};\nconst OBJP = Object.getPrototypeOf({});\nconst FN = \"function\";\nconst STR = \"string\";\n/**\n * Customized version @thi.ng/equiv which takes `__diff` attributes into\n * account (at any nesting level). If an hdom element's attribute object\n * contains `__diff: false`, the object will ALWAYS be considered\n * unequal, even if all other attributes in the object are equivalent.\n *\n * @param a\n * @param b\n */\nexports.equiv = (a, b) => {\n    let proto;\n    if (a === b) {\n        return true;\n    }\n    if (a != null) {\n        if (typeof a.equiv === FN) {\n            return a.equiv(b);\n        }\n    }\n    else {\n        return a == b;\n    }\n    if (b != null) {\n        if (typeof b.equiv === FN) {\n            return b.equiv(a);\n        }\n    }\n    else {\n        return a == b;\n    }\n    if (typeof a === STR || typeof b === STR) {\n        return false;\n    }\n    if ((proto = Object.getPrototypeOf(a), proto == null || proto === OBJP) &&\n        (proto = Object.getPrototypeOf(b), proto == null || proto === OBJP)) {\n        return !(a.__diff === false || b.__diff === false) &&\n            equiv_1.equivObject(a, b, exports.equiv);\n    }\n    if (typeof a !== FN && a.length !== undefined &&\n        typeof b !== FN && b.length !== undefined) {\n        return equiv_1.equivArrayLike(a, b, exports.equiv);\n    }\n    if (a instanceof Set && b instanceof Set) {\n        return equiv_1.equivSet(a, b, exports.equiv);\n    }\n    if (a instanceof Map && b instanceof Map) {\n        return equiv_1.equivMap(a, b, exports.equiv);\n    }\n    if (a instanceof Date && b instanceof Date) {\n        return a.getTime() === b.getTime();\n    }\n    if (a instanceof RegExp && b instanceof RegExp) {\n        return a.toString() === b.toString();\n    }\n    // NaN\n    return (a !== a && b !== b);\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isNotStringAndIterable(x) {\n    return x != null &&\n        typeof x !== \"string\" &&\n        typeof x[Symbol.iterator] === \"function\";\n}\nexports.isNotStringAndIterable = isNotStringAndIterable;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SVG_NS = \"http://www.w3.org/2000/svg\";\nexports.XLINK_NS = \"http://www.w3.org/1999/xlink\";\nexports.TAG_REGEXP = /^([^\\s\\.#]+)(?:#([^\\s\\.#]+))?(?:\\.([^\\s#]+))?$/;\n// tslint:disable-next-line\nexports.SVG_TAGS = \"animate animateColor animateMotion animateTransform circle clipPath color-profile defs desc discard ellipse feBlend feColorMatrix feComponentTransfer feComposite feConvolveMatrix feDiffuseLighting feDisplacementMap feDistantLight feDropShadow feFlood feFuncA feFuncB feFuncG feFuncR feGaussianBlur feImage feMerge feMergeNode feMorphology feOffset fePointLight feSpecularLighting feSpotLight feTile feTurbulence filter font foreignObject g image line linearGradient marker mask metadata mpath path pattern polygon polyline radialGradient rect set stop style svg switch symbol text textPath title tref tspan use view\"\n    .split(\" \")\n    .reduce((acc, x) => (acc[x] = 1, acc), {});\n// tslint:disable-next-line\nexports.VOID_TAGS = \"area base br circle col command ellipse embed hr img input keygen line link meta param path polygon polyline rect source stop track use wbr\"\n    .split(\" \")\n    .reduce((acc, x) => (acc[x] = 1, acc), {});\nexports.ENTITIES = {\n    \"&\": \"&amp;\",\n    \"<\": \"&lt;\",\n    \">\": \"&gt;\",\n    '\"': \"&quot;\",\n    \"'\": \"&apos;\",\n};\nexports.COMMENT = \"__COMMENT__\";\nexports.NO_SPANS = {\n    button: 1,\n    option: 1,\n    text: 1,\n    textarea: 1,\n};\nexports.ENTITY_RE = new RegExp(`[${Object.keys(exports.ENTITIES)}]`, \"g\");\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst is_function_1 = require(\"@thi.ng/checks/is-function\");\nexports.css = (rules) => {\n    let css = \"\", v;\n    for (let r in rules) {\n        v = rules[r];\n        if (is_function_1.isFunction(v)) {\n            v = v(rules);\n        }\n        v != null && (css += `${r}:${v};`);\n    }\n    return css;\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst isa = require(\"@thi.ng/checks/is-array\");\nconst isi = require(\"@thi.ng/checks/is-not-string-iterable\");\nconst api_1 = require(\"@thi.ng/hiccup/api\");\nconst css_1 = require(\"@thi.ng/hiccup/css\");\nconst isArray = isa.isArray;\nconst isNotStringAndIterable = isi.isNotStringAndIterable;\n/**\n * See `HDOMImplementation` interface for further details.\n *\n * @param opts\n * @param parent\n * @param tree\n * @param insert\n */\nexports.createTree = (opts, impl, parent, tree, insert) => {\n    if (isArray(tree)) {\n        const tag = tree[0];\n        if (typeof tag === \"function\") {\n            return exports.createTree(opts, impl, parent, tag.apply(null, [opts.ctx, ...tree.slice(1)]), insert);\n        }\n        const attribs = tree[1];\n        if (attribs.__impl) {\n            return attribs.__impl\n                .createTree(opts, parent, tree, insert);\n        }\n        const el = impl.createElement(parent, tag, attribs, insert);\n        if (tree.length > 2) {\n            const n = tree.length;\n            for (let i = 2; i < n; i++) {\n                exports.createTree(opts, impl, el, tree[i]);\n            }\n        }\n        if (tree.__init) {\n            tree.__init.apply(tree.__this, [el, ...tree.__args]);\n        }\n        return el;\n    }\n    if (isNotStringAndIterable(tree)) {\n        const res = [];\n        for (let t of tree) {\n            res.push(exports.createTree(opts, impl, parent, t));\n        }\n        return res;\n    }\n    if (tree == null) {\n        return parent;\n    }\n    return impl.createTextElement(parent, tree);\n};\n/**\n * See `HDOMImplementation` interface for further details.\n *\n * @param opts\n * @param parent\n * @param tree\n * @param index\n */\nexports.hydrateTree = (opts, impl, parent, tree, index = 0) => {\n    if (isArray(tree)) {\n        const el = impl.getChild(parent, index);\n        if (typeof tree[0] === \"function\") {\n            exports.hydrateTree(opts, impl, parent, tree[0].apply(null, [opts.ctx, ...tree.slice(1)]), index);\n        }\n        const attribs = tree[1];\n        if (attribs.__impl) {\n            return attribs.__impl\n                .hydrateTree(opts, parent, tree, index);\n        }\n        if (tree.__init) {\n            tree.__init.apply(tree.__this, [el, ...tree.__args]);\n        }\n        for (let a in attribs) {\n            if (a.indexOf(\"on\") === 0) {\n                impl.setAttrib(el, a, attribs[a]);\n            }\n        }\n        for (let n = tree.length, i = 2; i < n; i++) {\n            exports.hydrateTree(opts, impl, el, tree[i], i - 2);\n        }\n    }\n    else if (isNotStringAndIterable(tree)) {\n        for (let t of tree) {\n            exports.hydrateTree(opts, impl, parent, t, index);\n            index++;\n        }\n    }\n};\n/**\n * Creates a new DOM element of type `tag` with optional `attribs`. If\n * `parent` is not `null`, the new element will be inserted as child at\n * given `insert` index. If `insert` is missing, the element will be\n * appended to the `parent`'s list of children. Returns new DOM node.\n *\n * If `tag` is a known SVG element name, the new element will be created\n * with the proper SVG XML namespace.\n *\n * @param parent\n * @param tag\n * @param attribs\n * @param insert\n */\nexports.createElement = (parent, tag, attribs, insert) => {\n    const el = api_1.SVG_TAGS[tag] ?\n        document.createElementNS(api_1.SVG_NS, tag) :\n        document.createElement(tag);\n    if (parent) {\n        if (insert == null) {\n            parent.appendChild(el);\n        }\n        else {\n            parent.insertBefore(el, parent.children[insert]);\n        }\n    }\n    if (attribs) {\n        exports.setAttribs(el, attribs);\n    }\n    return el;\n};\nexports.createTextElement = (parent, content, insert) => {\n    const el = document.createTextNode(content);\n    if (parent) {\n        if (insert === undefined) {\n            parent.appendChild(el);\n        }\n        else {\n            parent.insertBefore(el, parent.children[insert]);\n        }\n    }\n    return el;\n};\nexports.getChild = (parent, child) => parent.children[child];\nexports.replaceChild = (opts, impl, parent, child, tree) => (impl.removeChild(parent, child),\n    impl.createTree(opts, parent, tree, child));\nexports.cloneWithNewAttribs = (el, attribs) => {\n    const res = el.cloneNode(true);\n    exports.setAttribs(res, attribs);\n    el.parentNode.replaceChild(res, el);\n    return res;\n};\nexports.setContent = (el, body) => el.textContent = body;\nexports.setAttribs = (el, attribs) => {\n    for (let k in attribs) {\n        exports.setAttrib(el, k, attribs[k], attribs);\n    }\n    return el;\n};\n/**\n * Sets a single attribute on given element. If attrib name is NOT an\n * event name (prefix: \"on\") and its value is a function, it is called\n * with given `attribs` object (usually the full attrib object passed to\n * `setAttribs`) and the function's return value is used as the actual\n * attrib value.\n *\n * Special rules apply for certain attributes:\n *\n * - \"style\": delegated to `setStyle()`\n * - \"value\": delegated to `updateValueAttrib()`\n * - attrib IDs starting with \"on\" are treated as event listeners\n *\n * If the given (or computed) attrib value is `false` or `undefined` the\n * attrib is removed from the element.\n *\n * @param el\n * @param id\n * @param val\n * @param attribs\n */\nexports.setAttrib = (el, id, val, attribs) => {\n    if (id.startsWith(\"__\"))\n        return;\n    const isListener = id.indexOf(\"on\") === 0;\n    if (!isListener && typeof val === \"function\") {\n        val = val(attribs);\n    }\n    if (val !== undefined && val !== false) {\n        switch (id) {\n            case \"style\":\n                exports.setStyle(el, val);\n                break;\n            case \"value\":\n                exports.updateValueAttrib(el, val);\n                break;\n            case \"checked\":\n                // TODO add more native attribs?\n                el[id] = val;\n                break;\n            default:\n                if (isListener) {\n                    exports.setListener(el, id.substr(2), val);\n                }\n                else {\n                    el.setAttribute(id, val);\n                }\n        }\n    }\n    else {\n        el[id] != null ? (el[id] = null) : el.removeAttribute(id);\n    }\n    return el;\n};\n/**\n * Updates an element's `value` property. For form elements it too\n * ensures the edit cursor retains its position.\n *\n * @param el\n * @param v\n */\nexports.updateValueAttrib = (el, v) => {\n    let ev;\n    switch (el.type) {\n        case \"text\":\n        case \"textarea\":\n        case \"password\":\n        case \"email\":\n        case \"url\":\n        case \"tel\":\n        case \"search\":\n            if ((ev = el.value) !== undefined && typeof v === \"string\") {\n                const off = v.length - (ev.length - el.selectionStart);\n                el.value = v;\n                el.selectionStart = el.selectionEnd = off;\n                break;\n            }\n        default:\n            el.value = v;\n    }\n};\nexports.removeAttribs = (el, attribs, prev) => {\n    for (let i = attribs.length; --i >= 0;) {\n        const a = attribs[i];\n        if (a.indexOf(\"on\") === 0) {\n            exports.removeListener(el, a.substr(2), prev[a]);\n        }\n        else {\n            el[a] ? (el[a] = null) : el.removeAttribute(a);\n        }\n    }\n};\nexports.setStyle = (el, styles) => (el.setAttribute(\"style\", css_1.css(styles)), el);\n/**\n * Adds event listener (possibly with options).\n *\n * @param el\n * @param id event name (w/o `on` prefix)\n * @param listener\n */\nexports.setListener = (el, id, listener) => {\n    if (isArray(listener)) {\n        el.addEventListener(id, ...listener);\n    }\n    else {\n        el.addEventListener(id, listener);\n    }\n};\n/**\n * Removes event listener (possibly with options).\n *\n * @param el\n * @param id event name (w/o `on` prefix)\n * @param listener\n */\nexports.removeListener = (el, id, listener) => {\n    if (isArray(listener)) {\n        el.removeEventListener(id, ...listener);\n    }\n    else {\n        el.removeEventListener(id, listener);\n    }\n};\nexports.clearDOM = (el) => el.innerHTML = \"\";\nexports.removeChild = (parent, childIdx) => {\n    const n = parent.children[childIdx];\n    n !== undefined && parent.removeChild(n);\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst OBJP = Object.getPrototypeOf({});\n/**\n * Similar to `isObject()`, but also checks if prototype is that of\n * `Object` (or `null`).\n *\n * @param x\n */\nfunction isPlainObject(x) {\n    let proto;\n    return Object.prototype.toString.call(x) === \"[object Object]\" &&\n        (proto = Object.getPrototypeOf(x), proto === null || proto === OBJP);\n}\nexports.isPlainObject = isPlainObject;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst isa = require(\"@thi.ng/checks/is-array\");\nconst insi = require(\"@thi.ng/checks/is-not-string-iterable\");\nconst iso = require(\"@thi.ng/checks/is-plain-object\");\nconst illegal_arguments_1 = require(\"@thi.ng/errors/illegal-arguments\");\nconst api_1 = require(\"@thi.ng/hiccup/api\");\nconst isArray = isa.isArray;\nconst isNotStringAndIterable = insi.isNotStringAndIterable;\nconst isPlainObject = iso.isPlainObject;\n/**\n * Expands single hiccup element/component into its canonical form:\n *\n * ```\n * [tagname, {attribs}, ...children]\n * ```\n *\n * Emmet-style ID and class names in the original tagname are moved into\n * the attribs object, e.g.:\n *\n * ```\n * [\"div#foo.bar.baz\"] => [\"div\", {id: \"foo\", class: \"bar baz\"}]\n * ```\n *\n * If both Emmet-style classes AND a `class` attrib exists, the former\n * are appended to the latter:\n *\n * ```\n * [\"div.bar.baz\", {class: \"foo\"}] => [\"div\", {class: \"foo bar baz\"}]\n * ```\n *\n * @param spec\n * @param keys\n */\nexports.normalizeElement = (spec, keys) => {\n    let tag = spec[0], hasAttribs = isPlainObject(spec[1]), match, id, clazz, attribs;\n    if (typeof tag !== \"string\" || !(match = api_1.TAG_REGEXP.exec(tag))) {\n        illegal_arguments_1.illegalArgs(`${tag} is not a valid tag name`);\n    }\n    // return orig if already normalized and satisfies key requirement\n    if (tag === match[1] && hasAttribs && (!keys || spec[1].key)) {\n        return spec;\n    }\n    attribs = hasAttribs ? Object.assign({}, spec[1]) : {};\n    id = match[2];\n    clazz = match[3];\n    if (id) {\n        attribs.id = id;\n    }\n    if (clazz) {\n        clazz = clazz.replace(/\\./g, \" \");\n        if (attribs.class) {\n            attribs.class += \" \" + clazz;\n        }\n        else {\n            attribs.class = clazz;\n        }\n    }\n    return [match[1], attribs, ...spec.slice(hasAttribs ? 2 : 1)];\n};\n/**\n * See `HDOMImplementation` interface for further details.\n *\n * @param opts\n * @param tree\n */\nexports.normalizeTree = (opts, tree) => _normalizeTree(tree, opts, opts.ctx, [0], opts.keys !== false, opts.span !== false);\nconst _normalizeTree = (tree, opts, ctx, path, keys, span) => {\n    if (tree == null) {\n        return;\n    }\n    if (isArray(tree)) {\n        if (tree.length === 0) {\n            return;\n        }\n        let norm, nattribs = tree[1], impl;\n        // if available, use branch-local normalize implementation\n        if (nattribs && (impl = nattribs.__impl) && (impl = impl.normalizeTree)) {\n            return impl(opts, tree);\n        }\n        const tag = tree[0];\n        // use result of function call\n        // pass ctx as first arg and remaining array elements as rest args\n        if (typeof tag === \"function\") {\n            return _normalizeTree(tag.apply(null, [ctx, ...tree.slice(1)]), opts, ctx, path, keys, span);\n        }\n        // component object w/ life cycle methods\n        // (render() is the only required hook)\n        if (typeof tag.render === \"function\") {\n            const args = [ctx, ...tree.slice(1)];\n            norm = _normalizeTree(tag.render.apply(tag, args), opts, ctx, path, keys, span);\n            if (isArray(norm)) {\n                norm.__this = tag;\n                norm.__init = tag.init;\n                norm.__release = tag.release;\n                norm.__args = args;\n            }\n            return norm;\n        }\n        norm = exports.normalizeElement(tree, keys);\n        nattribs = norm[1];\n        if (nattribs.__normalize === false) {\n            return norm;\n        }\n        if (keys && nattribs.key === undefined) {\n            nattribs.key = path.join(\"-\");\n        }\n        if (norm.length > 2) {\n            const tag = norm[0];\n            const res = [tag, nattribs];\n            span = span && !api_1.NO_SPANS[tag];\n            for (let i = 2, j = 2, k = 0, n = norm.length; i < n; i++) {\n                let el = norm[i];\n                if (el != null) {\n                    const isarray = isArray(el);\n                    if ((isarray && isArray(el[0])) || (!isarray && isNotStringAndIterable(el))) {\n                        for (let c of el) {\n                            c = _normalizeTree(c, opts, ctx, path.concat(k), keys, span);\n                            if (c !== undefined) {\n                                res[j++] = c;\n                            }\n                            k++;\n                        }\n                    }\n                    else {\n                        el = _normalizeTree(el, opts, ctx, path.concat(k), keys, span);\n                        if (el !== undefined) {\n                            res[j++] = el;\n                        }\n                        k++;\n                    }\n                }\n            }\n            return res;\n        }\n        return norm;\n    }\n    if (typeof tree === \"function\") {\n        return _normalizeTree(tree(ctx), opts, ctx, path, keys, span);\n    }\n    if (typeof tree.toHiccup === \"function\") {\n        return _normalizeTree(tree.toHiccup(opts.ctx), opts, ctx, path, keys, span);\n    }\n    if (typeof tree.deref === \"function\") {\n        return _normalizeTree(tree.deref(), opts, ctx, path, keys, span);\n    }\n    return span ?\n        [\"span\", keys ? { key: path.join(\"-\") } : {}, tree.toString()] :\n        tree.toString();\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst diff_1 = require(\"./diff\");\nconst dom_1 = require(\"./dom\");\nconst normalize_1 = require(\"./normalize\");\n/**\n * Default target implementation to manipulate browser DOM.\n */\nexports.DEFAULT_IMPL = {\n    createTree(opts, parent, tree, child) {\n        return dom_1.createTree(opts, this, parent, tree, child);\n    },\n    hydrateTree(opts, parent, tree, child) {\n        return dom_1.hydrateTree(opts, this, parent, tree, child);\n    },\n    diffTree(opts, parent, prev, curr, child) {\n        diff_1.diffTree(opts, this, parent, prev, curr, child);\n    },\n    normalizeTree: normalize_1.normalizeTree,\n    getElementById(id) {\n        return document.getElementById(id);\n    },\n    getChild: dom_1.getChild,\n    createElement: dom_1.createElement,\n    createTextElement: dom_1.createTextElement,\n    replaceChild(opts, parent, child, tree) {\n        dom_1.replaceChild(opts, this, parent, child, tree);\n    },\n    removeChild: dom_1.removeChild,\n    setContent: dom_1.setContent,\n    removeAttribs: dom_1.removeAttribs,\n    setAttrib: dom_1.setAttrib,\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction implementsFunction(x, fn) {\n    return x != null && typeof x[fn] === \"function\";\n}\nexports.implementsFunction = implementsFunction;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst implements_function_1 = require(\"@thi.ng/checks/implements-function\");\n/**\n * Takes an arbitrary `ctx` object and array of `keys`. Attempts to call\n * `.deref()` on all given keys' values and stores result values instead\n * of original. Returns updated copy of `ctx` or original if `ctx` is\n * `null` or no keys were given.\n *\n * @param ctx\n * @param keys\n */\nexports.derefContext = (ctx, keys) => {\n    if (ctx == null || !keys || !keys.length)\n        return ctx;\n    const res = Object.assign({}, ctx);\n    for (let k of keys) {\n        const v = res[k];\n        implements_function_1.implementsFunction(v, \"deref\") && (res[k] = v.deref());\n    }\n    return res;\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst is_string_1 = require(\"@thi.ng/checks/is-string\");\nexports.resolveRoot = (root, impl) => is_string_1.isString(root) ?\n    impl.getElementById(root) :\n    root;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst deref_1 = require(\"@thi.ng/hiccup/deref\");\nconst default_1 = require(\"./default\");\nconst utils_1 = require(\"./utils\");\n/**\n * One-off hdom tree conversion & target DOM application. Takes same\n * options as `start()`, but performs no diffing and only creates or\n * hydrates target once. The given tree is first normalized and if\n * result is `null` or `undefined` no further action will be taken.\n *\n * @param tree\n * @param opts\n * @param impl\n */\nexports.renderOnce = (tree, opts = {}, impl = default_1.DEFAULT_IMPL) => {\n    opts = Object.assign({ root: \"app\" }, opts);\n    opts.ctx = deref_1.derefContext(opts.ctx, opts.autoDerefKeys);\n    const root = utils_1.resolveRoot(opts.root, impl);\n    tree = impl.normalizeTree(opts, tree);\n    if (!tree)\n        return;\n    opts.hydrate ?\n        impl.hydrateTree(opts, root, tree) :\n        impl.createTree(opts, root, tree);\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst deref_1 = require(\"@thi.ng/hiccup/deref\");\nconst default_1 = require(\"./default\");\nconst utils_1 = require(\"./utils\");\n/**\n * Takes an hiccup tree (array, function or component object w/ life\n * cycle methods) and an optional object of DOM update options. Starts\n * RAF update loop, in each iteration first normalizing given tree, then\n * computing diff to previous frame's tree and applying any changes to\n * the real DOM. The `ctx` option can be used for passing arbitrary\n * config data or state down into the hiccup component tree. Any\n * embedded component function in the tree will receive this context\n * object (shallow copy) as first argument, as will life cycle methods\n * in component objects. If the `autoDerefKeys` option is given, attempts\n * to auto-expand/deref the given keys in the user supplied context\n * object (`ctx` option) prior to *each* tree normalization. All of\n * these values should implement the thi.ng/api `IDeref` interface (e.g.\n * atoms, cursors, views, rstreams etc.). This feature can be used to\n * define dynamic contexts linked to the main app state, e.g. using\n * derived views provided by thi.ng/atom.\n *\n * **Selective updates**: No updates will be applied if the given hiccup\n * tree is `undefined` or `null` or a root component function returns no\n * value. This way a given root function can do some state handling of\n * its own and implement fail-fast checks to determine no DOM updates\n * are necessary, save effort re-creating a new hiccup tree and request\n * skipping DOM updates via this function. In this case, the previous\n * DOM tree is kept around until the root function returns a tree again,\n * which then is diffed and applied against the previous tree kept as\n * usual. Any number of frames may be skipped this way.\n *\n * **Important:** Unless the `hydrate` option is enabled, the parent\n * element given is assumed to have NO children at the time when\n * `start()` is called. Since hdom does NOT track the real DOM, the\n * resulting changes will result in potentially undefined behavior if\n * the parent element wasn't empty. Likewise, if `hydrate` is enabled,\n * it is assumed that an equivalent DOM (minus listeners) already exists\n * (i.e. generated via SSR) when `start()` is called. Any other\n * discrepancies between the pre-existing DOM and the hdom trees will\n * cause undefined behavior.\n *\n * Returns a function, which when called, immediately cancels the update\n * loop.\n *\n * @param tree hiccup DOM tree\n * @param opts options\n * @param impl hdom target implementation\n */\nexports.start = (tree, opts = {}, impl = default_1.DEFAULT_IMPL) => {\n    const _opts = Object.assign({ root: \"app\" }, opts);\n    let prev = [];\n    let isActive = true;\n    const root = utils_1.resolveRoot(_opts.root, impl);\n    const update = () => {\n        if (isActive) {\n            _opts.ctx = deref_1.derefContext(opts.ctx, _opts.autoDerefKeys);\n            const curr = impl.normalizeTree(_opts, tree);\n            if (curr != null) {\n                if (_opts.hydrate) {\n                    impl.hydrateTree(_opts, root, curr);\n                    _opts.hydrate = false;\n                }\n                else {\n                    impl.diffTree(_opts, root, prev, curr);\n                }\n                prev = curr;\n            }\n            // check again in case one of the components called cancel\n            isActive && requestAnimationFrame(update);\n        }\n    };\n    requestAnimationFrame(update);\n    return () => (isActive = false);\n};\n","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./api\"));\n__export(require(\"./default\"));\n__export(require(\"./diff\"));\n__export(require(\"./dom\"));\n__export(require(\"./normalize\"));\n__export(require(\"./render-once\"));\n__export(require(\"./start\"));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isIterable(x) {\n    return x != null && typeof x[Symbol.iterator] === \"function\";\n}\nexports.isIterable = isIterable;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass Reduced {\n    constructor(val) {\n        this.value = val;\n    }\n    deref() {\n        return this.value;\n    }\n}\nexports.Reduced = Reduced;\nfunction reduced(x) {\n    return new Reduced(x);\n}\nexports.reduced = reduced;\nfunction isReduced(x) {\n    return x instanceof Reduced;\n}\nexports.isReduced = isReduced;\nfunction ensureReduced(x) {\n    return x instanceof Reduced ? x : new Reduced(x);\n}\nexports.ensureReduced = ensureReduced;\nfunction unreduced(x) {\n    return x instanceof Reduced ? x.deref() : x;\n}\nexports.unreduced = unreduced;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isArrayLike(x) {\n    return (x != null && typeof x !== \"function\" && x.length !== undefined);\n}\nexports.isArrayLike = isArrayLike;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst implements_function_1 = require(\"@thi.ng/checks/implements-function\");\nconst is_arraylike_1 = require(\"@thi.ng/checks/is-arraylike\");\nconst is_iterable_1 = require(\"@thi.ng/checks/is-iterable\");\nconst illegal_arity_1 = require(\"@thi.ng/errors/illegal-arity\");\nconst reduced_1 = require(\"./reduced\");\nfunction reduce(...args) {\n    let acc, xs;\n    switch (args.length) {\n        case 3:\n            xs = args[2];\n            acc = args[1];\n            break;\n        case 2:\n            xs = args[1];\n            break;\n        default:\n            illegal_arity_1.illegalArity(args.length);\n    }\n    const rfn = args[0];\n    const init = rfn[0];\n    const complete = rfn[1];\n    const reduce = rfn[2];\n    acc = acc == null ? init() : acc;\n    if (implements_function_1.implementsFunction(xs, \"$reduce\")) {\n        acc = xs.$reduce(reduce, acc);\n    }\n    else if (is_arraylike_1.isArrayLike(xs)) {\n        for (let i = 0, n = xs.length; i < n; i++) {\n            acc = reduce(acc, xs[i]);\n            if (reduced_1.isReduced(acc)) {\n                acc = acc.deref();\n                break;\n            }\n        }\n    }\n    else {\n        for (let x of xs) {\n            acc = reduce(acc, x);\n            if (reduced_1.isReduced(acc)) {\n                acc = acc.deref();\n                break;\n            }\n        }\n    }\n    return reduced_1.unreduced(complete(acc));\n}\nexports.reduce = reduce;\n/**\n * Convenience helper for building a full `Reducer` using the identity\n * function (i.e. `(x) => x`) as completion step (true for 90% of all\n * bundled transducers).\n *\n * @param init init step of reducer\n * @param rfn reduction step of reducer\n */\nfunction reducer(init, rfn) {\n    return [init, (acc) => acc, rfn];\n}\nexports.reducer = reducer;\nexports.$$reduce = (rfn, args) => {\n    const n = args.length - 1;\n    return is_iterable_1.isIterable(args[n]) ?\n        args.length > 1 ?\n            reduce(rfn.apply(null, args.slice(0, n)), args[n]) :\n            reduce(rfn(), args[0]) :\n        undefined;\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst reduce_1 = require(\"../reduce\");\nfunction push(xs) {\n    return xs ?\n        [...xs] :\n        reduce_1.reducer(() => [], (acc, x) => (acc.push(x), acc));\n}\nexports.push = push;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst api_1 = require(\"@thi.ng/api/api\");\nconst is_iterable_1 = require(\"@thi.ng/checks/is-iterable\");\nconst reduced_1 = require(\"./reduced\");\nconst push_1 = require(\"./rfn/push\");\n/**\n * Takes a transducer and input iterable. Returns iterator of\n * transformed results.\n *\n * @param xform\n * @param xs\n */\nfunction* iterator(xform, xs) {\n    const rfn = xform(push_1.push());\n    const complete = rfn[1];\n    const reduce = rfn[2];\n    for (let x of xs) {\n        const y = reduce([], x);\n        if (reduced_1.isReduced(y)) {\n            yield* reduced_1.unreduced(complete(y.deref()));\n            return;\n        }\n        if (y.length) {\n            yield* y;\n        }\n    }\n    yield* reduced_1.unreduced(complete([]));\n}\nexports.iterator = iterator;\n/**\n * Optimized version of `iterator()` for transducers which are\n * guaranteed to:\n *\n * 1) Only produce none or a single result per input\n * 2) Do not require a `completion` reduction step\n *\n * @param xform\n * @param xs\n */\nfunction* iterator1(xform, xs) {\n    const reduce = xform([null, null, (_, x) => x])[2];\n    for (let x of xs) {\n        let y = reduce(api_1.SEMAPHORE, x);\n        if (reduced_1.isReduced(y)) {\n            y = reduced_1.unreduced(y.deref());\n            if (y !== api_1.SEMAPHORE) {\n                yield y;\n            }\n            return;\n        }\n        if (y !== api_1.SEMAPHORE) {\n            yield y;\n        }\n    }\n}\nexports.iterator1 = iterator1;\n/**\n * Helper function used by various transducers to wrap themselves as\n * transforming iterators. Delegates to `iterator1()` by default.\n *\n * @param xform\n * @param args\n * @param impl\n */\nexports.$iter = (xform, args, impl = iterator1) => {\n    const n = args.length - 1;\n    return is_iterable_1.isIterable(args[n]) ?\n        args.length > 1 ?\n            impl(xform.apply(null, args.slice(0, n)), args[n]) :\n            impl(xform(), args[0]) :\n        undefined;\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Reducer composition helper. Takes existing reducer `rfn` (a 3-tuple)\n * and a reducing function `fn`. Returns a new reducer tuple of this\n * form:\n *\n * ```\n * [rfn[0], rfn[1], fn]\n * ```\n *\n * `rfn[2]` reduces values of type `B` into an accumulator of type `A`.\n * `fn` accepts values of type `C` and produces interim results of type\n * `B`, which are then (possibly) passed to the \"inner\" `rfn[2]`\n * function. Therefore the resulting reducer takes inputs of `C` and an\n * accumulator of type `A`.\n *\n * It is assumed that `fn` internally calls `rfn[2]` to pass its own\n * results for further processing by the nested reducer `rfn`.\n *\n * @param rfn\n * @param fn\n */\nfunction compR(rfn, fn) {\n    return [rfn[0], rfn[1], fn];\n}\nexports.compR = compR;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst compr_1 = require(\"../func/compr\");\nconst iterator_1 = require(\"../iterator\");\nfunction map(fn, src) {\n    return src ?\n        iterator_1.iterator1(map(fn), src) :\n        (rfn) => {\n            const r = rfn[2];\n            return compr_1.compR(rfn, (acc, x) => r(acc, fn(x)));\n        };\n}\nexports.map = map;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst illegal_arity_1 = require(\"@thi.ng/errors/illegal-arity\");\nconst reduce_1 = require(\"./reduce\");\nconst map_1 = require(\"./xform/map\");\nfunction transduce(...args) {\n    let acc, xs;\n    switch (args.length) {\n        case 4:\n            xs = args[3];\n            acc = args[2];\n            break;\n        case 3:\n            xs = args[2];\n            break;\n        case 2:\n            return map_1.map((x) => transduce(args[0], args[1], x));\n        default:\n            illegal_arity_1.illegalArity(args.length);\n    }\n    return reduce_1.reduce(args[0](args[1]), acc, xs);\n}\nexports.transduce = transduce;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst transduce_1 = require(\"./transduce\");\nconst nop = () => { };\nfunction run(tx, ...args) {\n    if (args.length === 1) {\n        transduce_1.transduce(tx, [nop, nop, nop], args[0]);\n    }\n    else {\n        const fx = args[0];\n        transduce_1.transduce(tx, [nop, nop, (_, x) => fx(x)], args[1]);\n    }\n}\nexports.run = run;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst reduced_1 = require(\"./reduced\");\nconst push_1 = require(\"./rfn/push\");\n/**\n * Single-step transducer execution wrapper.\n * Returns array if transducer produces multiple results\n * and undefined if there was no output. Else returns single\n * result value.\n *\n * Likewise, once a transducer has produced a final / reduced\n * value, all further invocations of the stepper function will\n * return undefined.\n *\n * ```\n * // single result\n * step(map(x => x * 10))(1);\n * // 10\n *\n * // multiple results\n * step(mapcat(x => [x, x + 1, x + 2]))(1)\n * // [ 1, 2, 3 ]\n *\n * // no result\n * f = step(filter(even))\n * f(1); // undefined\n * f(2); // 2\n *\n * // reduced value termination\n * f = step(take(2));\n * f(1); // 1\n * f(1); // 1\n * f(1); // undefined\n * f(1); // undefined\n * ```\n *\n * @param tx\n */\nfunction step(tx) {\n    const [_, complete, reduce] = tx(push_1.push());\n    _;\n    let done = false;\n    return (x) => {\n        if (!done) {\n            let acc = reduce([], x);\n            done = reduced_1.isReduced(acc);\n            if (done) {\n                acc = complete(acc.deref());\n            }\n            return acc.length === 1 ?\n                acc[0] :\n                acc.length > 0 ?\n                    acc :\n                    undefined;\n        }\n    };\n}\nexports.step = step;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst reduce_1 = require(\"../reduce\");\nfunction add(...args) {\n    const res = reduce_1.$$reduce(add, args);\n    if (res !== undefined) {\n        return res;\n    }\n    const init = args[0] || 0;\n    return reduce_1.reducer(() => init, (acc, x) => acc + x);\n}\nexports.add = add;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst reduce_1 = require(\"../reduce\");\nfunction assocMap(xs) {\n    return xs ?\n        reduce_1.reduce(assocMap(), xs) :\n        reduce_1.reducer(() => new Map(), (acc, [k, v]) => acc.set(k, v));\n}\nexports.assocMap = assocMap;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst reduce_1 = require(\"../reduce\");\nfunction assocObj(xs) {\n    return xs ?\n        reduce_1.reduce(assocObj(), xs) :\n        reduce_1.reducer(() => new Object(), (acc, [k, v]) => (acc[k] = v, acc));\n}\nexports.assocObj = assocObj;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst reduce_1 = require(\"../reduce\");\nfunction conj(xs) {\n    return xs ?\n        reduce_1.reduce(conj(), xs) :\n        reduce_1.reducer(() => new Set(), (acc, x) => acc.add(x));\n}\nexports.conj = conj;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst reduce_1 = require(\"../reduce\");\nfunction count(...args) {\n    const res = reduce_1.$$reduce(count, args);\n    if (res !== undefined) {\n        return res;\n    }\n    let offset = args[0] || 0;\n    let step = args[1] || 1;\n    return reduce_1.reducer(() => offset, (acc, _) => acc + step);\n}\nexports.count = count;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst reduce_1 = require(\"../reduce\");\nfunction div(init, xs) {\n    return xs ?\n        reduce_1.reduce(div(init), xs) :\n        reduce_1.reducer(() => init, (acc, x) => acc / x);\n}\nexports.div = div;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst reduce_1 = require(\"../reduce\");\nconst reduced_1 = require(\"../reduced\");\nfunction every(...args) {\n    const res = reduce_1.$$reduce(every, args);\n    if (res !== undefined) {\n        return res;\n    }\n    const pred = args[0];\n    return reduce_1.reducer(() => true, pred ?\n        (acc, x) => (pred(x) ? acc : reduced_1.reduced(false)) :\n        (acc, x) => (x ? acc : reduced_1.reduced(false)));\n}\nexports.every = every;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst reduce_1 = require(\"../reduce\");\nfunction fill(...args) {\n    const res = reduce_1.$$reduce(fill, args);\n    if (res !== undefined) {\n        return res;\n    }\n    let start = args[0] || 0;\n    return reduce_1.reducer(() => [], (acc, x) => (acc[start++] = x, acc));\n}\nexports.fill = fill;\nfunction fillN(...args) {\n    return fill(...args);\n}\nexports.fillN = fillN;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction identity(x) { return x; }\nexports.identity = identity;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst identity_1 = require(\"../func/identity\");\nconst reduce_1 = require(\"../reduce\");\nconst push_1 = require(\"./push\");\nfunction groupByMap(...args) {\n    const res = reduce_1.$$reduce(groupByMap, args);\n    if (res !== undefined) {\n        return res;\n    }\n    const opts = Object.assign({ key: identity_1.identity, group: push_1.push() }, args[0]);\n    const [init, _, reduce] = opts.group;\n    _;\n    return reduce_1.reducer(() => new Map(), (acc, x) => {\n        const k = opts.key(x);\n        return acc.set(k, acc.has(k) ?\n            reduce(acc.get(k), x) :\n            reduce(init(), x));\n    });\n}\nexports.groupByMap = groupByMap;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst identity_1 = require(\"../func/identity\");\nconst reduce_1 = require(\"../reduce\");\nconst count_1 = require(\"./count\");\nconst group_by_map_1 = require(\"./group-by-map\");\nfunction frequencies(...args) {\n    return reduce_1.$$reduce(frequencies, args) ||\n        group_by_map_1.groupByMap({ key: args[0] || identity_1.identity, group: count_1.count() });\n}\nexports.frequencies = frequencies;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst identity_1 = require(\"../func/identity\");\nconst reduce_1 = require(\"../reduce\");\nconst push_1 = require(\"./push\");\nfunction groupByObj(...args) {\n    const res = reduce_1.$$reduce(groupByObj, args);\n    if (res) {\n        return res;\n    }\n    const _opts = Object.assign({ key: identity_1.identity, group: push_1.push() }, args[0]);\n    const [_init, _, _reduce] = _opts.group;\n    _;\n    return reduce_1.reducer(() => ({}), (acc, x) => {\n        const k = _opts.key(x);\n        acc[k] = acc[k] ?\n            _reduce(acc[k], x) :\n            _reduce(_init(), x);\n        return acc;\n    });\n}\nexports.groupByObj = groupByObj;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst group_by_obj_1 = require(\"./group-by-obj\");\nconst push_1 = require(\"./push\");\nfunction branchPred(key, b, l, r) {\n    return (x) => key(x) & b ? r : l;\n}\n/**\n * Creates a bottom-up, unbalanced binary tree of desired depth and\n * choice of data structures. Any value can be indexed, as long as a\n * numeric representation (key) can be obtained. This numeric key is\n * produced by the supplied `key` function. IMPORTANT: the returned\n * values MUST be unsigned and less than the provided bit length (i.e.\n * `0 .. (2^bits) - 1` range).\n *\n * By default the tree is constructed using plain objects for branches,\n * with left branches stored as \"l\" and right ones as \"r\". The original\n * values are stored at the lowest tree level using a customizable\n * nested reducer. By default leaves are collected in arrays (using the\n * `push()` reducer), but any suitable reducer can be used (e.g.\n * `conj()` to collect values into sets).\n *\n * Index by lowest 4-bits of ID value:\n *\n * ```\n * tree = reduce(\n *   groupBinary(4, x => x.id & 0xf),\n *   [{id: 3}, {id: 8}, {id: 15}, {id: 0}]\n * )\n *\n * tree.l.l.l.l\n * // [ { id: 0 } ]\n * tree.r.r.r.r\n * // [ { id: 15 } ]\n * tree.l.l.r.r\n * // [ { id: 3 } ]\n * ```\n *\n * Collecting as array:\n *\n * ```\n * tree = reduce(\n *   groupBinary(4, identity, ()=>[], push(), 0, 1),\n *   [1,2,3,4,5,6,7]\n * )\n *\n * tree[0][1][0][1] // 0101 == 5 in binary\n * // [ 5 ]\n *\n * tree[0][1][1]    // 011* == branch\n * // [ [ 6 ], [ 7 ] ]\n * ```\n *\n * Using `frequencies` as leaf reducer:\n *\n * ```\n * tree = reduce(\n *   groupBinary(3, (x: string) => x.length, null, frequencies()),\n *   \"aa bbb dddd ccccc bbb eeee fff\".split(\" \")\n * )\n * // [ [ undefined,\n * //     [ Map { 'aa' => 1 },\n * //       Map { 'bbb' => 2, 'fff' => 1 } ] ],\n * //   [ [ Map { 'dddd' => 1, 'eeee' => 1 },\n * //       Map { 'ccccc' => 1 } ] ] ]\n *\n * tree[0][1][1]\n * // Map { 'bbb' => 2, 'fff' => 1 }\n * ```\n *\n * @param bits index range (always from 0)\n * @param key key function\n * @param branch function to create a new branch container (object or\n * array)\n * @param leaf reducer for leaf collection\n * @param left key for storing left branches (e.g. `0` for arrays)\n * @param right key for storing right branches (e.g. `1` for arrays)\n */\nfunction groupBinary(bits, key, branch, leaf, left = \"l\", right = \"r\") {\n    const init = branch || (() => ({}));\n    let rfn = group_by_obj_1.groupByObj({\n        key: branchPred(key, 1, left, right),\n        group: leaf || push_1.push(),\n    });\n    for (let i = 2, maxIndex = 1 << bits; i < maxIndex; i <<= 1) {\n        rfn = group_by_obj_1.groupByObj({ key: branchPred(key, i, left, right), group: [init, rfn[1], rfn[2]] });\n    }\n    return [init, rfn[1], rfn[2]];\n}\nexports.groupBinary = groupBinary;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst reduce_1 = require(\"../reduce\");\nfunction last(xs) {\n    return xs ?\n        reduce_1.reduce(last(), xs) :\n        reduce_1.reducer(() => undefined, (_, x) => x);\n}\nexports.last = last;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction compare(a, b) {\n    if (a === b) {\n        return 0;\n    }\n    if (a == null) {\n        return b == null ? 0 : -1;\n    }\n    if (b == null) {\n        return a == null ? 0 : 1;\n    }\n    if (typeof a.compare === \"function\") {\n        return a.compare(b);\n    }\n    if (typeof b.compare === \"function\") {\n        return -b.compare(a);\n    }\n    return a < b ? -1 : a > b ? 1 : 0;\n}\nexports.compare = compare;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst compare_1 = require(\"@thi.ng/compare\");\nconst reduce_1 = require(\"../reduce\");\nfunction maxCompare(...args) {\n    const res = reduce_1.$$reduce(maxCompare, args);\n    if (res !== undefined) {\n        return res;\n    }\n    const init = args[0];\n    const cmp = args[1] || compare_1.compare;\n    return reduce_1.reducer(init, (acc, x) => cmp(acc, x) >= 0 ? acc : x);\n}\nexports.maxCompare = maxCompare;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst reduce_1 = require(\"../reduce\");\nfunction max(xs) {\n    return xs ?\n        reduce_1.reduce(max(), xs) :\n        reduce_1.reducer(() => -Infinity, (acc, x) => Math.max(acc, x));\n}\nexports.max = max;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst reduce_1 = require(\"../reduce\");\nfunction mean(xs) {\n    let n = 0;\n    return xs ?\n        reduce_1.reduce(mean(), xs) :\n        [\n            () => 0,\n            (acc) => acc / n,\n            (acc, x) => (n++, acc + x),\n        ];\n}\nexports.mean = mean;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst compare_1 = require(\"@thi.ng/compare\");\nconst reduce_1 = require(\"../reduce\");\nfunction minCompare(...args) {\n    const res = reduce_1.$$reduce(minCompare, args);\n    if (res !== undefined) {\n        return res;\n    }\n    const init = args[0];\n    const cmp = args[1] || compare_1.compare;\n    return reduce_1.reducer(init, (acc, x) => cmp(acc, x) <= 0 ? acc : x);\n}\nexports.minCompare = minCompare;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst reduce_1 = require(\"../reduce\");\nfunction min(xs) {\n    return xs ?\n        reduce_1.reduce(min(), xs) :\n        reduce_1.reducer(() => Infinity, (acc, x) => Math.min(acc, x));\n}\nexports.min = min;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst reduce_1 = require(\"../reduce\");\nfunction mul(...args) {\n    const res = reduce_1.$$reduce(mul, args);\n    if (res !== undefined) {\n        return res;\n    }\n    const init = args[0] || 1;\n    return reduce_1.reducer(() => init, (acc, x) => acc * x);\n}\nexports.mul = mul;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst reduce_1 = require(\"../reduce\");\nfunction pushCopy() {\n    return reduce_1.reducer(() => [], (acc, x) => ((acc = acc.slice()).push(x), acc));\n}\nexports.pushCopy = pushCopy;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst reduce_1 = require(\"../reduce\");\nconst reduced_1 = require(\"../reduced\");\nfunction reductions(rfn, xs) {\n    const [init, complete, _reduce] = rfn;\n    return xs ?\n        reduce_1.reduce(reductions(rfn), xs) :\n        [\n            () => [init()],\n            (acc) => (acc[acc.length - 1] = complete(acc[acc.length - 1]), acc),\n            (acc, x) => {\n                const res = _reduce(acc[acc.length - 1], x);\n                if (reduced_1.isReduced(res)) {\n                    acc.push(res.deref());\n                    return reduced_1.reduced(acc);\n                }\n                acc.push(res);\n                return acc;\n            }\n        ];\n}\nexports.reductions = reductions;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst reduce_1 = require(\"../reduce\");\nconst reduced_1 = require(\"../reduced\");\nfunction some(...args) {\n    const res = reduce_1.$$reduce(some, args);\n    if (res !== undefined) {\n        return res;\n    }\n    const pred = args[0];\n    return reduce_1.reducer(() => false, pred ?\n        (acc, x) => (pred(x) ? reduced_1.reduced(true) : acc) :\n        (acc, x) => (x ? reduced_1.reduced(true) : acc));\n}\nexports.some = some;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst reduce_1 = require(\"../reduce\");\nfunction str(sep, xs) {\n    sep = sep || \"\";\n    let first = true;\n    return xs ?\n        [...xs].join(sep) :\n        reduce_1.reducer(() => \"\", (acc, x) => (acc = first ? acc + x : acc + sep + x, first = false, acc));\n}\nexports.str = str;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst reduce_1 = require(\"../reduce\");\nfunction sub(...args) {\n    const res = reduce_1.$$reduce(sub, args);\n    if (res !== undefined) {\n        return res;\n    }\n    const init = args[0] || 0;\n    return reduce_1.reducer(() => init, (acc, x) => acc - x);\n}\nexports.sub = sub;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst compr_1 = require(\"../func/compr\");\nconst iterator_1 = require(\"../iterator\");\nconst reduced_1 = require(\"../reduced\");\nconst B64_CHARS = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\nconst B64_SAFE = B64_CHARS.substr(0, 62) + \"-_\";\nfunction base64Decode(src) {\n    return src ?\n        iterator_1.iterator1(base64Decode(), src) :\n        (rfn) => {\n            const r = rfn[2];\n            let bc = 0, bs = 0;\n            return compr_1.compR(rfn, (acc, x) => {\n                switch (x) {\n                    case \"-\":\n                        x = \"+\";\n                        break;\n                    case \"_\":\n                        x = \"/\";\n                        break;\n                    case \"=\":\n                        return reduced_1.reduced(acc);\n                    default:\n                }\n                let y = B64_CHARS.indexOf(x);\n                bs = bc & 3 ? (bs << 6) + y : y;\n                if (bc++ & 3) {\n                    acc = r(acc, 255 & bs >> (-2 * bc & 6));\n                }\n                return acc;\n            });\n        };\n}\nexports.base64Decode = base64Decode;\nfunction base64Encode(...args) {\n    const iter = iterator_1.$iter(base64Encode, args, iterator_1.iterator);\n    if (iter) {\n        return [...iter].join(\"\");\n    }\n    return (([init, complete, reduce]) => {\n        let state = 0;\n        let b;\n        const opts = Object.assign({ safe: false, buffer: 1024 }, args[0]);\n        const chars = opts.safe ? B64_SAFE : B64_CHARS;\n        const buf = [];\n        return [\n            init,\n            (acc) => {\n                switch (state) {\n                    case 1:\n                        buf.push(chars[b >> 18 & 0x3f], chars[b >> 12 & 0x3f], \"=\", \"=\");\n                        break;\n                    case 2:\n                        buf.push(chars[b >> 18 & 0x3f], chars[b >> 12 & 0x3f], chars[b >> 6 & 0x3f], \"=\");\n                        break;\n                    default:\n                }\n                while (buf.length && !reduced_1.isReduced(acc)) {\n                    acc = reduce(acc, buf.shift());\n                }\n                return complete(acc);\n            },\n            (acc, x) => {\n                switch (state) {\n                    case 0:\n                        state = 1;\n                        b = x << 16;\n                        break;\n                    case 1:\n                        state = 2;\n                        b += x << 8;\n                        break;\n                    default:\n                        state = 0;\n                        b += x;\n                        buf.push(chars[b >> 18 & 0x3f], chars[b >> 12 & 0x3f], chars[b >> 6 & 0x3f], chars[b & 0x3f]);\n                        if (buf.length >= opts.buffer) {\n                            for (let i = 0, n = buf.length; i < n && !reduced_1.isReduced(acc); i++) {\n                                acc = reduce(acc, buf[i]);\n                            }\n                            buf.length = 0;\n                        }\n                }\n                return acc;\n            }\n        ];\n    });\n}\nexports.base64Encode = base64Encode;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst compr_1 = require(\"../func/compr\");\nconst iterator_1 = require(\"../iterator\");\nfunction benchmark(src) {\n    return src ?\n        iterator_1.iterator1(benchmark(), src) :\n        (rfn) => {\n            const r = rfn[2];\n            let prev = Date.now();\n            return compr_1.compR(rfn, (acc, _) => {\n                const t = Date.now();\n                const x = t - prev;\n                prev = t;\n                return r(acc, x);\n            });\n        };\n}\nexports.benchmark = benchmark;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst compr_1 = require(\"../func/compr\");\nconst iterator_1 = require(\"../iterator\");\nconst reduced_1 = require(\"../reduced\");\nfunction bits(...args) {\n    return iterator_1.$iter(bits, args, iterator_1.iterator) ||\n        ((rfn) => {\n            const reduce = rfn[2];\n            const size = (args[0] || 8) - 1;\n            const msb = args[1] !== false;\n            return compr_1.compR(rfn, msb ?\n                (acc, x) => {\n                    for (let i = size; i >= 0 && !reduced_1.isReduced(acc); i--) {\n                        acc = reduce(acc, (x >>> i) & 1);\n                    }\n                    return acc;\n                } :\n                (acc, x) => {\n                    for (let i = 0; i <= size && !reduced_1.isReduced(acc); i++) {\n                        acc = reduce(acc, (x >>> i) & 1);\n                    }\n                    return acc;\n                });\n        });\n}\nexports.bits = bits;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst compr_1 = require(\"../func/compr\");\nconst reduced_1 = require(\"../reduced\");\n/**\n * Transducer to concatenate iterable values.\n */\nfunction cat() {\n    return (rfn) => {\n        const r = rfn[2];\n        return compr_1.compR(rfn, (acc, x) => {\n            if (x) {\n                for (let y of x) {\n                    acc = r(acc, y);\n                    if (reduced_1.isReduced(acc)) {\n                        break;\n                    }\n                }\n            }\n            return acc;\n        });\n    };\n}\nexports.cat = cat;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst reduced_1 = require(\"../reduced\");\nfunction range(from, to, step) {\n    return new Range(from, to, step);\n}\nexports.range = range;\n;\n/**\n * Simple class wrapper around given range interval and implementing\n * `Iterable` and `IReducible` interfaces, the latter is used to\n * accelerate use with `reduce`.\n */\nclass Range {\n    constructor(from, to, step) {\n        if (from === undefined) {\n            from = 0;\n            to = Infinity;\n        }\n        else if (to === undefined) {\n            to = from;\n            from = 0;\n        }\n        step = step === undefined ? (from < to ? 1 : -1) : step;\n        this.from = from;\n        this.to = to;\n        this.step = step;\n    }\n    *[Symbol.iterator]() {\n        const step = this.step;\n        const to = this.to;\n        let from = this.from;\n        if (step > 0) {\n            while (from < to) {\n                yield from;\n                from += step;\n            }\n        }\n        else if (step < 0) {\n            while (from > to) {\n                yield from;\n                from += step;\n            }\n        }\n    }\n    $reduce(rfn, acc) {\n        const step = this.step;\n        if (step > 0) {\n            for (let i = this.from, n = this.to; i < n && !reduced_1.isReduced(acc); i += step) {\n                acc = rfn(acc, i);\n            }\n        }\n        else {\n            for (let i = this.from, n = this.to; i > n && !reduced_1.isReduced(acc); i += step) {\n                acc = rfn(acc, i);\n            }\n        }\n        return acc;\n    }\n}\nexports.Range = Range;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst illegal_arity_1 = require(\"@thi.ng/errors/illegal-arity\");\nconst range_1 = require(\"./range\");\nfunction* range2d(...args) {\n    let fromX, toX, fromY, toY, stepX, stepY;\n    switch (args.length) {\n        case 6:\n            stepX = args[4];\n            stepY = args[5];\n        case 4:\n            [fromX, toX, fromY, toY] = args;\n            break;\n        case 2:\n            [toX, toY] = args;\n            fromX = fromY = 0;\n            break;\n        default:\n            illegal_arity_1.illegalArity(args.length);\n    }\n    const rx = range_1.range(fromX, toX, stepX);\n    for (let y of range_1.range(fromY, toY, stepY)) {\n        for (let x of rx) {\n            yield [x, y];\n        }\n    }\n}\nexports.range2d = range2d;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction* tuples(...src) {\n    const iters = src.map((s) => s[Symbol.iterator]());\n    while (true) {\n        const tuple = [];\n        for (let i of iters) {\n            let v = i.next();\n            if (v.done) {\n                return;\n            }\n            tuple.push(v.value);\n        }\n        yield tuple;\n    }\n}\nexports.tuples = tuples;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst illegal_arguments_1 = require(\"@thi.ng/errors/illegal-arguments\");\nconst range2d_1 = require(\"../iter/range2d\");\nconst tuples_1 = require(\"../iter/tuples\");\nconst iterator_1 = require(\"../iterator\");\nconst add_1 = require(\"../rfn/add\");\nconst transduce_1 = require(\"../transduce\");\nconst map_1 = require(\"./map\");\nexports.buildKernel2d = (weights, w, h) => {\n    const w2 = w >> 1;\n    const h2 = h >> 1;\n    return [...tuples_1.tuples(weights, range2d_1.range2d(-w2, w2 + 1, -h2, h2 + 1))];\n};\nconst kernelLookup2d = (src, x, y, width, height, wrap, border) => wrap ?\n    ([w, [ox, oy]]) => {\n        const xx = x < -ox ? width + ox : x >= width - ox ? ox - 1 : x + ox;\n        const yy = y < -oy ? height + oy : y >= height - oy ? oy - 1 : y + oy;\n        return w * src[yy * width + xx];\n    } :\n    ([w, [ox, oy]]) => {\n        return (x < -ox || y < -oy || x >= width - ox || y >= height - oy) ?\n            border :\n            w * src[(y + oy) * width + x + ox];\n    };\nfunction convolve2d(opts, _src) {\n    if (_src) {\n        return iterator_1.iterator1(convolve2d(opts), _src);\n    }\n    const { src, width, height } = opts;\n    const wrap = opts.wrap !== false;\n    const border = opts.border || 0;\n    let kernel = opts.kernel;\n    if (!kernel) {\n        if (!(opts.weights && opts.kwidth && opts.kheight)) {\n            illegal_arguments_1.illegalArgs(`no kernel or kernel config`);\n        }\n        kernel = exports.buildKernel2d(opts.weights, opts.kwidth, opts.kheight);\n    }\n    return map_1.map((p) => transduce_1.transduce(map_1.map(kernelLookup2d(src, p[0], p[1], width, height, wrap, border)), add_1.add(), kernel));\n}\nexports.convolve2d = convolve2d;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst api_1 = require(\"@thi.ng/api/api\");\nconst compr_1 = require(\"../func/compr\");\nconst iterator_1 = require(\"../iterator\");\nfunction dedupe(...args) {\n    return iterator_1.$iter(dedupe, args) ||\n        ((rfn) => {\n            const r = rfn[2];\n            const equiv = args[0];\n            let prev = api_1.SEMAPHORE;\n            return compr_1.compR(rfn, equiv ?\n                (acc, x) => {\n                    acc = equiv(prev, x) ? acc : r(acc, x);\n                    prev = x;\n                    return acc;\n                } :\n                (acc, x) => {\n                    acc = prev === x ? acc : r(acc, x);\n                    prev = x;\n                    return acc;\n                });\n        });\n}\nexports.dedupe = dedupe;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction delay(x, t) {\n    return new Promise((resolve) => setTimeout(() => resolve(x), t));\n}\nexports.delay = delay;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst delay_1 = require(\"../func/delay\");\nconst map_1 = require(\"./map\");\n/**\n * Yields transducer which wraps incoming values in promises, which\n * resolve after specified delay time (in ms).\n *\n * **Only to be used in async contexts and NOT with `transduce`\n * directly.**\n *\n * @param t\n */\nfunction delayed(t) {\n    return map_1.map((x) => delay_1.delay(x, t));\n}\nexports.delayed = delayed;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst compr_1 = require(\"../func/compr\");\nconst iterator_1 = require(\"../iterator\");\nfunction distinct(...args) {\n    return iterator_1.$iter(distinct, args) ||\n        ((rfn) => {\n            const r = rfn[2];\n            const opts = (args[0] || {});\n            const key = opts.key;\n            const seen = (opts.cache || (() => new Set()))();\n            return compr_1.compR(rfn, key ?\n                (acc, x) => {\n                    const k = key(x);\n                    return !seen.has(k) ? (seen.add(k), r(acc, x)) : acc;\n                } :\n                (acc, x) => !seen.has(x) ? (seen.add(x), r(acc, x)) : acc);\n        });\n}\nexports.distinct = distinct;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst compr_1 = require(\"../func/compr\");\nconst iterator_1 = require(\"../iterator\");\nfunction throttle(pred, src) {\n    return src ?\n        iterator_1.iterator1(throttle(pred), src) :\n        (rfn) => {\n            const r = rfn[2];\n            const _pred = pred();\n            return compr_1.compR(rfn, (acc, x) => _pred(x) ? r(acc, x) : acc);\n        };\n}\nexports.throttle = throttle;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst throttle_1 = require(\"./throttle\");\nconst iterator_1 = require(\"../iterator\");\nfunction dropNth(n, src) {\n    if (src) {\n        return iterator_1.iterator1(dropNth(n), src);\n    }\n    n = Math.max(0, n - 1);\n    return throttle_1.throttle(() => {\n        let skip = n;\n        return () => skip-- > 0 ? true : (skip = n, false);\n    });\n}\nexports.dropNth = dropNth;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst compr_1 = require(\"../func/compr\");\nconst iterator_1 = require(\"../iterator\");\nfunction dropWhile(...args) {\n    return iterator_1.$iter(dropWhile, args) ||\n        ((rfn) => {\n            const r = rfn[2];\n            const pred = args[0];\n            let ok = true;\n            return compr_1.compR(rfn, (acc, x) => (ok = ok && pred(x)) ? acc : r(acc, x));\n        });\n}\nexports.dropWhile = dropWhile;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst compr_1 = require(\"../func/compr\");\nconst iterator_1 = require(\"../iterator\");\nfunction drop(n, src) {\n    return src ?\n        iterator_1.iterator1(drop(n), src) :\n        (rfn) => {\n            const r = rfn[2];\n            let m = n;\n            return compr_1.compR(rfn, (acc, x) => m > 0 ? (m--, acc) : r(acc, x));\n        };\n}\nexports.drop = drop;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst compr_1 = require(\"../func/compr\");\nconst iterator_1 = require(\"../iterator\");\nconst reduced_1 = require(\"../reduced\");\nfunction duplicate(n = 1, src) {\n    return src ?\n        iterator_1.iterator(duplicate(n), src) :\n        (rfn) => {\n            const r = rfn[2];\n            return compr_1.compR(rfn, (acc, x) => {\n                for (let i = n; i >= 0 && !reduced_1.isReduced(acc); i--) {\n                    acc = r(acc, x);\n                }\n                return acc;\n            });\n        };\n}\nexports.duplicate = duplicate;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst iterator_1 = require(\"../iterator\");\nconst compr_1 = require(\"../func/compr\");\nfunction filter(pred, src) {\n    return src ?\n        iterator_1.iterator1(filter(pred), src) :\n        (rfn) => {\n            const r = rfn[2];\n            return compr_1.compR(rfn, (acc, x) => pred(x) ? r(acc, x) : acc);\n        };\n}\nexports.filter = filter;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst equiv_1 = require(\"@thi.ng/equiv\");\n/**\n * Performs a fuzzy search of `query` in `domain` and returns `true` if\n * successful. The optional `eq` predicate can be used to customize item\n * equality checking. Uses @thi.ng/equiv by default.\n *\n * Related transducer: `filterFuzzy()` (/xform/filter-fuzzy.ts)\n *\n * Adapted and generalized from:\n * https://github.com/bevacqua/fufuzzyzzysearch (MIT)\n *\n * @param domain\n * @param query\n * @param eq\n */\nfunction fuzzyMatch(domain, query, eq = equiv_1.equiv) {\n    const nd = domain.length;\n    const nq = query.length;\n    if (nq > nd) {\n        return false;\n    }\n    if (nq === nd) {\n        return eq(query, domain);\n    }\n    next: for (let i = 0, j = 0; i < nq; i++) {\n        const q = query[i];\n        while (j < nd) {\n            if (eq(domain[j++], q)) {\n                continue next;\n            }\n        }\n        return false;\n    }\n    return true;\n}\nexports.fuzzyMatch = fuzzyMatch;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst fuzzy_match_1 = require(\"../func/fuzzy-match\");\nconst iterator_1 = require(\"../iterator\");\nconst filter_1 = require(\"./filter\");\nfunction filterFuzzy(...args) {\n    const iter = args.length > 1 && iterator_1.$iter(filterFuzzy, args);\n    if (iter) {\n        return iter;\n    }\n    const query = args[0];\n    const { key, equiv } = (args[1] || {});\n    return filter_1.filter((x) => fuzzy_match_1.fuzzyMatch(key != null ? key(x) : x, query, equiv));\n}\nexports.filterFuzzy = filterFuzzy;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst compr_1 = require(\"../func/compr\");\nconst iterator_1 = require(\"../iterator\");\nconst reduced_1 = require(\"../reduced\");\nfunction flattenWith(fn, src) {\n    return src ?\n        iterator_1.iterator(flattenWith(fn), src) :\n        (rfn) => {\n            const reduce = rfn[2];\n            const flatten = (acc, x) => {\n                const xx = fn(x);\n                if (xx) {\n                    for (let y of xx) {\n                        acc = flatten(acc, y);\n                        if (reduced_1.isReduced(acc)) {\n                            break;\n                        }\n                    }\n                    return acc;\n                }\n                return reduce(acc, x);\n            };\n            return compr_1.compR(rfn, flatten);\n        };\n}\nexports.flattenWith = flattenWith;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst flatten_with_1 = require(\"./flatten-with\");\nfunction flatten(src) {\n    return flatten_with_1.flattenWith((x) => x != null && x[Symbol.iterator] && typeof x !== \"string\" ? x : undefined, src);\n}\nexports.flatten = flatten;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction memoizeJ(fn, cache) {\n    !cache && (cache = {});\n    return (...args) => {\n        const key = JSON.stringify(args);\n        if (key !== undefined) {\n            return key in cache ?\n                cache[key] :\n                (cache[key] = fn.apply(null, args));\n        }\n        return fn.apply(null, args);\n    };\n}\nexports.memoizeJ = memoizeJ;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst memoizej_1 = require(\"@thi.ng/memoize/memoizej\");\n/**\n * @param ch character\n * @param n repeat count\n */\nexports.repeat = memoizej_1.memoizeJ((ch, n) => ch.repeat(n));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst memoizej_1 = require(\"@thi.ng/memoize/memoizej\");\nconst repeat_1 = require(\"./repeat\");\n/**\n * Returns a `Stringer` which formats given numbers to `radix`, `len`\n * and with optional prefix (not included in `len`).\n *\n * @param radix\n * @param len\n * @param prefix\n */\nexports.radix = memoizej_1.memoizeJ((radix, n, prefix = \"\") => {\n    const buf = repeat_1.repeat(\"0\", n);\n    return (x) => {\n        x = (x >>> 0).toString(radix);\n        return prefix + (x.length < n ? buf.substr(x.length) + x : x);\n    };\n});\n/**\n * 8bit binary conversion preset.\n */\nexports.B8 = exports.radix(2, 8);\n/**\n * 8bit hex conversion preset.\n * Assumes unsigned inputs.\n */\nexports.U8 = exports.radix(16, 2);\n/**\n * 16bit hex conversion preset.\n * Assumes unsigned inputs.\n */\nexports.U16 = exports.radix(16, 4);\n/**\n * 24bit hex conversion preset.\n * Assumes unsigned inputs.\n */\nexports.U24 = exports.radix(16, 6);\n/**\n * 32bit hex conversion preset.\n * Assumes unsigned inputs.\n */\nexports.U32 = exports.radix(16, 8);\n/**\n * 64bit hex conversion preset (2x 32bit ints)\n * Assumes unsigned inputs.\n */\nexports.U64 = (hi, lo) => exports.U32(hi) + exports.U32(lo);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst illegal_arity_1 = require(\"@thi.ng/errors/illegal-arity\");\nfunction comp(...fns) {\n    let [a, b, c, d, e, f, g, h, i, j] = fns;\n    switch (fns.length) {\n        case 0:\n            illegal_arity_1.illegalArity(0);\n        case 1:\n            return a;\n        case 2:\n            return (...xs) => a(b(...xs));\n        case 3:\n            return (...xs) => a(b(c(...xs)));\n        case 4:\n            return (...xs) => a(b(c(d(...xs))));\n        case 5:\n            return (...xs) => a(b(c(d(e(...xs)))));\n        case 6:\n            return (...xs) => a(b(c(d(e(f(...xs))))));\n        case 7:\n            return (...xs) => a(b(c(d(e(f(g(...xs)))))));\n        case 8:\n            return (...xs) => a(b(c(d(e(f(g(h(...xs))))))));\n        case 9:\n            return (...xs) => a(b(c(d(e(f(g(h(i(...xs)))))))));\n        case 10:\n        default:\n            const fn = (...xs) => a(b(c(d(e(f(g(h(i(j(...xs))))))))));\n            return fns.length === 10 ? fn : compI(fn, ...fns.slice(10));\n    }\n}\nexports.comp = comp;\nfunction compI(...fns) {\n    return comp.apply(null, fns.reverse());\n}\nexports.compI = compI;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst comp_1 = require(\"@thi.ng/compose/comp\");\nfunction comp(...fns) {\n    return comp_1.comp.apply(null, fns);\n}\nexports.comp = comp;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction juxt(...fns) {\n    const [a, b, c, d, e, f, g, h] = fns;\n    switch (fns.length) {\n        case 1:\n            return (x) => [a(x)];\n        case 2:\n            return (x) => [a(x), b(x)];\n        case 3:\n            return (x) => [a(x), b(x), c(x)];\n        case 4:\n            return (x) => [a(x), b(x), c(x), d(x)];\n        case 5:\n            return (x) => [a(x), b(x), c(x), d(x), e(x)];\n        case 6:\n            return (x) => [a(x), b(x), c(x), d(x), e(x), f(x)];\n        case 7:\n            return (x) => [a(x), b(x), c(x), d(x), e(x), f(x), g(x)];\n        case 8:\n            return (x) => [a(x), b(x), c(x), d(x), e(x), f(x), g(x), h(x)];\n        default:\n            return (x) => {\n                let res = new Array(fns.length);\n                for (let i = fns.length - 1; i >= 0; i--) {\n                    res[i] = fns[i](x);\n                }\n                return res;\n            };\n    }\n}\nexports.juxt = juxt;\n","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"@thi.ng/compose/juxt\"));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst compr_1 = require(\"../func/compr\");\nconst iterator_1 = require(\"../iterator\");\nfunction mapIndexed(...args) {\n    return iterator_1.$iter(mapIndexed, args) ||\n        ((rfn) => {\n            const r = rfn[2];\n            const fn = args[0];\n            let i = args[1] || 0;\n            return compr_1.compR(rfn, (acc, x) => r(acc, fn(i++, x)));\n        });\n}\nexports.mapIndexed = mapIndexed;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst iterator_1 = require(\"../iterator\");\nconst reduced_1 = require(\"../reduced\");\nfunction padLast(n, fill, src) {\n    return src ?\n        iterator_1.iterator(padLast(n, fill), src) :\n        ([init, complete, reduce]) => {\n            let m = 0;\n            return [\n                init,\n                (acc) => {\n                    let rem = m % n;\n                    if (rem > 0) {\n                        while (++rem <= n && !reduced_1.isReduced(acc)) {\n                            acc = reduce(acc, fill);\n                        }\n                    }\n                    return complete(acc);\n                },\n                (acc, x) => (m++, reduce(acc, x))\n            ];\n        };\n}\nexports.padLast = padLast;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst iterator_1 = require(\"../iterator\");\nfunction partition(...args) {\n    const iter = iterator_1.$iter(partition, args, iterator_1.iterator);\n    if (iter) {\n        return iter;\n    }\n    let size = args[0], all, step;\n    if (typeof args[1] == \"number\") {\n        step = args[1];\n        all = args[2];\n    }\n    else {\n        step = size;\n        all = args[1];\n    }\n    return ([init, complete, reduce]) => {\n        let buf = [];\n        let skip = 0;\n        return [\n            init,\n            (acc) => {\n                if (all && buf.length > 0) {\n                    acc = reduce(acc, buf);\n                    buf = [];\n                }\n                return complete(acc);\n            },\n            (acc, x) => {\n                if (skip <= 0) {\n                    if (buf.length < size) {\n                        buf.push(x);\n                    }\n                    if (buf.length === size) {\n                        acc = reduce(acc, buf);\n                        buf = step < size ? buf.slice(step) : [];\n                        skip = step - size;\n                    }\n                }\n                else {\n                    skip--;\n                }\n                return acc;\n            }\n        ];\n    };\n}\nexports.partition = partition;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst radix_1 = require(\"@thi.ng/strings/radix\");\nconst comp_1 = require(\"../func/comp\");\nconst juxt_1 = require(\"../func/juxt\");\nconst iterator_1 = require(\"../iterator\");\nconst map_1 = require(\"./map\");\nconst map_indexed_1 = require(\"./map-indexed\");\nconst pad_last_1 = require(\"./pad-last\");\nconst partition_1 = require(\"./partition\");\nfunction hexDump(...args) {\n    const iter = iterator_1.$iter(hexDump, args);\n    if (iter) {\n        return iter;\n    }\n    const { cols, address } = Object.assign({ cols: 16, address: 0 }, args[0]);\n    return comp_1.comp(pad_last_1.padLast(cols, 0), map_1.map(juxt_1.juxt(radix_1.U8, (x) => x > 31 && x < 128 ? String.fromCharCode(x) : \".\")), partition_1.partition(cols, true), map_1.map(juxt_1.juxt((x) => x.map((y) => y[0]).join(\" \"), (x) => x.map((y) => y[1]).join(\"\"))), map_indexed_1.mapIndexed((i, [h, a]) => `${radix_1.U32(address + i * cols)} | ${h} | ${a}`));\n}\nexports.hexDump = hexDump;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst iterator_1 = require(\"../iterator\");\nconst map_indexed_1 = require(\"./map-indexed\");\nfunction indexed(...args) {\n    const iter = iterator_1.$iter(indexed, args);\n    if (iter) {\n        return iter;\n    }\n    const from = args[0] || 0;\n    return map_indexed_1.mapIndexed((i, x) => [from + i, x]);\n}\nexports.indexed = indexed;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst compr_1 = require(\"../func/compr\");\nconst iterator_1 = require(\"../iterator\");\nconst reduced_1 = require(\"../reduced\");\nfunction interleave(sep, src) {\n    return src ?\n        iterator_1.iterator(interleave(sep), src) :\n        (rfn) => {\n            const r = rfn[2];\n            const _sep = typeof sep === \"function\" ? sep : () => sep;\n            return compr_1.compR(rfn, (acc, x) => {\n                acc = r(acc, _sep());\n                return reduced_1.isReduced(acc) ? acc : r(acc, x);\n            });\n        };\n}\nexports.interleave = interleave;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst compr_1 = require(\"../func/compr\");\nconst iterator_1 = require(\"../iterator\");\nconst reduced_1 = require(\"../reduced\");\nfunction interpose(sep, src) {\n    return src ?\n        iterator_1.iterator(interpose(sep), src) :\n        (rfn) => {\n            const r = rfn[2];\n            const _sep = typeof sep === \"function\" ? sep : () => sep;\n            let first = true;\n            return compr_1.compR(rfn, (acc, x) => {\n                if (first) {\n                    first = false;\n                    return r(acc, x);\n                }\n                acc = r(acc, _sep());\n                return reduced_1.isReduced(acc) ? acc : r(acc, x);\n            });\n        };\n}\nexports.interpose = interpose;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst compr_1 = require(\"../func/compr\");\nconst identity_1 = require(\"../func/identity\");\nconst iterator_1 = require(\"../iterator\");\nfunction keep(...args) {\n    return iterator_1.$iter(keep, args) ||\n        ((rfn) => {\n            const r = rfn[2];\n            const pred = args[0] || identity_1.identity;\n            return compr_1.compR(rfn, (acc, x) => pred(x) != null ? r(acc, x) : acc);\n        });\n}\nexports.keep = keep;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst is_function_1 = require(\"@thi.ng/checks/is-function\");\nconst iterator_1 = require(\"../iterator\");\nconst map_1 = require(\"./map\");\nfunction labeled(id, src) {\n    return src ?\n        iterator_1.iterator1(labeled(id), src) :\n        map_1.map(is_function_1.isFunction(id) ?\n            (x) => [id(x), x] :\n            (x) => [id, x]);\n}\nexports.labeled = labeled;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst is_function_1 = require(\"@thi.ng/checks/is-function\");\n/**\n * Higher-order deep object transformer. Accepts a nested `spec`\n * array reflecting same key structure as the object to be mapped,\n * but with functions or sub-specs as their values.\n * Returns a new function, which when called, recursively applies\n * nested transformers in post-order traversal (child transformers\n * are run first) and returns the result of the root transformer.\n *\n * The transform specs are given as arrays in this format:\n *\n * ```\n * [tx-function, {key1: [tx-function, {...}], key2: tx-fn}]\n * ```\n *\n * If a key in the spec has no further sub maps, its transform\n * function can be given directly without having to wrap it into\n * the usual array structure.\n *\n * ```\n * // source object to be transformed\n * src = {\n *    meta: {\n *      author: { name: \"Alice\", email: \"a@b.com\" },\n *      date: 1041510896000\n *    },\n *    type: \"post\",\n *    title: \"Hello world\",\n *    body: \"Ratione necessitatibus doloremque itaque.\"\n * };\n *\n * // deep transformation spec\n * spec = [\n *    // root transform (called last)\n *    ({type, meta, title, body}) => [\"div\", {class: type}, title, meta, body],\n *    // object of transform sub-specs\n *    {\n *      meta: [\n *        ({author, date}) => [\"div.meta\", author, `(${date})`],\n *        {\n *          author: ({email, name}) => [\"a\", {href: `mailto:${email}`}, name],\n *          date: (d) => new Date(d).toLocaleString()\n *        }\n *      ],\n *      title: (title) => [\"h1\", title]\n *    }\n * ];\n *\n * // build transformer & apply to src\n * deepTransform(spec)(src);\n *\n * // [ \"div\",\n * //   { class: \"article\" },\n * //   [ \"h1\", \"Hello world\" ],\n * //   [ \"div.meta\",\n * //     [ \"a\", { href: \"mailto:a@.b.com\" }, \"Alice\" ],\n * //     \"(1/2/2003, 12:34:56 PM)\" ],\n * //   \"Ratione necessitatibus doloremque itaque.\" ]\n * ```\n *\n * @param spec transformation spec\n */\nfunction deepTransform(spec) {\n    if (is_function_1.isFunction(spec)) {\n        return spec;\n    }\n    const mapfns = Object.keys(spec[1] || {}).reduce((acc, k) => (acc[k] = deepTransform(spec[1][k]), acc), {});\n    return (x) => {\n        const res = Object.assign({}, x);\n        for (let k in mapfns) {\n            res[k] = mapfns[k](res[k]);\n        }\n        return spec[0](res);\n    };\n}\nexports.deepTransform = deepTransform;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst deep_transform_1 = require(\"../func/deep-transform\");\nconst iterator_1 = require(\"../iterator\");\nconst map_1 = require(\"./map\");\nfunction mapDeep(spec, src) {\n    return src ?\n        iterator_1.iterator1(mapDeep(spec), src) :\n        map_1.map(deep_transform_1.deepTransform(spec));\n}\nexports.mapDeep = mapDeep;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst iterator_1 = require(\"../iterator\");\nconst map_1 = require(\"./map\");\nfunction mapKeys(...args) {\n    const iter = iterator_1.$iter(mapKeys, args);\n    if (iter) {\n        return iter;\n    }\n    const keys = args[0];\n    const copy = args[1] !== false;\n    return map_1.map((x) => {\n        const res = copy ? Object.assign({}, x) : x;\n        for (let k in keys) {\n            res[k] = keys[k](x[k]);\n        }\n        return res;\n    });\n}\nexports.mapKeys = mapKeys;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst compr_1 = require(\"../func/compr\");\nconst iterator_1 = require(\"../iterator\");\nfunction mapNth(...args) {\n    const iter = iterator_1.$iter(mapNth, args);\n    if (iter) {\n        return iter;\n    }\n    let n = args[0] - 1, offset, fn;\n    if (typeof args[1] === \"number\") {\n        offset = args[1];\n        fn = args[2];\n    }\n    else {\n        fn = args[1];\n        offset = 0;\n    }\n    return (rfn) => {\n        const r = rfn[2];\n        let skip = 0, off = offset;\n        return compr_1.compR(rfn, (acc, x) => {\n            if (off === 0) {\n                if (skip === 0) {\n                    skip = n;\n                    return r(acc, fn(x));\n                }\n                skip--;\n            }\n            else {\n                off--;\n            }\n            return r(acc, x);\n        });\n    };\n}\nexports.mapNth = mapNth;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst iterator_1 = require(\"../iterator\");\nconst map_1 = require(\"./map\");\nfunction mapVals(...args) {\n    const iter = iterator_1.$iter(mapVals, args);\n    if (iter) {\n        return iter;\n    }\n    const fn = args[0];\n    const copy = args[1] !== false;\n    return map_1.map((x) => {\n        const res = copy ? {} : x;\n        for (let k in x) {\n            res[k] = fn(x[k]);\n        }\n        return res;\n    });\n}\nexports.mapVals = mapVals;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst comp_1 = require(\"../func/comp\");\nconst iterator_1 = require(\"../iterator\");\nconst cat_1 = require(\"./cat\");\nconst map_1 = require(\"./map\");\nfunction mapcat(fn, src) {\n    return src ?\n        iterator_1.iterator(mapcat(fn), src) :\n        comp_1.comp(map_1.map(fn), cat_1.cat());\n}\nexports.mapcat = mapcat;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst compr_1 = require(\"../func/compr\");\nconst iterator_1 = require(\"../iterator\");\nconst reduced_1 = require(\"../reduced\");\nfunction take(n, src) {\n    return src ?\n        iterator_1.iterator(take(n), src) :\n        (rfn) => {\n            const r = rfn[2];\n            let m = n;\n            return compr_1.compR(rfn, (acc, x) => --m > 0 ? r(acc, x) :\n                m === 0 ? reduced_1.ensureReduced(r(acc, x)) :\n                    reduced_1.reduced(acc));\n        };\n}\nexports.take = take;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst comp_1 = require(\"../func/comp\");\nconst iterator_1 = require(\"../iterator\");\nconst filter_1 = require(\"./filter\");\nconst take_1 = require(\"./take\");\nfunction matchFirst(pred, src) {\n    return src ?\n        [...iterator_1.iterator1(matchFirst(pred), src)][0] :\n        comp_1.comp(filter_1.filter(pred), take_1.take(1));\n}\nexports.matchFirst = matchFirst;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst iterator_1 = require(\"../iterator\");\nconst reduced_1 = require(\"../reduced\");\nfunction takeLast(n, src) {\n    return src ?\n        iterator_1.iterator(takeLast(n), src) :\n        ([init, complete, reduce]) => {\n            const buf = [];\n            return [\n                init,\n                (acc) => {\n                    while (buf.length && !reduced_1.isReduced(acc)) {\n                        acc = reduce(acc, buf.shift());\n                    }\n                    return complete(acc);\n                },\n                (acc, x) => {\n                    if (buf.length === n) {\n                        buf.shift();\n                    }\n                    buf.push(x);\n                    return acc;\n                }\n            ];\n        };\n}\nexports.takeLast = takeLast;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst comp_1 = require(\"../func/comp\");\nconst iterator_1 = require(\"../iterator\");\nconst filter_1 = require(\"./filter\");\nconst take_last_1 = require(\"./take-last\");\nfunction matchLast(pred, src) {\n    return src ?\n        [...iterator_1.iterator(matchLast(pred), src)][0] :\n        comp_1.comp(filter_1.filter(pred), take_last_1.takeLast(1));\n}\nexports.matchLast = matchLast;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst illegal_arguments_1 = require(\"@thi.ng/errors/illegal-arguments\");\nconst compr_1 = require(\"../func/compr\");\nconst iterator_1 = require(\"../iterator\");\nfunction movingAverage(period, src) {\n    return src ?\n        iterator_1.iterator1(movingAverage(period), src) :\n        (rfn) => {\n            period |= 0;\n            period < 2 && illegal_arguments_1.illegalArgs(\"period must be >= 2\");\n            const reduce = rfn[2];\n            const window = [];\n            let sum = 0;\n            return compr_1.compR(rfn, (acc, x) => {\n                const n = window.push(x);\n                sum += x;\n                n > period && (sum -= window.shift());\n                return n >= period ? reduce(acc, sum / period) : acc;\n            });\n        };\n}\nexports.movingAverage = movingAverage;\n;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst compare_1 = require(\"@thi.ng/compare\");\nconst comp_1 = require(\"../func/comp\");\nconst identity_1 = require(\"../func/identity\");\nconst iterator_1 = require(\"../iterator\");\nconst map_1 = require(\"./map\");\nconst partition_1 = require(\"./partition\");\nfunction movingMedian(...args) {\n    const iter = iterator_1.$iter(movingMedian, args);\n    if (iter) {\n        return iter;\n    }\n    const { key, compare } = Object.assign({ key: identity_1.identity, compare: compare_1.compare }, args[1]);\n    const n = args[0];\n    const m = n >> 1;\n    return comp_1.comp(partition_1.partition(n, 1, true), map_1.map((window) => window.slice().sort((a, b) => compare(key(a), key(b)))[m]));\n}\nexports.movingMedian = movingMedian;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst juxt_1 = require(\"../func/juxt\");\nconst step_1 = require(\"../step\");\nconst map_1 = require(\"./map\");\nfunction multiplex(...args) {\n    return map_1.map(juxt_1.juxt.apply(null, args.map(step_1.step)));\n}\nexports.multiplex = multiplex;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction renamer(kmap) {\n    const ks = Object.keys(kmap);\n    const [a2, b2, c2] = ks;\n    const [a1, b1, c1] = ks.map((k) => kmap[k]);\n    switch (ks.length) {\n        case 3:\n            return (x) => {\n                const res = {};\n                let v;\n                v = x[c1], v !== undefined && (res[c2] = v);\n                v = x[b1], v !== undefined && (res[b2] = v);\n                v = x[a1], v !== undefined && (res[a2] = v);\n                return res;\n            };\n        case 2:\n            return (x) => {\n                const res = {};\n                let v;\n                v = x[b1], v !== undefined && (res[b2] = v);\n                v = x[a1], v !== undefined && (res[a2] = v);\n                return res;\n            };\n        case 1:\n            return (x) => {\n                const res = {};\n                let v = x[a1];\n                v !== undefined && (res[a2] = v);\n                return res;\n            };\n        default:\n            return (x) => {\n                let k, v;\n                const res = {};\n                for (let i = ks.length - 1; i >= 0; i--) {\n                    k = ks[i], v = x[kmap[k]], v !== undefined && (res[k] = v);\n                }\n                return res;\n            };\n    }\n}\nexports.renamer = renamer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst is_array_1 = require(\"@thi.ng/checks/is-array\");\nconst comp_1 = require(\"../func/comp\");\nconst renamer_1 = require(\"../func/renamer\");\nconst iterator_1 = require(\"../iterator\");\nconst transduce_1 = require(\"../transduce\");\nconst filter_1 = require(\"./filter\");\nconst map_1 = require(\"./map\");\nfunction rename(...args) {\n    const iter = args.length > 2 && iterator_1.$iter(rename, args);\n    if (iter) {\n        return iter;\n    }\n    let kmap = args[0];\n    if (is_array_1.isArray(kmap)) {\n        kmap = kmap.reduce((acc, k, i) => (acc[k] = i, acc), {});\n    }\n    if (args[1]) {\n        const ks = Object.keys(kmap);\n        return map_1.map((y) => transduce_1.transduce(comp_1.comp(map_1.map((k) => [k, y[kmap[k]]]), filter_1.filter(x => x[1] !== undefined)), args[1], ks));\n    }\n    else {\n        return map_1.map(renamer_1.renamer(kmap));\n    }\n}\nexports.rename = rename;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst comp_1 = require(\"../func/comp\");\nconst iterator_1 = require(\"../iterator\");\nconst multiplex_1 = require(\"./multiplex\");\nconst rename_1 = require(\"./rename\");\nfunction multiplexObj(...args) {\n    const iter = iterator_1.$iter(multiplexObj, args);\n    if (iter) {\n        return iter;\n    }\n    const [xforms, rfn] = args;\n    const ks = Object.keys(xforms);\n    return comp_1.comp(multiplex_1.multiplex.apply(null, ks.map((k) => xforms[k])), rename_1.rename(ks, rfn));\n}\nexports.multiplexObj = multiplexObj;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * No-op / pass-through transducer, essentially the same as:\n * `map(identity)`, but faster. Useful for testing and / or to keep\n * existing values in a `multiplex()` tuple lane.\n */\nfunction noop() {\n    return (rfn) => rfn;\n}\nexports.noop = noop;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst comp_1 = require(\"../func/comp\");\nconst iterator_1 = require(\"../iterator\");\nconst drop_1 = require(\"./drop\");\nconst take_1 = require(\"./take\");\nfunction page(...args) {\n    return iterator_1.$iter(page, args) ||\n        comp_1.comp(drop_1.drop(args[0] * (args[1] || 10)), take_1.take(args[1] || 10));\n}\nexports.page = page;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst iterator_1 = require(\"../iterator\");\nconst reduced_1 = require(\"../reduced\");\nfunction partitionBits(...args) {\n    return iterator_1.$iter(partitionBits, args, iterator_1.iterator) ||\n        ((rfn) => {\n            const destSize = args[0];\n            const srcSize = args[1] || 8;\n            return destSize < srcSize ?\n                small(rfn, destSize, srcSize) :\n                destSize > srcSize ?\n                    large(rfn, destSize, srcSize) :\n                    rfn;\n        });\n}\nexports.partitionBits = partitionBits;\nconst small = ([init, complete, reduce], n, wordSize) => {\n    const maxb = wordSize - n;\n    const m1 = (1 << wordSize) - 1;\n    const m2 = (1 << n) - 1;\n    let r = 0;\n    let y = 0;\n    return [\n        init,\n        (acc) => complete(r > 0 ? reduce(acc, y) : acc),\n        (acc, x) => {\n            let b = 0;\n            do {\n                acc = reduce(acc, y + ((x >>> (maxb + r)) & m2));\n                b += n - r;\n                x = (x << (n - r)) & m1;\n                y = 0;\n                r = 0;\n            } while (b <= maxb && !reduced_1.isReduced(acc));\n            r = wordSize - b;\n            y = r > 0 ? (x >>> maxb) & m2 : 0;\n            return acc;\n        }\n    ];\n};\nconst large = ([init, complete, reduce], n, wordSize) => {\n    const m1 = (1 << wordSize) - 1;\n    let r = 0;\n    let y = 0;\n    return [\n        init,\n        (acc) => complete(r > 0 ? reduce(acc, y) : acc),\n        (acc, x) => {\n            if (r + wordSize <= n) {\n                y |= (x & m1) << (n - wordSize - r);\n                r += wordSize;\n                if (r === n) {\n                    acc = reduce(acc, y);\n                    y = 0;\n                    r = 0;\n                }\n            }\n            else {\n                const k = n - r;\n                r = wordSize - k;\n                acc = reduce(acc, y | ((x >>> r) & ((1 << k) - 1)));\n                y = (x & ((1 << r) - 1)) << (n - r);\n            }\n            return acc;\n        }\n    ];\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst api_1 = require(\"@thi.ng/api/api\");\nconst iterator_1 = require(\"../iterator\");\nconst reduced_1 = require(\"../reduced\");\nfunction partitionBy(...args) {\n    return iterator_1.$iter(partitionBy, args, iterator_1.iterator) ||\n        (([init, complete, reduce]) => {\n            const fn = args[0];\n            const f = args[1] === true ? fn() : fn;\n            let prev = api_1.SEMAPHORE, chunk;\n            return [\n                init,\n                (acc) => {\n                    if (chunk && chunk.length) {\n                        acc = reduce(acc, chunk);\n                        chunk = null;\n                    }\n                    return complete(acc);\n                },\n                (acc, x) => {\n                    const curr = f(x);\n                    if (prev === api_1.SEMAPHORE) {\n                        prev = curr;\n                        chunk = [x];\n                    }\n                    else if (curr === prev) {\n                        chunk.push(x);\n                    }\n                    else {\n                        chunk && (acc = reduce(acc, chunk));\n                        chunk = reduced_1.isReduced(acc) ? null : [x];\n                        prev = curr;\n                    }\n                    return acc;\n                }\n            ];\n        });\n}\nexports.partitionBy = partitionBy;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst iterator_1 = require(\"../iterator\");\nconst partition_by_1 = require(\"./partition-by\");\nfunction partitionOf(sizes, src) {\n    return src ?\n        iterator_1.iterator(partitionOf(sizes), src) :\n        partition_by_1.partitionBy(() => {\n            let i = 0, j = 0;\n            return () => {\n                if (i++ === sizes[j]) {\n                    i = 1;\n                    j = (j + 1) % sizes.length;\n                }\n                return j;\n            };\n        }, true);\n}\nexports.partitionOf = partitionOf;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst compare_1 = require(\"@thi.ng/compare\");\nconst comp_1 = require(\"../func/comp\");\nconst identity_1 = require(\"../func/identity\");\nconst iterator_1 = require(\"../iterator\");\nconst mapcat_1 = require(\"./mapcat\");\nconst partition_1 = require(\"./partition\");\nfunction partitionSort(...args) {\n    const iter = iterator_1.$iter(partitionSort, args, iterator_1.iterator);\n    if (iter) {\n        return iter;\n    }\n    const { key, compare } = Object.assign({ key: identity_1.identity, compare: compare_1.compare }, args[1]);\n    return comp_1.comp(partition_1.partition(args[0], true), mapcat_1.mapcat((window) => window.slice().sort((a, b) => compare(key(a), key(b)))));\n}\nexports.partitionSort = partitionSort;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst is_array_1 = require(\"@thi.ng/checks/is-array\");\nconst identity_1 = require(\"../func/identity\");\nconst iterator_1 = require(\"../iterator\");\nfunction partitionSync(...args) {\n    return iterator_1.$iter(partitionSync, args, iterator_1.iterator) ||\n        (([init, complete, reduce]) => {\n            let curr = {};\n            let first = true;\n            const currKeys = new Set();\n            const { key, mergeOnly, reset, all } = Object.assign({ key: identity_1.identity, mergeOnly: false, reset: true, all: true }, args[1]);\n            const ks = is_array_1.isArray(args[0]) ? new Set(args[0]) : args[0];\n            return [\n                init,\n                (acc) => {\n                    if ((reset && all && currKeys.size > 0) || (!reset && first)) {\n                        acc = reduce(acc, curr);\n                        curr = undefined;\n                        currKeys.clear();\n                        first = false;\n                    }\n                    return complete(acc);\n                },\n                (acc, x) => {\n                    const k = key(x);\n                    if (ks.has(k)) {\n                        curr[k] = x;\n                        currKeys.add(k);\n                        if (mergeOnly || currKeys.size >= ks.size) {\n                            acc = reduce(acc, curr);\n                            first = false;\n                            if (reset) {\n                                curr = {};\n                                currKeys.clear();\n                            }\n                            else {\n                                curr = Object.assign({}, curr);\n                            }\n                        }\n                    }\n                    return acc;\n                }\n            ];\n        });\n}\nexports.partitionSync = partitionSync;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst iterator_1 = require(\"../iterator\");\nconst map_1 = require(\"./map\");\nfunction pluck(key, src) {\n    return src ?\n        iterator_1.iterator1(pluck(key), src) :\n        map_1.map((x) => x[key]);\n}\nexports.pluck = pluck;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst compr_1 = require(\"../func/compr\");\nconst iterator_1 = require(\"../iterator\");\nfunction sample(prob, src) {\n    return src ?\n        iterator_1.iterator1(sample(prob), src) :\n        (rfn) => {\n            const r = rfn[2];\n            return compr_1.compR(rfn, (acc, x) => Math.random() < prob ? r(acc, x) : acc);\n        };\n}\nexports.sample = sample;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst iterator_1 = require(\"../iterator\");\nconst reduced_1 = require(\"../reduced\");\nfunction scan(...args) {\n    return (args.length > 2 && iterator_1.$iter(scan, args, iterator_1.iterator)) ||\n        (([inito, completeo, reduceo]) => {\n            const [initi, completei, reducei] = args[0];\n            let acc = args.length > 1 && args[1] != null ? args[1] : initi();\n            return [\n                inito,\n                (_acc) => {\n                    let a = completei(acc);\n                    if (a !== acc) {\n                        _acc = reduced_1.unreduced(reduceo(_acc, a));\n                    }\n                    acc = a;\n                    return completeo(_acc);\n                },\n                (_acc, x) => {\n                    acc = reducei(acc, x);\n                    if (reduced_1.isReduced(acc)) {\n                        return reduced_1.ensureReduced(reduceo(_acc, acc.deref()));\n                    }\n                    return reduceo(_acc, acc);\n                }\n            ];\n        });\n}\nexports.scan = scan;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst renamer_1 = require(\"./renamer\");\nfunction keySelector(keys) {\n    return renamer_1.renamer(keys.reduce((acc, x) => (acc[x] = x, acc), {}));\n}\nexports.keySelector = keySelector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst key_selector_1 = require(\"../func/key-selector\");\nconst iterator_1 = require(\"../iterator\");\nconst map_1 = require(\"./map\");\nfunction selectKeys(keys, src) {\n    return src ?\n        iterator_1.iterator1(selectKeys(keys), src) :\n        map_1.map(key_selector_1.keySelector(keys));\n}\nexports.selectKeys = selectKeys;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst map_1 = require(\"./map\");\n/**\n * Helper transducer. Applies given `fn` to each input value, presumably\n * for side effects. Discards function's result and yields original\n * inputs.\n *\n * @param fn side effect\n */\nfunction sideEffect(fn) {\n    return map_1.map((x) => (fn(x), x));\n}\nexports.sideEffect = sideEffect;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst compr_1 = require(\"../func/compr\");\nconst iterator_1 = require(\"../iterator\");\nfunction slidingWindow(...args) {\n    const iter = iterator_1.$iter(slidingWindow, args);\n    if (iter) {\n        return iter;\n    }\n    const size = args[0];\n    const partial = args[1] !== false;\n    return (rfn) => {\n        const reduce = rfn[2];\n        let buf = [];\n        return compr_1.compR(rfn, (acc, x) => {\n            buf.push(x);\n            if (partial || buf.length === size) {\n                acc = reduce(acc, buf);\n                buf = buf.slice(buf.length === size ? 1 : 0);\n            }\n            return acc;\n        });\n    };\n}\nexports.slidingWindow = slidingWindow;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction shuffleN(buf, n) {\n    const l = buf.length;\n    n = n < l ? n : l;\n    while (--n >= 0) {\n        const a = (Math.random() * l) | 0;\n        const b = (Math.random() * l) | 0;\n        const t = buf[a];\n        buf[a] = buf[b];\n        buf[b] = t;\n    }\n}\nexports.shuffleN = shuffleN;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst shuffle_1 = require(\"../func/shuffle\");\nconst iterator_1 = require(\"../iterator\");\nconst reduced_1 = require(\"../reduced\");\nfunction streamShuffle(...args) {\n    return iterator_1.$iter(streamShuffle, args, iterator_1.iterator) ||\n        (([init, complete, reduce]) => {\n            const n = args[0];\n            const maxSwaps = args[1] || n;\n            const buf = [];\n            return [\n                init,\n                (acc) => {\n                    while (buf.length && !reduced_1.isReduced(acc)) {\n                        shuffle_1.shuffleN(buf, maxSwaps);\n                        acc = reduce(acc, buf.shift());\n                    }\n                    acc = complete(acc);\n                    return acc;\n                },\n                (acc, x) => {\n                    buf.push(x);\n                    shuffle_1.shuffleN(buf, maxSwaps);\n                    if (buf.length === n) {\n                        acc = reduce(acc, buf.shift());\n                    }\n                    return acc;\n                }\n            ];\n        });\n}\nexports.streamShuffle = streamShuffle;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Returns the supposed index of `x` in pre-sorted array-like collection\n * `arr`. The `key` function first is used to obtain the actual sort\n * value of `x` and each array item. The `cmp` comparator is then used to\n * identify the index of `x`.\n *\n * @param arr\n * @param key\n * @param cmp\n * @param x\n * @returns index of `x`, else `-index` if item could not be found\n */\nfunction binarySearch(arr, key, cmp, x) {\n    const kx = key(x);\n    let low = 0;\n    let high = arr.length - 1;\n    while (low <= high) {\n        const mid = (low + high) >>> 1;\n        const c = cmp(key(arr[mid]), kx);\n        if (c < 0) {\n            low = mid + 1;\n        }\n        else if (c > 0) {\n            high = mid - 1;\n        }\n        else {\n            return mid;\n        }\n    }\n    return -low;\n}\nexports.binarySearch = binarySearch;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst compare_1 = require(\"@thi.ng/compare\");\nconst binary_search_1 = require(\"../func/binary-search\");\nconst identity_1 = require(\"../func/identity\");\nconst iterator_1 = require(\"../iterator\");\nconst reduced_1 = require(\"../reduced\");\nfunction streamSort(...args) {\n    const iter = iterator_1.$iter(streamSort, args, iterator_1.iterator);\n    if (iter) {\n        return iter;\n    }\n    const { key, compare } = Object.assign({ key: identity_1.identity, compare: compare_1.compare }, args[1]);\n    const n = args[0];\n    return ([init, complete, reduce]) => {\n        const buf = [];\n        return [\n            init,\n            (acc) => {\n                while (buf.length && !reduced_1.isReduced(acc)) {\n                    acc = reduce(acc, buf.shift());\n                }\n                return complete(acc);\n            },\n            (acc, x) => {\n                const idx = binary_search_1.binarySearch(buf, key, compare, x);\n                buf.splice(Math.abs(idx), 0, x);\n                if (buf.length === n) {\n                    acc = reduce(acc, buf.shift());\n                }\n                return acc;\n            }\n        ];\n    };\n}\nexports.streamSort = streamSort;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst comp_1 = require(\"../func/comp\");\nconst iterator_1 = require(\"../iterator\");\nconst map_keys_1 = require(\"./map-keys\");\nconst partition_1 = require(\"./partition\");\nconst partition_of_1 = require(\"./partition-of\");\nconst rename_1 = require(\"./rename\");\nfunction struct(fields, src) {\n    return src ?\n        iterator_1.iterator(struct(fields), src) :\n        comp_1.comp(partition_of_1.partitionOf(fields.map((f) => f[1])), partition_1.partition(fields.length), rename_1.rename(fields.map((f) => f[0])), map_keys_1.mapKeys(fields.reduce((acc, f) => (f[2] ? (acc[f[0]] = f[2], acc) : acc), {}), false));\n}\nexports.struct = struct;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Returns optimized function to select, repeat, reshape and / or\n * reorder array/object values in the specified index order. The\n * returned function can be used directly or as mapping function for the\n * `map` transducer. Fast paths for up to 8 indices are provided, before\n * a loop based approach is used.\n *\n * ```\n * swizzler([0, 0, 0])([1, 2, 3, 4])    // [ 1, 1, 1 ]\n * swizzler([1, 1, 3, 3])([1, 2, 3, 4]) // [ 2, 2, 4, 4 ]\n * swizzler([2, 0])([1, 2, 3])          // [ 3, 1 ]\n * ```\n *\n * Even though, objects can be used as input to the generated function,\n * the returned values will always be in array form.\n *\n * ```\n * swizzler([\"a\", \"c\", \"b\"])({a: 1, b: 2, c: 3}) // [ 1, 3, 2 ]\n * ```\n *\n * @param order indices\n */\nfunction swizzler(order) {\n    const [a, b, c, d, e, f, g, h] = order;\n    switch (order.length) {\n        case 0:\n            return () => [];\n        case 1:\n            return (x) => [x[a]];\n        case 2:\n            return (x) => [x[a], x[b]];\n        case 3:\n            return (x) => [x[a], x[b], x[c]];\n        case 4:\n            return (x) => [x[a], x[b], x[c], x[d]];\n        case 5:\n            return (x) => [x[a], x[b], x[c], x[d], x[e]];\n        case 6:\n            return (x) => [x[a], x[b], x[c], x[d], x[e], x[f]];\n        case 7:\n            return (x) => [x[a], x[b], x[c], x[d], x[e], x[f], x[g]];\n        case 8:\n            return (x) => [x[a], x[b], x[c], x[d], x[e], x[f], x[g], x[h]];\n        default:\n            return (x) => {\n                const res = [];\n                for (let i = order.length - 1; i >= 0; i--) {\n                    res[i] = x[order[i]];\n                }\n                return res;\n            };\n    }\n}\nexports.swizzler = swizzler;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst swizzler_1 = require(\"../func/swizzler\");\nconst iterator_1 = require(\"../iterator\");\nconst map_1 = require(\"./map\");\nfunction swizzle(order, src) {\n    return src ?\n        iterator_1.iterator1(swizzle(order), src) :\n        map_1.map(swizzler_1.swizzler(order));\n}\nexports.swizzle = swizzle;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst iterator_1 = require(\"../iterator\");\nconst throttle_1 = require(\"./throttle\");\nfunction takeNth(n, src) {\n    if (src) {\n        return iterator_1.iterator1(takeNth(n), src);\n    }\n    n = Math.max(0, n - 1);\n    return throttle_1.throttle(() => {\n        let skip = 0;\n        return () => (skip === 0 ? (skip = n, true) : (skip--, false));\n    });\n}\nexports.takeNth = takeNth;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst compr_1 = require(\"../func/compr\");\nconst iterator_1 = require(\"../iterator\");\nconst reduced_1 = require(\"../reduced\");\nfunction takeWhile(...args) {\n    return iterator_1.$iter(takeWhile, args) ||\n        ((rfn) => {\n            const r = rfn[2];\n            const pred = args[0];\n            let ok = true;\n            return compr_1.compR(rfn, (acc, x) => (ok = ok && pred(x)) ? r(acc, x) : reduced_1.reduced(acc));\n        });\n}\nexports.takeWhile = takeWhile;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst iterator_1 = require(\"../iterator\");\nconst throttle_1 = require(\"./throttle\");\nfunction throttleTime(delay, src) {\n    return src ?\n        iterator_1.iterator1(throttleTime(delay), src) :\n        throttle_1.throttle(() => {\n            let last = 0;\n            return () => {\n                const t = Date.now();\n                return t - last >= delay ? (last = t, true) : false;\n            };\n        });\n}\nexports.throttleTime = throttleTime;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst side_effect_1 = require(\"./side-effect\");\nfunction trace(prefix = \"\") {\n    return side_effect_1.sideEffect((x) => console.log(prefix, x));\n}\nexports.trace = trace;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst compr_1 = require(\"../func/compr\");\nconst iterator_1 = require(\"../iterator\");\nconst reduced_1 = require(\"../reduced\");\nfunction utf8Decode(src) {\n    return src ?\n        [...iterator_1.iterator1(utf8Decode(), src)].join(\"\") :\n        (rfn) => {\n            const r = rfn[2];\n            let state = 0, u0, u1, u2, u3, u4;\n            return compr_1.compR(rfn, (acc, x) => {\n                switch (state) {\n                    case 0:\n                    default:\n                        if (x < 0x80) {\n                            return r(acc, String.fromCharCode(x));\n                        }\n                        u0 = x;\n                        state = 1;\n                        break;\n                    case 1:\n                        u1 = x & 0x3f;\n                        if ((u0 & 0xe0) === 0xc0) {\n                            state = 0;\n                            return r(acc, String.fromCharCode(((u0 & 0x1f) << 6) | u1));\n                        }\n                        state = 2;\n                        break;\n                    case 2:\n                        u2 = x & 0x3f;\n                        if ((u0 & 0xf0) === 0xe0) {\n                            state = 0;\n                            return r(acc, String.fromCharCode(((u0 & 0x0f) << 12) | (u1 << 6) | u2));\n                        }\n                        state = 3;\n                        break;\n                    case 3:\n                        u3 = x & 0x3f;\n                        if ((u0 & 0xf8) === 0xf0) {\n                            state = 0;\n                            return r(acc, codePoint(((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | u3));\n                        }\n                        state = 4;\n                        break;\n                    case 4:\n                        u4 = x & 0x3f;\n                        if ((u0 & 0xfc) === 0xf8) {\n                            state = 0;\n                            return r(acc, codePoint(((u0 & 3) << 24) | (u1 << 18) | (u2 << 12) | (u3 << 6) | u4));\n                        }\n                        state = 5;\n                        break;\n                    case 5:\n                        state = 0;\n                        return r(acc, codePoint(((u0 & 1) << 30) | (u1 << 24) | (u2 << 18) | (u3 << 12) | (u4 << 6) | (x & 0x3f)));\n                }\n                return acc;\n            });\n        };\n}\nexports.utf8Decode = utf8Decode;\nfunction utf8Encode(src) {\n    return src != null ?\n        iterator_1.iterator(utf8Encode(), src) :\n        (rfn) => {\n            const r = rfn[2];\n            return compr_1.compR(rfn, (acc, x) => {\n                let u = x.charCodeAt(0), buf;\n                if (u >= 0xd800 && u <= 0xdfff) {\n                    u = 0x10000 + ((u & 0x3ff) << 10) | (x.charCodeAt(1) & 0x3ff);\n                }\n                if (u < 0x80) {\n                    return r(acc, u);\n                }\n                else if (u < 0x800) {\n                    buf = [\n                        0xc0 | (u >> 6),\n                        0x80 | (u & 0x3f)\n                    ];\n                }\n                else if (u < 0x10000) {\n                    buf = [\n                        0xe0 | (u >> 12),\n                        0x80 | ((u >> 6) & 0x3f),\n                        0x80 | (u & 0x3f)\n                    ];\n                }\n                else if (u < 0x200000) {\n                    buf = [\n                        0xf0 | (u >> 18),\n                        0x80 | ((u >> 12) & 0x3f),\n                        0x80 | ((u >> 6) & 0x3f),\n                        0x80 | (u & 0x3f)\n                    ];\n                }\n                else if (u < 0x4000000) {\n                    buf = [\n                        0xf8 | (u >> 24),\n                        0x80 | ((u >> 18) & 0x3f),\n                        0x80 | ((u >> 12) & 0x3f),\n                        0x80 | ((u >> 6) & 0x3f),\n                        0x80 | (u & 0x3f)\n                    ];\n                }\n                else {\n                    buf = [\n                        0xfc | (u >> 30),\n                        0x80 | ((u >> 24) & 0x3f),\n                        0x80 | ((u >> 18) & 0x3f),\n                        0x80 | ((u >> 12) & 0x3f),\n                        0x80 | ((u >> 6) & 0x3f),\n                        0x80 | (u & 0x3f)\n                    ];\n                }\n                for (let i = 0, n = buf.length; i < n; i++) {\n                    acc = r(acc, buf[i]);\n                    if (reduced_1.isReduced(acc)) {\n                        break;\n                    }\n                }\n                return acc;\n            });\n        };\n}\nexports.utf8Encode = utf8Encode;\nconst codePoint = (x) => x < 0x10000 ?\n    String.fromCharCode(x) :\n    (x -= 0x10000, String.fromCharCode(0xd800 | (x >> 10), 0xdc00 | (x & 0x3ff)));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst iterator_1 = require(\"../iterator\");\nconst partition_by_1 = require(\"./partition-by\");\nfunction wordWrap(...args) {\n    const iter = iterator_1.$iter(wordWrap, args, iterator_1.iterator);\n    if (iter) {\n        return iter;\n    }\n    const lineLength = args[0];\n    const { delim, always } = Object.assign({ delim: 1, always: true }, args[1]);\n    return partition_by_1.partitionBy(() => {\n        let n = 0;\n        let flag = false;\n        return (w) => {\n            n += w.length + delim;\n            if (n > lineLength + (always ? 0 : delim)) {\n                flag = !flag;\n                n = w.length + delim;\n            }\n            return flag;\n        };\n    }, true);\n}\nexports.wordWrap = wordWrap;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction constantly(x) {\n    return () => x;\n}\nexports.constantly = constantly;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst illegal_arguments_1 = require(\"@thi.ng/errors/illegal-arguments\");\nfunction ensureIterable(x) {\n    if (!(x != null && x[Symbol.iterator])) {\n        illegal_arguments_1.illegalArgs(`value is not iterable: ${x}`);\n    }\n    return x;\n}\nexports.ensureIterable = ensureIterable;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst is_array_1 = require(\"@thi.ng/checks/is-array\");\nconst is_arraylike_1 = require(\"@thi.ng/checks/is-arraylike\");\nconst ensure_iterable_1 = require(\"./ensure-iterable\");\n/**\n * Helper function to avoid unnecessary copying if `x` is already an\n * array. First checks if `x` is an array and if so returns it. Else\n * attempts to obtain an iterator from `x` and if successful collects it\n * as array and returns it. Throws error if `x` isn't iterable.\n *\n * @param x\n */\nfunction ensureArray(x) {\n    return is_array_1.isArray(x) ? x : [...ensure_iterable_1.ensureIterable(x)];\n}\nexports.ensureArray = ensureArray;\nfunction ensureArrayLike(x) {\n    return is_arraylike_1.isArrayLike(x) ? x : [...ensure_iterable_1.ensureIterable(x)];\n}\nexports.ensureArrayLike = ensureArrayLike;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isEven(x) {\n    return (x % 2) === 0;\n}\nexports.isEven = isEven;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar is_even_1 = require(\"@thi.ng/checks/is-even\");\nexports.even = is_even_1.isEven;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst radix_1 = require(\"@thi.ng/strings/radix\");\n/**\n * @deprecated use thi.ng/strings `radix()` instead\n *\n * @param digits\n * @param prefix\n */\nexports.hex = (digits = 2, prefix = \"\") => radix_1.radix(16, digits, prefix);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst reduced_1 = require(\"../reduced\");\nfunction juxtR(...rs) {\n    let [a, b, c] = rs;\n    const n = rs.length;\n    switch (n) {\n        case 1: {\n            const r = a[2];\n            return [\n                () => [a[0]()],\n                (acc) => [a[1](acc[0])],\n                (acc, x) => {\n                    const aa1 = r(acc[0], x);\n                    if (reduced_1.isReduced(aa1)) {\n                        return reduced_1.reduced([reduced_1.unreduced(aa1)]);\n                    }\n                    return [aa1];\n                }\n            ];\n        }\n        case 2: {\n            const ra = a[2];\n            const rb = b[2];\n            return [\n                () => [a[0](), b[0]()],\n                (acc) => [a[1](acc[0]), b[1](acc[1])],\n                (acc, x) => {\n                    const aa1 = ra(acc[0], x);\n                    const aa2 = rb(acc[1], x);\n                    if (reduced_1.isReduced(aa1) || reduced_1.isReduced(aa2)) {\n                        return reduced_1.reduced([reduced_1.unreduced(aa1), reduced_1.unreduced(aa2)]);\n                    }\n                    return [aa1, aa2];\n                }\n            ];\n        }\n        case 3: {\n            const ra = a[2];\n            const rb = b[2];\n            const rc = c[2];\n            return [\n                () => [a[0](), b[0](), c[0]()],\n                (acc) => [a[1](acc[0]), b[1](acc[1]), c[1](acc[2])],\n                (acc, x) => {\n                    const aa1 = ra(acc[0], x);\n                    const aa2 = rb(acc[1], x);\n                    const aa3 = rc(acc[2], x);\n                    if (reduced_1.isReduced(aa1) || reduced_1.isReduced(aa2) || reduced_1.isReduced(aa3)) {\n                        return reduced_1.reduced([reduced_1.unreduced(aa1), reduced_1.unreduced(aa2), reduced_1.unreduced(aa3)]);\n                    }\n                    return [aa1, aa2, aa3];\n                }\n            ];\n        }\n        default:\n            return [\n                () => rs.map((r) => r[0]()),\n                (acc) => rs.map((r, i) => r[1](acc[i])),\n                (acc, x) => {\n                    let done = false;\n                    const res = [];\n                    for (let i = 0; i < n; i++) {\n                        let a = rs[i][2](acc[i], x);\n                        if (reduced_1.isReduced(a)) {\n                            done = true;\n                            a = reduced_1.unreduced(a);\n                        }\n                        res[i] = a;\n                    }\n                    return done ? reduced_1.reduced(res) : res;\n                }\n            ];\n    }\n}\nexports.juxtR = juxtR;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Returns function accepting a single index arg used to\n * lookup value in given array. No bounds checks are done.\n *\n * ```\n * [...map(lookup1d([10, 20, 30]), [2,0,1])]\n * // [ 30, 10, 20 ]\n * ```\n *\n * @param src source data\n */\nfunction lookup1d(src) {\n    return (i) => src[i];\n}\nexports.lookup1d = lookup1d;\n/**\n * Returns function accepting a single `[x, y]` index tuple,\n * used to lookup value in given array. Useful for transducers\n * processing 2D data. **Note**: The source data MUST be in\n * row major linearized format, i.e. 1D representation of 2D data\n * (pixel buffer). No bounds checks are done.\n *\n * ```\n * [...map(lookup2d([...range(9)], 3), range2d(2, -1, 0, 3))]\n * // [ 2, 1, 0, 5, 4, 3, 8, 7, 6 ]\n * ```\n *\n * @param src source data\n * @param width number of items along X (columns)\n */\nfunction lookup2d(src, width) {\n    return (i) => src[i[0] + i[1] * width];\n}\nexports.lookup2d = lookup2d;\n/**\n * Same as `lookup2d()`, but for 3D data. The index ordering of the\n * source data MUST be in Z, Y, X order (i.e. a stack of row major 2D slices).\n * No bounds checks are done.\n *\n * @param src source data\n * @param width number of items along X (columns)\n * @param height number of items along Y (rows)\n */\nfunction lookup3d(src, width, height) {\n    const stridez = width * height;\n    return (i) => src[i[0] + i[1] * width + i[2] * stridez];\n}\nexports.lookup3d = lookup3d;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isOdd(x) {\n    return (x % 2) !== 0;\n}\nexports.isOdd = isOdd;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar is_odd_1 = require(\"@thi.ng/checks/is-odd\");\nexports.odd = is_odd_1.isOdd;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Returns last element of given array.\n *\n * @param x\n */\nfunction peek(x) {\n    return x[x.length - 1];\n}\nexports.peek = peek;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction* repeat(x, n = Infinity) {\n    while (n-- > 0) {\n        yield x;\n    }\n}\nexports.repeat = repeat;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst repeat_1 = require(\"../iter/repeat\");\nconst tuples_1 = require(\"../iter/tuples\");\n/**\n * If `weights` are given, it must be the same size as `choices`. If omitted,\n * each choice will have same probability.\n *\n * https://www.electricmonk.nl/log/2009/12/23/weighted-random-distribution/\n *\n * @param choices\n * @param weights\n */\nfunction weightedRandom(choices, weights) {\n    const n = choices.length;\n    const opts = [...tuples_1.tuples(choices, weights || repeat_1.repeat(1))].sort((a, b) => b[1] - a[1]);\n    let total = 0, i, r, sum;\n    for (i = 0; i < n; i++) {\n        total += weights[i];\n    }\n    return () => {\n        r = Math.random() * total;\n        sum = total;\n        for (i = 0; i < n; i++) {\n            sum -= opts[i][1];\n            if (sum <= r) {\n                return opts[i][0];\n            }\n        }\n    };\n}\nexports.weightedRandom = weightedRandom;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction* repeatedly(fn, n = Infinity) {\n    while (n-- > 0) {\n        yield fn();\n    }\n}\nexports.repeatedly = repeatedly;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst weighted_random_1 = require(\"../func/weighted-random\");\nconst repeatedly_1 = require(\"./repeatedly\");\n/**\n * Returns an infinite iterator of random choices and their (optional)\n * weights. If `weights` is given, it must have at least the same size\n * as `choices`. If omitted, each choice will have same probability.\n *\n * See: `weightedRandom()`\n *\n * ```\n * transduce(take(1000), frequencies(), choices(\"abcd\", [1, 0.5, 0.25, 0.125]))\n * // Map { 'c' => 132, 'a' => 545, 'b' => 251, 'd' => 72 }\n * ```\n *\n * @param choices\n * @param weights\n */\nfunction choices(choices, weights) {\n    return repeatedly_1.repeatedly(weights ?\n        weighted_random_1.weightedRandom(choices, weights) :\n        () => choices[(Math.random() * choices.length) | 0]);\n}\nexports.choices = choices;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst choices_1 = require(\"../iter/choices\");\nconst take_1 = require(\"../xform/take\");\n/**\n * Generates and returns a random string of `len` characters (default\n * 4), plus optional given `prefix` and using only provided `syms`\n * characters (default lowercase a-z).\n *\n * ```\n * randomID()\n * \"qgdt\"\n *\n * randomID(8, \"id-\", \"0123456789ABCDEF\")\n * \"id-94EF6E1A\"\n * ```\n *\n * @param len\n * @param prefix\n * @param syms\n */\nexports.randomID = (len = 4, prefix = \"\", syms = \"abcdefghijklmnopqrstuvwxyz\") => [prefix, ...take_1.take(len, choices_1.choices(syms))].join(\"\");\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Helper function to (re)provide given iterable in iterator form.\n *\n * @param src\n */\nfunction* asIterable(src) {\n    yield* src;\n}\nexports.asIterable = asIterable;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ensure_iterable_1 = require(\"../func/ensure-iterable\");\n/**\n * Yields iterator producing concatenation of given iterables.\n * Undefined & null inputs are silently ignored, however any\n * such values produced or contained in an input will remain.\n *\n * ```\n * [...concat([1, 2, 3], null, [4, 5])]\n * // [ 1, 2, 3, 4, 5 ]\n *\n * [...concat([1, 2, 3, undefined], null, [4, 5])]\n * // [ 1, 2, 3, undefined, 4, 5 ]\n * ```\n *\n * @param xs\n */\nfunction* concat(...xs) {\n    for (let x of xs) {\n        x != null && (yield* ensure_iterable_1.ensureIterable(x));\n    }\n}\nexports.concat = concat;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction* cycle(input) {\n    let cache = [];\n    for (let i of input) {\n        cache.push(i);\n        yield i;\n    }\n    if (cache.length > 0) {\n        while (true) {\n            yield* cache;\n        }\n    }\n}\nexports.cycle = cycle;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction* iterate(fn, seed) {\n    while (true) {\n        yield seed;\n        seed = fn(seed);\n    }\n}\nexports.iterate = iterate;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction* keys(x) {\n    for (let k in x) {\n        if (x.hasOwnProperty(k)) {\n            yield k;\n        }\n    }\n}\nexports.keys = keys;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Yields sequence of `n+1` monotonically increasing numbers in the\n * closed interval (0.0 .. 1.0). If `n <= 0`, yields nothing.\n *\n * ```\n * [...normRange(4)]\n * // [0, 0.25, 0.5, 0.75, 1.0]\n * ```\n *\n * @param n number of steps\n * @param inclLast include last value (i.e. `1.0`)\n */\nfunction* normRange(n, inclLast = true) {\n    if (n > 0) {\n        for (let i = 0, m = inclLast ? n + 1 : n; i < m; i++) {\n            yield i / n;\n        }\n    }\n}\nexports.normRange = normRange;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction* pairs(x) {\n    for (let k in x) {\n        if (x.hasOwnProperty(k)) {\n            yield [k, x[k]];\n        }\n    }\n}\nexports.pairs = pairs;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst illegal_arguments_1 = require(\"@thi.ng/errors/illegal-arguments\");\nconst ensure_array_1 = require(\"../func/ensure-array\");\nconst range_1 = require(\"./range\");\nfunction* permutations(...src) {\n    const n = src.length - 1;\n    if (n < 0) {\n        return;\n    }\n    const step = new Array(n + 1).fill(0);\n    const realized = src.map(ensure_array_1.ensureArrayLike);\n    const total = realized.reduce((acc, x) => acc * x.length, 1);\n    for (let i = 0; i < total; i++) {\n        const tuple = [];\n        for (let j = n; j >= 0; j--) {\n            const r = realized[j];\n            let s = step[j];\n            if (s === r.length) {\n                step[j] = s = 0;\n                j > 0 && (step[j - 1]++);\n            }\n            tuple[j] = r[s];\n        }\n        step[n]++;\n        yield tuple;\n    }\n}\nexports.permutations = permutations;\n/**\n * Iterator yielding the Cartesian Product for `n` items of `m` values\n * each. If `m` is not given, defaults to value of `n`. The range of `m`\n * is `0..m-1`. The optional `offsets` array can be used to define start\n * values for each dimension.\n *\n * ```\n * [...permutationsN(2)]\n * // [ [0, 0], [0, 1], [1, 0], [1, 1] ]\n *\n * [...permutationsN(2, 3)]\n * // [ [0, 0], [0, 1], [0, 2],\n * //   [1, 0], [1, 1], [1, 2],\n * //   [2, 0], [2, 1], [2, 2] ]\n *\n * [...permutationsN(2, 3, [10, 20])]\n * // [ [ 10, 20 ], [ 10, 21 ], [ 11, 20 ], [ 11, 21 ] ]\n * ```\n *\n * @param n\n * @param m\n * @param offsets\n */\nfunction permutationsN(n, m = n, offsets) {\n    if (offsets && offsets.length < n) {\n        illegal_arguments_1.illegalArgs(`insufficient offsets, got ${offsets.length}, needed ${n}`);\n    }\n    const seqs = [];\n    while (--n >= 0) {\n        const o = offsets ? offsets[n] : 0;\n        seqs[n] = range_1.range(o, o + m);\n    }\n    return permutations.apply(null, seqs);\n}\nexports.permutationsN = permutationsN;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst illegal_arity_1 = require(\"@thi.ng/errors/illegal-arity\");\nconst range_1 = require(\"./range\");\nfunction* range3d(...args) {\n    let fromX, toX, fromY, toY, fromZ, toZ, stepX, stepY, stepZ;\n    switch (args.length) {\n        case 9:\n            stepX = args[6];\n            stepY = args[7];\n            stepZ = args[8];\n        case 6:\n            [fromX, toX, fromY, toY, fromZ, toZ] = args;\n            break;\n        case 3:\n            [toX, toY, toZ] = args;\n            fromX = fromY = fromZ = 0;\n            break;\n        default:\n            illegal_arity_1.illegalArity(args.length);\n    }\n    const rx = range_1.range(fromX, toX, stepX);\n    const ry = range_1.range(fromY, toY, stepY);\n    for (let z of range_1.range(fromZ, toZ, stepZ)) {\n        for (let y of ry) {\n            for (let x of rx) {\n                yield [x, y, z];\n            }\n        }\n    }\n}\nexports.range3d = range3d;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ensure_array_1 = require(\"../func/ensure-array\");\n/**\n * Yields iterator which consumes input and yield its values in reverse\n * order. Important: Input MUST be finite.\n *\n * ```\n * [...tx.reverse(\"hello world\")]\n * // [ \"d\", \"l\", \"r\", \"o\", \"w\", \" \", \"o\", \"l\", \"l\", \"e\", \"h\" ]\n * ```\n *\n * @param input\n */\nfunction* reverse(input) {\n    const _input = ensure_array_1.ensureArray(input);\n    let n = _input.length;\n    while (--n >= 0) {\n        yield _input[n];\n    }\n}\nexports.reverse = reverse;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction* vals(x) {\n    for (let k in x) {\n        if (x.hasOwnProperty(k)) {\n            yield x[k];\n        }\n    }\n}\nexports.vals = vals;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst illegal_arguments_1 = require(\"@thi.ng/errors/illegal-arguments\");\nconst ensure_array_1 = require(\"../func/ensure-array\");\n/**\n * Yields iterator of `src` with the last `n` values of `src` prepended\n * at the beginning (if `left` is truthy) and/or the first `n` values\n * appended at the end (if `right` is truthy). Wraps both sides by\n * default and throws error if `n` < 0 or larger than `src.length`.\n *\n * @param src\n * @param n\n * @param left\n * @param right\n */\nfunction* wrap(src, n = 1, left = true, right = true) {\n    const _src = ensure_array_1.ensureArray(src);\n    (n < 0 || n > _src.length) && illegal_arguments_1.illegalArgs(`wrong number of wrap items: got ${n}, but max: ${_src.length}`);\n    if (left) {\n        for (let m = _src.length, i = m - n; i < m; i++) {\n            yield _src[i];\n        }\n    }\n    yield* _src;\n    if (right) {\n        for (let i = 0; i < n; i++) {\n            yield _src[i];\n        }\n    }\n}\nexports.wrap = wrap;\n","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./iterator\"));\n__export(require(\"./reduce\"));\n__export(require(\"./reduced\"));\n__export(require(\"./run\"));\n__export(require(\"./step\"));\n__export(require(\"./transduce\"));\n__export(require(\"./rfn/add\"));\n__export(require(\"./rfn/assoc-map\"));\n__export(require(\"./rfn/assoc-obj\"));\n__export(require(\"./rfn/conj\"));\n__export(require(\"./rfn/count\"));\n__export(require(\"./rfn/div\"));\n__export(require(\"./rfn/every\"));\n__export(require(\"./rfn/fill\"));\n__export(require(\"./rfn/frequencies\"));\n__export(require(\"./rfn/group-binary\"));\n__export(require(\"./rfn/group-by-map\"));\n__export(require(\"./rfn/group-by-obj\"));\n__export(require(\"./rfn/last\"));\n__export(require(\"./rfn/max-compare\"));\n__export(require(\"./rfn/max\"));\n__export(require(\"./rfn/mean\"));\n__export(require(\"./rfn/min-compare\"));\n__export(require(\"./rfn/min\"));\n__export(require(\"./rfn/mul\"));\n__export(require(\"./rfn/push-copy\"));\n__export(require(\"./rfn/push\"));\n__export(require(\"./rfn/reductions\"));\n__export(require(\"./rfn/some\"));\n__export(require(\"./rfn/str\"));\n__export(require(\"./rfn/sub\"));\n__export(require(\"./xform/base64\"));\n__export(require(\"./xform/benchmark\"));\n__export(require(\"./xform/bits\"));\n__export(require(\"./xform/cat\"));\n__export(require(\"./xform/convolve\"));\n__export(require(\"./xform/dedupe\"));\n__export(require(\"./xform/delayed\"));\n__export(require(\"./xform/distinct\"));\n__export(require(\"./xform/drop-nth\"));\n__export(require(\"./xform/drop-while\"));\n__export(require(\"./xform/drop\"));\n__export(require(\"./xform/duplicate\"));\n__export(require(\"./xform/filter\"));\n__export(require(\"./xform/filter-fuzzy\"));\n__export(require(\"./xform/flatten-with\"));\n__export(require(\"./xform/flatten\"));\n__export(require(\"./xform/hex-dump\"));\n__export(require(\"./xform/indexed\"));\n__export(require(\"./xform/interleave\"));\n__export(require(\"./xform/interpose\"));\n__export(require(\"./xform/keep\"));\n__export(require(\"./xform/labeled\"));\n__export(require(\"./xform/map-deep\"));\n__export(require(\"./xform/map-indexed\"));\n__export(require(\"./xform/map-keys\"));\n__export(require(\"./xform/map-nth\"));\n__export(require(\"./xform/map-vals\"));\n__export(require(\"./xform/map\"));\n__export(require(\"./xform/mapcat\"));\n__export(require(\"./xform/match-first\"));\n__export(require(\"./xform/match-last\"));\n__export(require(\"./xform/moving-average\"));\n__export(require(\"./xform/moving-median\"));\n__export(require(\"./xform/multiplex\"));\n__export(require(\"./xform/multiplex-obj\"));\n__export(require(\"./xform/noop\"));\n__export(require(\"./xform/pad-last\"));\n__export(require(\"./xform/page\"));\n__export(require(\"./xform/partition-bits\"));\n__export(require(\"./xform/partition-by\"));\n__export(require(\"./xform/partition-of\"));\n__export(require(\"./xform/partition-sort\"));\n__export(require(\"./xform/partition-sync\"));\n__export(require(\"./xform/partition\"));\n__export(require(\"./xform/pluck\"));\n__export(require(\"./xform/rename\"));\n__export(require(\"./xform/sample\"));\n__export(require(\"./xform/scan\"));\n__export(require(\"./xform/select-keys\"));\n__export(require(\"./xform/side-effect\"));\n__export(require(\"./xform/sliding-window\"));\n__export(require(\"./xform/stream-shuffle\"));\n__export(require(\"./xform/stream-sort\"));\n__export(require(\"./xform/struct\"));\n__export(require(\"./xform/swizzle\"));\n__export(require(\"./xform/take-nth\"));\n__export(require(\"./xform/take-last\"));\n__export(require(\"./xform/take-while\"));\n__export(require(\"./xform/take\"));\n__export(require(\"./xform/throttle\"));\n__export(require(\"./xform/throttle-time\"));\n__export(require(\"./xform/trace\"));\n__export(require(\"./xform/utf8\"));\n__export(require(\"./xform/word-wrap\"));\n__export(require(\"./func/binary-search\"));\n__export(require(\"./func/comp\"));\n__export(require(\"./func/compr\"));\n__export(require(\"./func/constantly\"));\n__export(require(\"./func/deep-transform\"));\n__export(require(\"./func/delay\"));\n__export(require(\"./func/ensure-array\"));\n__export(require(\"./func/ensure-iterable\"));\n__export(require(\"./func/even\"));\n__export(require(\"./func/fuzzy-match\"));\n__export(require(\"./func/hex\"));\n__export(require(\"./func/identity\"));\n__export(require(\"./func/juxt\"));\n__export(require(\"./func/juxtr\"));\n__export(require(\"./func/key-selector\"));\n__export(require(\"./func/lookup\"));\n__export(require(\"./func/odd\"));\n__export(require(\"./func/peek\"));\n__export(require(\"./func/random-id\"));\n__export(require(\"./func/renamer\"));\n__export(require(\"./func/swizzler\"));\n__export(require(\"./func/weighted-random\"));\n__export(require(\"./iter/as-iterable\"));\n__export(require(\"./iter/choices\"));\n__export(require(\"./iter/concat\"));\n__export(require(\"./iter/cycle\"));\n__export(require(\"./iter/iterate\"));\n__export(require(\"./iter/keys\"));\n__export(require(\"./iter/norm-range\"));\n__export(require(\"./iter/pairs\"));\n__export(require(\"./iter/permutations\"));\n__export(require(\"./iter/range\"));\n__export(require(\"./iter/range2d\"));\n__export(require(\"./iter/range3d\"));\n__export(require(\"./iter/repeat\"));\n__export(require(\"./iter/repeatedly\"));\n__export(require(\"./iter/reverse\"));\n__export(require(\"./iter/tuples\"));\n__export(require(\"./iter/vals\"));\n__export(require(\"./iter/wrap\"));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Built-in event ID constants\nexports.EV_SET_VALUE = \"--set-value\";\nexports.EV_UPDATE_VALUE = \"--update-value\";\nexports.EV_TOGGLE_VALUE = \"--toggle-value\";\n// Built-in side effect ID constants\nexports.FX_CANCEL = \"--cancel\";\nexports.FX_DISPATCH = \"--dispatch\";\nexports.FX_DISPATCH_ASYNC = \"--dispatch-async\";\nexports.FX_DISPATCH_NOW = \"--dispatch-now\";\nexports.FX_DELAY = \"--delay\";\nexports.FX_FETCH = \"--fetch\";\nexports.FX_STATE = \"--state\";\n/**\n * Event ID to trigger redo action.\n * See `EventBus.addBuiltIns()` for further details.\n * Also see `snapshot()` interceptor docs.\n */\nexports.EV_REDO = \"--redo\";\n/**\n * Event ID to trigger undo action.\n * See `EventBus.addBuiltIns()` for further details.\n * Also see `snapshot()` interceptor docs.\n */\nexports.EV_UNDO = \"--undo\";\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isPromise(x) {\n    return x instanceof Promise;\n}\nexports.isPromise = isPromise;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst atom_1 = require(\"@thi.ng/atom/atom\");\nconst implements_function_1 = require(\"@thi.ng/checks/implements-function\");\nconst is_array_1 = require(\"@thi.ng/checks/is-array\");\nconst is_function_1 = require(\"@thi.ng/checks/is-function\");\nconst is_promise_1 = require(\"@thi.ng/checks/is-promise\");\nconst illegal_arguments_1 = require(\"@thi.ng/errors/illegal-arguments\");\nconst paths_1 = require(\"@thi.ng/paths\");\nconst api = require(\"./api\");\nconst FX_CANCEL = api.FX_CANCEL;\nconst FX_DISPATCH_NOW = api.FX_DISPATCH_NOW;\nconst FX_STATE = api.FX_STATE;\n/**\n * Batched event processor for using composable interceptors for event\n * handling and side effects to execute the result of handled events.\n *\n * Events processed by this class are simple 2-element tuples/arrays of\n * this form: `[\"event-id\", payload?]`, where the `payload` is optional\n * and can be of any type.\n *\n * Events are processed by registered handlers which transform each\n * event into a number of side effect descriptions to be executed later.\n * This separation ensures event handlers themselves are pure functions\n * and leads to more efficient reuse of side effecting operations. The\n * pure data nature until the last stage of processing (the application\n * side effects) too means that event flow can be much easier inspected\n * and debugged.\n *\n * In this model a single event handler itself is an array of objects\n * with `pre` and/or `post` keys and functions attached to each key.\n * These functions are called interceptors, since each intercepts the\n * processing of an event and can contribute their own side effects.\n * Each event's interceptor chain is processed bi-directionally (`pre`\n * in forward, `post` in reverse order) and the effects returned from\n * each interceptor are merged/collected. The outcome of this setup is a\n * more aspect-oriented, composable approach to event handling and\n * allows to inject common, re-usable behaviors for multiple event types\n * (logging, validation, undo/redo triggers etc.).\n *\n * Side effects are only processed after all event handlers have run.\n * Furthermore, their order of execution can be configured with optional\n * priorities.\n *\n * See for further details:\n *\n * - `processQueue()`\n * - `processEvent()`\n * - `processEffects()`\n * - `mergeEffects()`\n *\n * The overall approach of this type of event processing is heavily\n * based on the pattern initially pioneered by @Day8/re-frame, with the\n * following differences:\n *\n * - stateless (see `EventBus` for the more common stateful alternative)\n * - standalone implementation (no assumptions about surrounding\n *   context/framework)\n * - manual control over event queue processing\n * - supports event cancellation (via FX_CANCEL side effect)\n * - side effect collection (multiple side effects for same effect type\n *   per frame)\n * - side effect priorities (to control execution order)\n * - dynamic addition/removal of handlers & effects\n */\nclass StatelessEventBus {\n    /**\n     * Creates a new event bus instance with given handler and effect\n     * definitions (all optional).\n     *\n     * In addition to the user provided handlers & effects, a number of\n     * built-ins are added automatically. See `addBuiltIns()`. User\n     * handlers can override built-ins.\n     *\n     * @param handlers\n     * @param effects\n     */\n    constructor(handlers, effects) {\n        this.handlers = {};\n        this.effects = {};\n        this.eventQueue = [];\n        this.priorities = [];\n        this.addBuiltIns();\n        if (handlers) {\n            this.addHandlers(handlers);\n        }\n        if (effects) {\n            this.addEffects(effects);\n        }\n    }\n    /**\n     * Adds built-in event & side effect handlers. Also see additional\n     * built-ins defined by the stateful `EventBus` extension of this\n     * class, as well as comments for these class methods:\n     *\n     * - `mergeEffects()`\n     * - `processEvent()`\n     *\n     * ### Handlers\n     *\n     * currently none...\n     *\n     * ### Side effects\n     *\n     * #### `FX_CANCEL`\n     *\n     * If assigned `true`, cancels processing of current event, though\n     * still applies any side effects already accumulated.\n     *\n     * #### `FX_DISPATCH`\n     *\n     * Dispatches assigned events to be processed in next frame.\n     *\n     * #### `FX_DISPATCH_ASYNC`\n     *\n     * Async wrapper for promise based side effects.\n     *\n     * #### `FX_DISPATCH_NOW`\n     *\n     * Dispatches assigned events as part of currently processed event\n     * queue (no delay).\n     *\n     * #### `FX_DELAY`\n     *\n     * Async side effect. Only to be used in conjunction with\n     * `FX_DISPATCH_ASYNC`. Triggers given event after `x` milliseconds.\n     *\n     * ```\n     * // this triggers `[EV_SUCCESS, \"ok\"]` event after 1000 ms\n     * { [FX_DISPATCH_ASYNC]: [FX_DELAY, [1000, \"ok\"], EV_SUCCESS, EV_ERROR] }\n     * ```\n     *\n     * #### `FX_FETCH`\n     *\n     * Async side effect. Only to be used in conjunction with\n     * `FX_DISPATCH_ASYNC`. Performs `fetch()` HTTP request and triggers\n     * success with received response, or if there was an error with\n     * response's `statusText`. The error event is only triggered if the\n     * fetched response's `ok` field is non-truthy.\n     *\n     * - https://developer.mozilla.org/en-US/docs/Web/API/Response/ok\n     * - https://developer.mozilla.org/en-US/docs/Web/API/Response/statusText\n     *\n     * ```\n     * // fetches \"foo.json\" and then dispatches EV_SUCCESS or EV_ERROR event\n     * { [FX_DISPATCH_ASYNC]: [FX_FETCH, \"foo.json\", EV_SUCCESS, EV_ERROR] }\n     * ```\n     */\n    addBuiltIns() {\n        this.addEffects({\n            [api.FX_DISPATCH]: [(e) => this.dispatch(e), -999],\n            [api.FX_DISPATCH_ASYNC]: [([id, arg, success, err]) => {\n                    const fx = this.effects[id];\n                    if (fx) {\n                        const p = fx(arg, this);\n                        if (is_promise_1.isPromise(p)) {\n                            p.then((res) => this.dispatch([success, res]))\n                                .catch((e) => this.dispatch([err, e]));\n                        }\n                        else {\n                            console.warn(\"async effect did not return Promise\");\n                        }\n                    }\n                    else {\n                        console.warn(`skipping invalid async effect: ${id}`);\n                    }\n                }, -999],\n            [api.FX_DELAY]: [([x, body]) => new Promise((res) => setTimeout(() => res(body), x)),\n                1000],\n            [api.FX_FETCH]: [(req) => fetch(req).then((resp) => {\n                    if (!resp.ok) {\n                        throw new Error(resp.statusText);\n                    }\n                    return resp;\n                }), 1000]\n        });\n    }\n    addHandler(id, spec) {\n        const iceps = is_array_1.isArray(spec) ?\n            spec.map(asInterceptor) :\n            is_function_1.isFunction(spec) ? [{ pre: spec }] : [spec];\n        if (iceps.length > 0) {\n            if (this.handlers[id]) {\n                this.removeHandler(id);\n                console.warn(`overriding handler for ID: ${id}`);\n            }\n            this.handlers[id] = iceps;\n        }\n        else {\n            illegal_arguments_1.illegalArgs(`no handlers in spec for ID: ${id}`);\n        }\n    }\n    addHandlers(specs) {\n        for (let id in specs) {\n            this.addHandler(id, specs[id]);\n        }\n    }\n    addEffect(id, fx, priority = 1) {\n        if (this.effects[id]) {\n            this.removeEffect(id);\n            console.warn(`overriding effect for ID: ${id}`);\n        }\n        this.effects[id] = fx;\n        const p = [id, priority];\n        const priors = this.priorities;\n        for (let i = 0; i < priors.length; i++) {\n            if (p[1] < priors[i][1]) {\n                priors.splice(i, 0, p);\n                return;\n            }\n        }\n        priors.push(p);\n    }\n    addEffects(specs) {\n        for (let id in specs) {\n            const fx = specs[id];\n            if (is_array_1.isArray(fx)) {\n                this.addEffect(id, fx[0], fx[1]);\n            }\n            else {\n                this.addEffect(id, fx);\n            }\n        }\n    }\n    /**\n     * Prepends given interceptors (or interceptor functions) to\n     * selected handlers. If no handler IDs are given, applies\n     * instrumentation to all currently registered handlers.\n     *\n     * @param inject\n     * @param ids\n     */\n    instrumentWith(inject, ids) {\n        const iceps = inject.map(asInterceptor);\n        const handlers = this.handlers;\n        for (let id of ids || Object.keys(handlers)) {\n            const h = handlers[id];\n            if (h) {\n                handlers[id] = iceps.concat(h);\n            }\n        }\n    }\n    removeHandler(id) {\n        delete this.handlers[id];\n    }\n    removeHandlers(ids) {\n        for (let id of ids) {\n            this.removeHandler(id);\n        }\n    }\n    removeEffect(id) {\n        delete this.effects[id];\n        const p = this.priorities;\n        for (let i = p.length - 1; i >= 0; i--) {\n            if (id === p[i][0]) {\n                p.splice(i, 1);\n                return;\n            }\n        }\n    }\n    removeEffects(ids) {\n        for (let id of ids) {\n            this.removeEffect(id);\n        }\n    }\n    /**\n     * If called during event processing, returns current side effect\n     * accumulator / interceptor context. Otherwise returns nothing.\n     */\n    context() {\n        return this.currCtx;\n    }\n    /**\n     * Adds given events to event queue to be processed by\n     * `processQueue()` later on. It's the user's responsibility to call\n     * that latter function repeatedly in a timely manner, preferably\n     * via `requestAnimationFrame()` or similar.\n     *\n     * @param e\n     */\n    dispatch(...e) {\n        this.eventQueue.push(...e);\n    }\n    /**\n     * Adds given events to whatever is the current event queue. If\n     * triggered via the `FX_DISPATCH_NOW` side effect from an event\n     * handler / interceptor, the event will still be executed in the\n     * currently active batch / frame. If called from elsewhere, the\n     * result is the same as calling `dispatch()`.\n     *\n     * @param e\n     */\n    dispatchNow(...e) {\n        (this.currQueue || this.eventQueue).push(...e);\n    }\n    /**\n     * Dispatches given event after `delay` milliseconds (by default\n     * 17). Note: Since events are only processed by calling\n     * `processQueue()`, it's the user's responsibility to call that\n     * latter function repeatedly in a timely manner, preferably via\n     * `requestAnimationFrame()` or similar.\n     *\n     * @param e\n     * @param delay\n     */\n    dispatchLater(e, delay = 17) {\n        setTimeout(() => this.dispatch(e), delay);\n    }\n    /**\n     * Triggers processing of current event queue and returns `true` if\n     * any events have been processed.\n     *\n     * If an event handler triggers the `FX_DISPATCH_NOW` side effect,\n     * the new event will be added to the currently processed batch and\n     * therefore executed in the same frame. Also see `dispatchNow()`.\n     *\n     * An optional `ctx` (context) object can be provided, which is used\n     * to collect any side effect definitions during processing. This\n     * can be useful for debugging, inspection or post-processing\n     * purposes.\n     *\n     * @param ctx\n     */\n    processQueue(ctx) {\n        if (this.eventQueue.length > 0) {\n            this.currQueue = [...this.eventQueue];\n            this.eventQueue.length = 0;\n            ctx = this.currCtx = ctx || {};\n            for (let e of this.currQueue) {\n                this.processEvent(ctx, e);\n            }\n            this.currQueue = this.currCtx = undefined;\n            this.processEffects(ctx);\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Processes a single event using its configured handler/interceptor\n     * chain. Logs warning message and skips processing if no handler is\n     * available for the event type.\n     *\n     * The array of interceptors is processed in bi-directional order.\n     * First any `pre` interceptors are processed in forward order. Then\n     * `post` interceptors are processed in reverse.\n     *\n     * Each interceptor can return a result object of side effects,\n     * which are being merged and collected for `processEffects()`.\n     *\n     * Any interceptor can trigger zero or more known side effects, each\n     * (side effect) will be collected in an array to support multiple\n     * invocations of the same effect type per frame. If no side effects\n     * are requested, an interceptor can return `undefined`.\n     *\n     * Processing of the current event stops immediately, if an\n     * interceptor sets the `FX_CANCEL` side effect key to `true`.\n     * However, the results of any previous interceptors (incl. the one\n     * which cancelled) are kept and processed further as usual.\n     *\n     * @param ctx\n     * @param e\n     */\n    processEvent(ctx, e) {\n        const iceps = this.handlers[e[0]];\n        if (!iceps) {\n            console.warn(`missing handler for event type: ${e[0].toString()}`);\n            return;\n        }\n        const n = iceps.length - 1;\n        let hasPost = false;\n        for (let i = 0; i <= n && !ctx[FX_CANCEL]; i++) {\n            const icep = iceps[i];\n            if (icep.pre) {\n                this.mergeEffects(ctx, icep.pre(ctx[FX_STATE], e, this, ctx));\n            }\n            hasPost = hasPost || !!icep.post;\n        }\n        if (!hasPost) {\n            return;\n        }\n        for (let i = n; i >= 0 && !ctx[FX_CANCEL]; i--) {\n            const icep = iceps[i];\n            if (icep.post) {\n                this.mergeEffects(ctx, icep.post(ctx[FX_STATE], e, this, ctx));\n            }\n        }\n    }\n    /**\n     * Takes a collection of side effects generated during event\n     * processing and applies them in order of configured priorities.\n     *\n     * @param ctx\n     */\n    processEffects(ctx) {\n        const effects = this.effects;\n        for (let p of this.priorities) {\n            const id = p[0];\n            const val = ctx[id];\n            if (val !== undefined) {\n                const fn = effects[id];\n                if (id !== FX_STATE) {\n                    for (let v of val) {\n                        fn(v, this, ctx);\n                    }\n                }\n                else {\n                    fn(val, this, ctx);\n                }\n            }\n        }\n    }\n    /**\n     * Merges the new side effects returned from an interceptor into the\n     * internal effect accumulator.\n     *\n     * Any events assigned to the `FX_DISPATCH_NOW` effect key are\n     * immediately added to the currently active event batch.\n     *\n     * If an interceptor wishes to cause multiple invocations of a\n     * single side effect type (e.g. dispatch multiple other events), it\n     * MUST return an array of these values. The only exceptions to this\n     * are the following effects, which for obvious reasons can only\n     * accept a single value.\n     *\n     * **Note:** the `FX_STATE` effect is not actually defined by this\n     * class here, but is supported to avoid code duplication in\n     * `StatefulEventBus`.\n     *\n     * - `FX_CANCEL`\n     * - `FX_STATE`\n     *\n     * Because of this support (multiple values), the value of a single\n     * side effect MUST NOT be a nested array itself, or rather its\n     * first item can't be an array.\n     *\n     * For example:\n     *\n     * ```\n     * // interceptor result map to dispatch a single event\n     * { [FX_DISPATCH]: [\"foo\", \"bar\"]}\n     *\n     * // result map format to dispatch multiple events\n     * { [FX_DISPATCH]: [ [\"foo\", \"bar\"], [\"baz\", \"beep\"] ]}\n     * ```\n     *\n     * Any `null` / `undefined` values directly assigned to a side\n     * effect are ignored and will not trigger the effect.\n     *\n     * @param fx\n     * @param ret\n     */\n    mergeEffects(ctx, ret) {\n        if (!ret) {\n            return;\n        }\n        for (let k in ret) {\n            const v = ret[k];\n            if (v == null) {\n                continue;\n            }\n            if (k === FX_STATE || k === FX_CANCEL) {\n                ctx[k] = v;\n            }\n            else if (k === FX_DISPATCH_NOW) {\n                if (is_array_1.isArray(v[0])) {\n                    for (let e of v) {\n                        e && this.dispatchNow(e);\n                    }\n                }\n                else {\n                    this.dispatchNow(v);\n                }\n            }\n            else {\n                ctx[k] || (ctx[k] = []);\n                if (is_array_1.isArray(v[0])) {\n                    for (let e of v) {\n                        e !== undefined && ctx[k].push(e);\n                    }\n                }\n                else {\n                    ctx[k].push(v);\n                }\n            }\n        }\n    }\n}\nexports.StatelessEventBus = StatelessEventBus;\n/**\n * Stateful version of `StatelessEventBus`. Wraps an `IAtom` state\n * container (Atom/Cursor) and provides additional pre-defined event\n * handlers and side effects to manipulate wrapped state. Prefer this\n * as the default implementation for most use cases.\n */\nclass EventBus extends StatelessEventBus {\n    /**\n     * Creates a new event bus instance with given parent state, handler\n     * and effect definitions (all optional). If no state is given,\n     * automatically creates an `Atom` with empty state object.\n     *\n     * In addition to the user provided handlers & effects, a number of\n     * built-ins are added automatically. See `addBuiltIns()`. User\n     * handlers can override built-ins.\n     *\n     * @param state\n     * @param handlers\n     * @param effects\n     */\n    constructor(state, handlers, effects) {\n        super(handlers, effects);\n        this.state = state || new atom_1.Atom({});\n    }\n    /**\n     * Returns value of internal state. Shorthand for:\n     * `bus.state.deref()`\n     */\n    deref() {\n        return this.state.deref();\n    }\n    /**\n     * Adds same built-in event & side effect handlers as in\n     * `StatelessEventBus.addBuiltIns()` and the following additions:\n     *\n     * ### Handlers\n     *\n     * #### `EV_SET_VALUE`\n     *\n     * Resets state path to provided value. See `setIn()`.\n     *\n     * Example event definition:\n     * ```\n     * [EV_SET_VALUE, [\"path.to.value\", val]]\n     * ```\n     *\n     * #### `EV_UPDATE_VALUE`\n     *\n     * Updates a state path's value with provided function and optional\n     * extra arguments. See `updateIn()`.\n     *\n     * Example event definition:\n     * ```\n     * [EV_UPDATE_VALUE, [\"path.to.value\", (x, y) => x + y, 1]]\n     * ```\n     *\n     * #### `EV_TOGGLE_VALUE`\n     *\n     * Negates a boolean state value at given path.\n     *\n     * Example event definition:\n     * ```\n     * [EV_TOGGLE_VALUE, \"path.to.value\"]\n     * ```\n     *\n     * #### `EV_UNDO`\n     *\n     * Calls `ctx[id].undo()` and uses return value as new state.\n     * Assumes `ctx[id]` is a @thi.ng/atom `History` instance, provided\n     * via e.g. `processQueue({ history })`. The event can be triggered\n     * with or without ID. By default `\"history\"` is used as default key\n     * to lookup the `History` instance. Furthermore, an additional\n     * event can be triggered based on if a previous state has been\n     * restored or not (basically, if the undo was successful). This is\n     * useful for resetting/re-initializing stateful resources after a\n     * successful undo action or to notify the user that no more undo's\n     * are possible. The new event will be processed in the same frame\n     * and has access to the (possibly) restored state. The event\n     * structure for these options is shown below:\n     *\n     * ```\n     * // using default ID\n     * bus.dispatch([EV_UNDO]);\n     *\n     * // using custom history ID\n     * bus.dispatch([EV_UNDO, [\"custom\"]]);\n     *\n     * // using custom ID and dispatch another event after undo\n     * bus.dispatch([EV_UNDO, [\"custom\", [\"ev-undo-success\"], [\"ev-undo-fail\"]]]);\n     * ```\n     *\n     * #### `EV_REDO`\n     *\n     * Similar to `EV_UNDO`, but for redo actions.\n     *\n     * ### Side effects\n     *\n     * #### `FX_STATE`\n     *\n     * Resets state atom to provided value (only a single update per\n     * processing frame).\n     */\n    addBuiltIns() {\n        super.addBuiltIns();\n        // handlers\n        this.addHandlers({\n            [api.EV_SET_VALUE]: (state, [_, [path, val]]) => ({ [FX_STATE]: paths_1.setIn(state, path, val) }),\n            [api.EV_UPDATE_VALUE]: (state, [_, [path, fn, ...args]]) => ({ [FX_STATE]: paths_1.updateIn(state, path, fn, ...args) }),\n            [api.EV_TOGGLE_VALUE]: (state, [_, path]) => ({ [FX_STATE]: paths_1.updateIn(state, path, (x) => !x) }),\n            [api.EV_UNDO]: undoHandler(\"undo\"),\n            [api.EV_REDO]: undoHandler(\"redo\"),\n        });\n        // effects\n        this.addEffects({\n            [FX_STATE]: [(state) => this.state.reset(state), -1000],\n        });\n    }\n    /**\n     * Triggers processing of current event queue and returns `true` if\n     * the any of the processed events caused a state change.\n     *\n     * If an event handler triggers the `FX_DISPATCH_NOW` side effect,\n     * the new event will be added to the currently processed batch and\n     * therefore executed in the same frame. Also see `dispatchNow()`.\n     *\n     * If the optional `ctx` arg is provided it will be merged into the\n     * `InterceptorContext` object passed to each interceptor. Since the\n     * merged object is also used to collect triggered side effects,\n     * care must be taken that there're no key name clashes.\n     *\n     * In order to use the built-in `EV_UNDO`, `EV_REDO` events, users\n     * MUST provide a @thi.ng/atom History (or compatible undo history\n     * instance) via the `ctx` arg, e.g.\n     *\n     * ```\n     * bus.processQueue({ history });\n     * ```\n     */\n    processQueue(ctx) {\n        if (this.eventQueue.length > 0) {\n            const prev = this.state.deref();\n            this.currQueue = [...this.eventQueue];\n            this.eventQueue.length = 0;\n            ctx = this.currCtx = Object.assign({}, ctx, { [FX_STATE]: prev });\n            for (let e of this.currQueue) {\n                this.processEvent(ctx, e);\n            }\n            this.currQueue = this.currCtx = undefined;\n            this.processEffects(ctx);\n            return this.state.deref() !== prev;\n        }\n        return false;\n    }\n}\nexports.EventBus = EventBus;\nconst asInterceptor = (i) => is_function_1.isFunction(i) ? { pre: i } : i;\nconst undoHandler = (action) => (_, [__, ev], bus, ctx) => {\n    let id = ev ? ev[0] : \"history\";\n    if (implements_function_1.implementsFunction(ctx[id], action)) {\n        const ok = ctx[id][action]();\n        return {\n            [FX_STATE]: bus.state.deref(),\n            [FX_DISPATCH_NOW]: ev ?\n                ok !== undefined ? ev[1] : ev[2] :\n                undefined,\n        };\n    }\n    else {\n        console.warn(\"no history in context\");\n    }\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst paths_1 = require(\"@thi.ng/paths\");\nconst api_1 = require(\"./api\");\n/**\n * Debug interceptor to log the current event to the console.\n */\nexports.trace = (_, e) => console.log(\"event:\", e);\n/**\n * Higher-order interceptor. Returns interceptor which unpacks payload\n * from event and assigns it as is to given side effect ID. Assigns\n * `true` to side effect if event has no payload.\n *\n * @param fxID side effect ID\n */\nexports.forwardSideFx = (fxID) => (_, [__, body]) => ({ [fxID]: body !== undefined ? body : true });\n/**\n * Higher-order interceptor. Returns interceptor which assigns given\n * event to `FX_DISPATCH` side effect.\n *\n * @param event\n */\nexports.dispatch = (event) => () => ({ [api_1.FX_DISPATCH]: event });\n/**\n * Higher-order interceptor. Returns interceptor which assigns given\n * event to `FX_DISPATCH_NOW` side effect.\n *\n * @param event\n */\nexports.dispatchNow = (event) => () => ({ [api_1.FX_DISPATCH_NOW]: event });\n/**\n * Higher-order interceptor. Returns interceptor which calls\n * `ctx[id].record()`, where `ctx` is the currently active\n * `InterceptorContext` passed to all event handlers and `ctx[id]` is\n * assumed to be a @thi.ng/atom `History` instance, passed to\n * `processQueue()`. The default ID for the history instance is\n * `\"history\"`.\n *\n * Example usage:\n *\n * ```\n * state = new Atom({});\n * history = new History(state);\n * bus = new EventBus(state);\n * // register event handler\n * // each time the `foo` event is triggered, a snapshot of\n * // current app state is recorded first\n * bus.addHandlers({\n *  foo: [snapshot(), valueSetter(\"foo\")]\n * });\n * ...\n * // trigger event\n * bus.dispatch([\"foo\", 23]);\n *\n * // pass history instance via interceptor context to handlers\n * bus.processQueue({ history });\n * ```\n *\n * @param id\n */\nexports.snapshot = (id = \"history\") => (_, __, ___, ctx) => (ctx[id].record());\n/**\n * Higher-order interceptor for validation purposes. Takes a predicate\n * function and an optional interceptor function, which will only be\n * called if the predicate fails for a given event. By default the\n * `FX_CANCEL` side effect is triggered if the predicate failed, thus\n * ensuring the actual event handler for the failed event will not be\n * executed anymore. However, this can be overridden using the error\n * interceptor's result, which is merged into the result of this\n * interceptor.\n *\n * The error interceptor can return any number of other side effects and\n * so be used to dispatch alternative events instead, for example:\n *\n * ```\n * // this interceptor will cause cancellation of current event\n * // and trigger an \"error\" event instead\n * ensurePred(\n *   // a dummy predicate which always fails\n *   () => false\n *   // error interceptor fn\n *   () => ({[FX_DISPATCH_NOW]: [\"error\", \"reason\"]})\n * )\n * ```\n *\n * Note: For this interceptor to work as expected, it needs to be\n * provided BEFORE the main handler in the interceptor list for a given\n * event, i.e.\n *\n * ```\n * [\n *    ensurePred((state, e) => false),\n *    // actual event handler\n *    (state, e) => console.log(\"no one never calls me\")\n * ]\n * ```\n *\n * @param pred predicate applied to given state & event\n * @param err interceptor triggered on predicate failure\n */\nexports.ensurePred = (pred, err) => (state, e, bus) => !pred(state, e, bus) ? Object.assign({ [api_1.FX_CANCEL]: true }, (err ? err(state, e, bus) : null)) :\n    undefined;\n/**\n * Specialization of `ensurePred()` to ensure a state value is less than\n * given max at the time when the event is being processed. The optional\n * `path` fn is used to extract or produce the path for the state value\n * to be validated. If omitted, the event's payload item is interpreted\n * as the value path.\n *\n * For example, without a provided `path` function and for an event of\n * this form: `[\"event-id\", \"foo.bar\"]`, the term `\"foo.bar\"` would be\n * interpreted as path.\n *\n * If the event has this shape: `[\"event-id\", [\"foo.bar\", 23]]`, we must\n * provide `(e) => e[1][0]` as path function to extract `\"foo.bar\"` from\n * the event.\n *\n * @param max\n * @param path path extractor\n * @param err error interceptor\n */\nexports.ensureStateLessThan = (max, path, err) => exports.ensurePred((state, e) => paths_1.getIn(state, path ? path(e) : e[1]) < max, err);\n/**\n * Specialization of `ensurePred()` to ensure a state value is greater\n * than given min. See `ensureStateLessThan()` for further details.\n *\n * @param min\n * @param path path extractor\n * @param err error interceptor\n */\nexports.ensureStateGreaterThan = (min, path, err) => exports.ensurePred((state, e) => paths_1.getIn(state, path ? path(e) : e[1]) > min, err);\n/**\n * Specialization of `ensurePred()` to ensure a state value is within\n * given `min` / `max` closed interval. See `ensureStateLessThan()` for\n * further details.\n *\n * @param min\n * @param max\n * @param path path extractor\n * @param err error interceptor\n */\nexports.ensureStateRange = (min, max, path, err) => exports.ensurePred((state, e) => {\n    const x = paths_1.getIn(state, path ? path(e) : e[1]);\n    return x >= min && x <= max;\n}, err);\n/**\n * Specialization of `ensurePred()` to ensure an event's payload value\n * is within given `min` / `max` closed interval. By default, assumes\n * event format like: `[event-id, value]`. However if `value` is given,\n * the provided function can be used to extract the value to be\n * validated from any event. If the value is outside the given interval,\n * triggers `FX_CANCEL` side effect and if `err` is given, the error\n * interceptor can return any number of other side effects and so be\n * used to dispatch alternative events instead.\n *\n * @param min\n * @param max\n * @param value event value extractor\n * @param err error interceptor\n */\nexports.ensureParamRange = (min, max, value, err) => exports.ensurePred((_, e) => {\n    const x = value ? value(e) : e[1];\n    return x >= min && x <= max;\n}, err);\n/**\n * Higher-order interceptor. Returns new interceptor to set state value\n * at provided path. This allows for dedicated events to set state\n * values more concisely, e.g. given this event definition:\n *\n * ```\n * setFoo: valueSetter(\"foo.bar\")\n * ```\n *\n * ...the `setFoo` event then can be triggered like so to update the\n * state value at `foo.bar`:\n *\n * ```\n * bus.dispatch([\"setFoo\", 23])\n * ```\n *\n * @param path\n * @param tx\n */\nexports.valueSetter = (path, tx) => {\n    const $ = paths_1.setter(path);\n    return (state, [_, val]) => ({ [api_1.FX_STATE]: $(state, tx ? tx(val) : val) });\n};\n/**\n * Higher-order interceptor. Returns new interceptor to update state\n * value at provided path with given function. This allows for dedicated\n * events to update state values more concisely, e.g. given this event\n * definition:\n *\n * ```\n * incFoo: valueUpdater(\"foo.bar\", (x, y) => x + y)\n * ```\n *\n * ...the `incFoo` event then can be triggered like so to update the\n * state value at `foo.bar` (where `1` is the extra arg provided to the\n * update fn:\n *\n * ```\n * bus.dispatch([\"incFoo\", 1]) // results in value = value + 1\n * ```\n *\n * @param path\n * @param fn\n */\nexports.valueUpdater = (path, fn) => {\n    const $ = paths_1.updater(path, fn);\n    return (state, [_, ...args]) => ({ [api_1.FX_STATE]: $(state, ...args) });\n};\n","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./api\"));\n__export(require(\"./event-bus\"));\n__export(require(\"./interceptors\"));\n",null,"export const title = (ctx: any, text: string) => [\n  'h1.s-black',\n  { style: { 'font-weight': 100, 'line-height': '1.2em', 'font-size': '2.5rem' } },\n  text[0],\n  text.slice(1),\n  console.log({ text }),\n]\n","export const paragraph = (...args: Array<any>) => [\n  'p.s-grey',\n  {\n    style: {\n      'font-family': 'Fantasque Sans Mono',\n      'font-weight': 100,\n      'font-size': '0.9rem',\n      'line-height': '1.6em',\n    },\n  },\n  ...args.slice(1),\n]\n","export const link = (ctx: any, href: string, text: string) => [\n  'a.s-blue',\n  {\n    href,\n    style: {\n      'text-decoration': 'none',\n      background: 'linear-gradient(to bottom, transparent 0%, #66C4FF 1%) repeat-x',\n      'background-size': '1px 1px',\n      'background-position': 'left bottom',\n    },\n  },\n  text,\n]\n","import { Atom } from '@thi.ng/atom'\nimport { start } from '@thi.ng/hdom'\nimport * as tx from '@thi.ng/transducers'\nimport * as icep from '@thi.ng/interceptors'\nimport data from './data.json'\nimport { title } from './ui/title'\nimport { paragraph } from './ui/paragraph'\nimport { link } from './ui/link'\n\nconst state = new Atom({\n  selected: '',\n})\n\nconst bus = new icep.EventBus(state, {\n  init: () => ({\n    [icep.FX_STATE]: { selected: '' },\n  }),\n  select: [icep.valueUpdater('selected', (_, y) => y)],\n})\n\nconst navbar = () => {\n  console.log('render navbar')\n  const branch = tx.transduce(\n    tx.map((datum: { title: string }) => [\n      `p.pointer.s-light-grey.s-over${datum.title === state.value.selected ? '.b' : ''}`,\n      {\n        onclick: () => bus.dispatch(['select', datum.title]),\n        style: {\n          'font-family': 'Fantasque Sans Mono',\n          'font-size': '1rem',\n          height: '1.5rem',\n          'line-height': '1.5rem',\n          'padding-bottom': '1px',\n        },\n      },\n\n      datum.title,\n    ]),\n    tx.push(),\n    data,\n  )\n  return () => ['div.pa4.w5', [title, ['#tstack', 'span.s-light-grey', 'gl']], ['div', branch]]\n}\n\nconst intro = [\n  'div.pa5',\n  [title, 'tstackgl'],\n  [\n    paragraph,\n    `tstackgl is a monorepo containing experiments with typescript, `,\n    [link, 'http://regl.party', 'regl'],\n    ', ',\n    [link, 'http://stack.gl', 'stack.gl ecosystem'],\n    ' and ',\n    [link, 'https://github.com/thi-ng/umbrella', '@thi.ng/umbrella'],\n    '.',\n  ],\n]\n\nconst content = () => {\n  console.log('render content', { selected: state.value.selected })\n  return () => [\n    'div.w-100.h-100',\n    state.value.selected === ''\n      ? intro\n      : [\n          'iframe.w-100.h-100',\n          {\n            src: `./${state.value.selected}/index.html`,\n            frameborder: 0,\n            allowfullscreen: true,\n          },\n        ],\n  ]\n}\n\nconst app = () => {\n  console.log('render app')\n  return ['div.h-100.s-bg-white', ['div.h-100.flex', navbar(), content()]]\n}\n\nstart(\n  ({ bus, state }: { bus: icep.EventBus; state: typeof Atom }) =>\n    bus.processQueue() ? app() : null,\n  { ctx: { state, bus } },\n)\n\n// kick off\nbus.dispatch(['init'])\n"]}